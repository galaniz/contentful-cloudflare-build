{"ast":null,"code":"import _regeneratorRuntime from\"/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useState,useEffect}from'react';import{Heading,Form,Paragraph,Flex}from'@contentful/f36-components';import{css}from'emotion';import{/* useCMA, */useSDK}from'@contentful/react-apps-toolkit';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ConfigScreen=function ConfigScreen(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),parameters=_useState2[0],setParameters=_useState2[1];var sdk=useSDK();/*\n     To use the cma, inject it as follows.\n     If it is not needed, you can remove the next line.\n  */ // const cma = useCMA();\nvar onConfigure=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var currentState;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return sdk.app.getCurrentState();case 2:currentState=_context.sent;return _context.abrupt(\"return\",{// Parameters to be persisted as the app configuration.\nparameters:parameters,// In case you don't want to submit any update to app\n// locations, you can just pass the currentState as is\ntargetState:currentState});case 4:case\"end\":return _context.stop();}},_callee);})),[parameters,sdk]);useEffect(function(){// `onConfigure` allows to configure a callback to be\n// invoked when a user attempts to install the app or update\n// its configuration.\nsdk.app.onConfigure(function(){return onConfigure();});},[sdk,onConfigure]);useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var currentParameters;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return sdk.app.getParameters();case 2:currentParameters=_context2.sent;if(currentParameters){setParameters(currentParameters);}// Once preparation has finished, call `setReady` to hide\n// the loading screen and present the app to a user.\nsdk.app.setReady();case 5:case\"end\":return _context2.stop();}},_callee2);}))();},[sdk]);return/*#__PURE__*/_jsx(Flex,{flexDirection:\"column\",className:css({margin:'80px',maxWidth:'800px'}),children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Heading,{children:\"App Config\"}),/*#__PURE__*/_jsx(Paragraph,{children:\"Welcome to your contentful app. This is your config page.\"})]})});};export default ConfigScreen;","map":{"version":3,"names":["React","useCallback","useState","useEffect","Heading","Form","Paragraph","Flex","css","useSDK","jsx","_jsx","jsxs","_jsxs","ConfigScreen","_useState","_useState2","_slicedToArray","parameters","setParameters","sdk","onConfigure","_asyncToGenerator","_regeneratorRuntime","mark","_callee","currentState","wrap","_callee$","_context","prev","next","app","getCurrentState","sent","abrupt","targetState","stop","_callee2","currentParameters","_callee2$","_context2","getParameters","setReady","flexDirection","className","margin","maxWidth","children"],"sources":["/Users/gracielaalaniz/Documents/cloudflare-build/src/locations/ConfigScreen.jsx"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { Heading, Form, Paragraph, Flex } from '@contentful/f36-components';\nimport { css } from 'emotion';\nimport { /* useCMA, */ useSDK } from '@contentful/react-apps-toolkit';\n\nconst ConfigScreen = () => {\n  const [parameters, setParameters] = useState({});\n  const sdk = useSDK();\n  /*\n     To use the cma, inject it as follows.\n     If it is not needed, you can remove the next line.\n  */\n  // const cma = useCMA();\n  const onConfigure = useCallback(async () => {\n    // This method will be called when a user clicks on \"Install\"\n    // or \"Save\" in the configuration screen.\n    // for more details see https://www.contentful.com/developers/docs/extensibility/ui-extensions/sdk-reference/#register-an-app-configuration-hook\n\n    // Get current the state of EditorInterface and other entities\n    // related to this app installation\n    const currentState = await sdk.app.getCurrentState();\n    return {\n      // Parameters to be persisted as the app configuration.\n      parameters,\n      // In case you don't want to submit any update to app\n      // locations, you can just pass the currentState as is\n      targetState: currentState,\n    };\n  }, [parameters, sdk]);\n\n  useEffect(() => {\n    // `onConfigure` allows to configure a callback to be\n    // invoked when a user attempts to install the app or update\n    // its configuration.\n    sdk.app.onConfigure(() => onConfigure());\n  }, [sdk, onConfigure]);\n\n  useEffect(() => {\n    (async () => {\n      // Get current parameters of the app.\n      // If the app is not installed yet, `parameters` will be `null`.\n      const currentParameters = await sdk.app.getParameters();\n      if (currentParameters) {\n        setParameters(currentParameters);\n      }\n      // Once preparation has finished, call `setReady` to hide\n      // the loading screen and present the app to a user.\n      sdk.app.setReady();\n    })();\n  }, [sdk]);\n\n  return (\n    <Flex flexDirection=\"column\" className={css({ margin: '80px', maxWidth: '800px' })}>\n      <Form>\n        <Heading>App Config</Heading>\n        <Paragraph>Welcome to your contentful app. This is your config page.</Paragraph>\n      </Form>\n    </Flex>\n  );\n};\nexport default ConfigScreen;\n"],"mappings":"kaAAA,MAAO,CAAAA,KAAK,EAAIC,WAAW,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC/D,OAASC,OAAO,CAAEC,IAAI,CAAEC,SAAS,CAAEC,IAAI,KAAQ,4BAA4B,CAC3E,OAASC,GAAG,KAAQ,SAAS,CAC7B,OAAS,aAAcC,MAAM,KAAQ,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEtE,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CACzB,IAAAC,SAAA,CAAoCb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAc,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAzCG,UAAU,CAAAF,UAAA,IAAEG,aAAa,CAAAH,UAAA,IAChC,GAAM,CAAAI,GAAG,CAAGX,MAAM,EAAE,CACpB;AACF;AACA;AACA,IAHE,CAIA;AACA,GAAM,CAAAY,WAAW,CAAGpB,WAAW,cAAAqB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAC,QAAA,MAAAC,YAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SAOH,CAAAX,GAAG,CAACY,GAAG,CAACC,eAAe,EAAE,QAA9CP,YAAY,CAAAG,QAAA,CAAAK,IAAA,QAAAL,QAAA,CAAAM,MAAA,UACX,CACL;AACAjB,UAAU,CAAVA,UAAU,CACV;AACA;AACAkB,WAAW,CAAEV,YACf,CAAC,0BAAAG,QAAA,CAAAQ,IAAA,MAAAZ,OAAA,GACF,GAAE,CAACP,UAAU,CAAEE,GAAG,CAAC,CAAC,CAErBjB,SAAS,CAAC,UAAM,CACd;AACA;AACA;AACAiB,GAAG,CAACY,GAAG,CAACX,WAAW,CAAC,iBAAM,CAAAA,WAAW,EAAE,GAAC,CAC1C,CAAC,CAAE,CAACD,GAAG,CAAEC,WAAW,CAAC,CAAC,CAEtBlB,SAAS,CAAC,UAAM,CACdmB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAc,SAAA,MAAAC,iBAAA,QAAAhB,mBAAA,GAAAI,IAAA,UAAAa,UAAAC,SAAA,iBAAAA,SAAA,CAAAX,IAAA,CAAAW,SAAA,CAAAV,IAAA,SAAAU,SAAA,CAAAV,IAAA,SAGiC,CAAAX,GAAG,CAACY,GAAG,CAACU,aAAa,EAAE,QAAjDH,iBAAiB,CAAAE,SAAA,CAAAP,IAAA,CACvB,GAAIK,iBAAiB,CAAE,CACrBpB,aAAa,CAACoB,iBAAiB,CAAC,CAClC,CACA;AACA;AACAnB,GAAG,CAACY,GAAG,CAACW,QAAQ,EAAE,CAAC,wBAAAF,SAAA,CAAAJ,IAAA,MAAAC,QAAA,GACpB,IAAG,CACN,CAAC,CAAE,CAAClB,GAAG,CAAC,CAAC,CAET,mBACET,IAAA,CAACJ,IAAI,EAACqC,aAAa,CAAC,QAAQ,CAACC,SAAS,CAAErC,GAAG,CAAC,CAAEsC,MAAM,CAAE,MAAM,CAAEC,QAAQ,CAAE,OAAQ,CAAC,CAAE,CAAAC,QAAA,cACjFnC,KAAA,CAACR,IAAI,EAAA2C,QAAA,eACHrC,IAAA,CAACP,OAAO,EAAA4C,QAAA,CAAC,YAAU,EAAU,cAC7BrC,IAAA,CAACL,SAAS,EAAA0C,QAAA,CAAC,2DAAyD,EAAY,GAC3E,EACF,CAEX,CAAC,CACD,cAAe,CAAAlC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}