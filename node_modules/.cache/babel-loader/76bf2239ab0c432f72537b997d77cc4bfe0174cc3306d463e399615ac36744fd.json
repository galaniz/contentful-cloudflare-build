{"ast":null,"code":"import _toConsumableArray from \"/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"refKey\", \"ref\"],\n  _excluded2 = [\"onClick\", \"onPress\", \"onKeyDown\", \"onKeyUp\", \"onBlur\"],\n  _excluded3 = [\"onKeyDown\", \"onBlur\", \"onChange\", \"onInput\", \"onChangeText\"],\n  _excluded4 = [\"refKey\", \"ref\"],\n  _excluded5 = [\"onMouseMove\", \"onMouseDown\", \"onClick\", \"onPress\", \"index\", \"item\"],\n  _excluded6 = [\"isInitialMount\", \"highlightedIndex\", \"items\", \"environment\"],\n  _excluded7 = [\"onMouseLeave\", \"refKey\", \"onKeyDown\", \"onBlur\", \"ref\"],\n  _excluded8 = [\"onClick\", \"onKeyDown\", \"refKey\", \"ref\"],\n  _excluded9 = [\"item\", \"index\", \"onMouseMove\", \"onClick\", \"refKey\", \"ref\", \"disabled\"],\n  _excluded10 = [\"onMouseLeave\", \"refKey\", \"ref\"],\n  _excluded11 = [\"item\", \"index\", \"refKey\", \"ref\", \"onMouseMove\", \"onMouseDown\", \"onClick\", \"onPress\", \"disabled\"],\n  _excluded12 = [\"onClick\", \"onPress\", \"refKey\", \"ref\"],\n  _excluded13 = [\"onKeyDown\", \"onChange\", \"onInput\", \"onBlur\", \"onChangeText\", \"refKey\", \"ref\"],\n  _excluded14 = [\"refKey\", \"ref\"],\n  _excluded15 = [\"refKey\", \"ref\", \"onClick\", \"onKeyDown\", \"selectedItem\", \"index\"],\n  _excluded16 = [\"refKey\", \"ref\", \"onKeyDown\", \"onClick\", \"preventKeyAction\"];\nimport PropTypes from 'prop-types';\nimport { Component, cloneElement, useRef, useEffect, useCallback, useLayoutEffect, useReducer, useMemo } from 'react';\nimport { isForwardRef } from 'react-is';\nimport computeScrollIntoView from 'compute-scroll-into-view';\nimport { __assign } from 'tslib';\nvar idCounter = 0;\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\n\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop;\n}\nfunction noop() {}\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node the element that should scroll into view\n * @param {HTMLElement} menuNode the menu element of the component\n */\n\nfunction scrollIntoView(node, menuNode) {\n  if (!node) {\n    return;\n  }\n  var actions = computeScrollIntoView(node, {\n    boundary: menuNode,\n    block: 'nearest',\n    scrollMode: 'if-needed'\n  });\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n      top = _ref.top,\n      left = _ref.left;\n    el.scrollTop = top;\n    el.scrollLeft = left;\n  });\n}\n/**\n * @param {HTMLElement} parent the parent node\n * @param {HTMLElement} child the child node\n * @param {Window} environment The window context where downshift renders.\n * @return {Boolean} whether the parent is the child or the child is in the parent\n */\n\nfunction isOrContainsNode(parent, child, environment) {\n  var result = parent === child || child instanceof environment.Node && parent.contains && parent.contains(child);\n  return result;\n}\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\n\nfunction debounce(fn, time) {\n  var timeoutId;\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n  }\n  function wrapper() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    cancel();\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      fn.apply(void 0, args);\n    }, time);\n  }\n  wrapper.cancel = cancel;\n  return wrapper;\n}\n/**\n * This is intended to be used to compose event handlers.\n * They are executed in order until one of them sets\n * `event.preventDownshiftDefault = true`.\n * @param {...Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\n\nfunction callAllEventHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n  return function (event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    return fns.some(function (fn) {\n      if (fn) {\n        fn.apply(void 0, [event].concat(args));\n      }\n      return event.preventDownshiftDefault || event.hasOwnProperty('nativeEvent') && event.nativeEvent.preventDownshiftDefault;\n    });\n  };\n}\nfunction handleRefs() {\n  for (var _len4 = arguments.length, refs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    refs[_key4] = arguments[_key4];\n  }\n  return function (node) {\n    refs.forEach(function (ref) {\n      if (typeof ref === 'function') {\n        ref(node);\n      } else if (ref) {\n        ref.current = node;\n      }\n    });\n  };\n}\n/**\n * This generates a unique ID for an instance of Downshift\n * @return {String} the unique ID\n */\n\nfunction generateId() {\n  return String(idCounter++);\n}\n/**\n * Resets idCounter to 0. Used for SSR.\n */\n\nfunction resetIdCounter() {\n  idCounter = 0;\n}\n/**\n * Default implementation for status message. Only added when menu is open.\n * Will specify if there are results in the list, and if so, how many,\n * and what keys are relevant.\n *\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\n\nfunction getA11yStatusMessage$1(_ref2) {\n  var isOpen = _ref2.isOpen,\n    resultCount = _ref2.resultCount,\n    previousResultCount = _ref2.previousResultCount;\n  if (!isOpen) {\n    return '';\n  }\n  if (!resultCount) {\n    return 'No results are available.';\n  }\n  if (resultCount !== previousResultCount) {\n    return \"\".concat(resultCount, \" result\").concat(resultCount === 1 ? ' is' : 's are', \" available, use up and down arrow keys to navigate. Press Enter key to select.\");\n  }\n  return '';\n}\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\n\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ? /* istanbul ignore next (preact) */\n  arg[0] : arg;\n  if (!arg && defaultValue) {\n    return defaultValue;\n  } else {\n    return arg;\n  }\n}\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\n\nfunction isDOMElement(element) {\n  return typeof element.type === 'string';\n}\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\n\nfunction getElementProps(element) {\n  return element.props;\n}\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\n\nfunction requiredProp(fnName, propName) {\n  // eslint-disable-next-line no-console\n  console.error(\"The property \\\"\".concat(propName, \"\\\" is required in \\\"\").concat(fnName, \"\\\"\"));\n}\nvar stateKeys = ['highlightedIndex', 'inputValue', 'isOpen', 'selectedItem', 'type'];\n/**\n * @param {Object} state the state object\n * @return {Object} state that is relevant to downshift\n */\n\nfunction pickState(state) {\n  if (state === void 0) {\n    state = {};\n  }\n  var result = {};\n  stateKeys.forEach(function (k) {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k];\n    }\n  });\n  return result;\n}\n/**\n * This will perform a shallow merge of the given state object\n * with the state coming from props\n * (for the controlled component scenario)\n * This is used in state updater functions so they're referencing\n * the right state regardless of where it comes from.\n *\n * @param {Object} state The state of the component/hook.\n * @param {Object} props The props that may contain controlled values.\n * @returns {Object} The merged controlled state.\n */\n\nfunction _getState(state, props) {\n  return Object.keys(state).reduce(function (prevState, key) {\n    prevState[key] = isControlledProp(props, key) ? props[key] : state[key];\n    return prevState;\n  }, {});\n}\n/**\n * This determines whether a prop is a \"controlled prop\" meaning it is\n * state which is controlled by the outside of this component rather\n * than within this component.\n *\n * @param {Object} props The props that may contain controlled values.\n * @param {String} key the key to check\n * @return {Boolean} whether it is a controlled controlled prop\n */\n\nfunction isControlledProp(props, key) {\n  return props[key] !== undefined;\n}\n/**\n * Normalizes the 'key' property of a KeyboardEvent in IE/Edge\n * @param {Object} event a keyboardEvent object\n * @return {String} keyboard key\n */\n\nfunction normalizeArrowKey(event) {\n  var key = event.key,\n    keyCode = event.keyCode;\n  /* istanbul ignore next (ie) */\n\n  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {\n    return \"Arrow\".concat(key);\n  }\n  return key;\n}\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n/**\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\n * it will wrap to either 0 or itemCount - 1.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index after the move.\n */\n\nfunction getNextWrappingIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {\n  if (circular === void 0) {\n    circular = true;\n  }\n  if (itemCount === 0) {\n    return -1;\n  }\n  var itemsLastIndex = itemCount - 1;\n  if (typeof baseIndex !== 'number' || baseIndex < 0 || baseIndex >= itemCount) {\n    baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n  }\n  var newIndex = baseIndex + moveAmount;\n  if (newIndex < 0) {\n    newIndex = circular ? itemsLastIndex : 0;\n  } else if (newIndex > itemsLastIndex) {\n    newIndex = circular ? 0 : itemsLastIndex;\n  }\n  var nonDisabledNewIndex = getNextNonDisabledIndex(moveAmount, newIndex, itemCount, getItemNodeFromIndex, circular);\n  if (nonDisabledNewIndex === -1) {\n    return baseIndex >= itemCount ? -1 : baseIndex;\n  }\n  return nonDisabledNewIndex;\n}\n/**\n * Returns the next index in the list of an item that is not disabled.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index. Returns baseIndex if item is not disabled. Returns next non-disabled item otherwise. If no non-disabled found it will return -1.\n */\n\nfunction getNextNonDisabledIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {\n  var currentElementNode = getItemNodeFromIndex(baseIndex);\n  if (!currentElementNode || !currentElementNode.hasAttribute('disabled')) {\n    return baseIndex;\n  }\n  if (moveAmount > 0) {\n    for (var index = baseIndex + 1; index < itemCount; index++) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  } else {\n    for (var _index = baseIndex - 1; _index >= 0; _index--) {\n      if (!getItemNodeFromIndex(_index).hasAttribute('disabled')) {\n        return _index;\n      }\n    }\n  }\n  if (circular) {\n    return moveAmount > 0 ? getNextNonDisabledIndex(1, 0, itemCount, getItemNodeFromIndex, false) : getNextNonDisabledIndex(-1, itemCount - 1, itemCount, getItemNodeFromIndex, false);\n  }\n  return -1;\n}\n/**\n * Checks if event target is within the downshift elements.\n *\n * @param {EventTarget} target Target to check.\n * @param {HTMLElement[]} downshiftElements The elements that form downshift (list, toggle button etc).\n * @param {Window} environment The window context where downshift renders.\n * @param {boolean} checkActiveElement Whether to also check activeElement.\n *\n * @returns {boolean} Whether or not the target is within downshift elements.\n */\n\nfunction targetWithinDownshift(target, downshiftElements, environment, checkActiveElement) {\n  if (checkActiveElement === void 0) {\n    checkActiveElement = true;\n  }\n  return downshiftElements.some(function (contextNode) {\n    return contextNode && (isOrContainsNode(contextNode, target, environment) || checkActiveElement && isOrContainsNode(contextNode, environment.document.activeElement, environment));\n  });\n} // eslint-disable-next-line import/no-mutable-exports\n\nvar validateControlledUnchanged = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validateControlledUnchanged = function validateControlledUnchanged(state, prevProps, nextProps) {\n    var warningDescription = \"This prop should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Downshift element for the lifetime of the component. More info: https://github.com/downshift-js/downshift#control-props\";\n    Object.keys(state).forEach(function (propKey) {\n      if (prevProps[propKey] !== undefined && nextProps[propKey] === undefined) {\n        // eslint-disable-next-line no-console\n        console.error(\"downshift: A component has changed the controlled prop \\\"\".concat(propKey, \"\\\" to be uncontrolled. \").concat(warningDescription));\n      } else if (prevProps[propKey] === undefined && nextProps[propKey] !== undefined) {\n        // eslint-disable-next-line no-console\n        console.error(\"downshift: A component has changed the uncontrolled prop \\\"\".concat(propKey, \"\\\" to be controlled. \").concat(warningDescription));\n      }\n    });\n  };\n}\nvar cleanupStatus = debounce(function (documentProp) {\n  getStatusDiv(documentProp).textContent = '';\n}, 500);\n/**\n * @param {String} status the status message\n * @param {Object} documentProp document passed by the user.\n */\n\nfunction setStatus(status, documentProp) {\n  var div = getStatusDiv(documentProp);\n  if (!status) {\n    return;\n  }\n  div.textContent = status;\n  cleanupStatus(documentProp);\n}\n/**\n * Get the status node or create it if it does not already exist.\n * @param {Object} documentProp document passed by the user.\n * @return {HTMLElement} the status node.\n */\n\nfunction getStatusDiv(documentProp) {\n  if (documentProp === void 0) {\n    documentProp = document;\n  }\n  var statusDiv = documentProp.getElementById('a11y-status-message');\n  if (statusDiv) {\n    return statusDiv;\n  }\n  statusDiv = documentProp.createElement('div');\n  statusDiv.setAttribute('id', 'a11y-status-message');\n  statusDiv.setAttribute('role', 'status');\n  statusDiv.setAttribute('aria-live', 'polite');\n  statusDiv.setAttribute('aria-relevant', 'additions text');\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px'\n  });\n  documentProp.body.appendChild(statusDiv);\n  return statusDiv;\n}\nvar unknown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_unknown__' : 0;\nvar mouseUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_mouseup__' : 1;\nvar itemMouseEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_item_mouseenter__' : 2;\nvar keyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_up__' : 3;\nvar keyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_down__' : 4;\nvar keyDownEscape = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_escape__' : 5;\nvar keyDownEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_enter__' : 6;\nvar keyDownHome = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_home__' : 7;\nvar keyDownEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_end__' : 8;\nvar clickItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_item__' : 9;\nvar blurInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_input__' : 10;\nvar changeInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_change_input__' : 11;\nvar keyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_space_button__' : 12;\nvar clickButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_button__' : 13;\nvar blurButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_button__' : 14;\nvar controlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_controlled_prop_updated_selected_item__' : 15;\nvar touchEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_touchend__' : 16;\nvar stateChangeTypes$3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  unknown: unknown,\n  mouseUp: mouseUp,\n  itemMouseEnter: itemMouseEnter,\n  keyDownArrowUp: keyDownArrowUp,\n  keyDownArrowDown: keyDownArrowDown,\n  keyDownEscape: keyDownEscape,\n  keyDownEnter: keyDownEnter,\n  keyDownHome: keyDownHome,\n  keyDownEnd: keyDownEnd,\n  clickItem: clickItem,\n  blurInput: blurInput,\n  changeInput: changeInput,\n  keyDownSpaceButton: keyDownSpaceButton,\n  clickButton: clickButton,\n  blurButton: blurButton,\n  controlledPropUpdatedSelectedItem: controlledPropUpdatedSelectedItem,\n  touchEnd: touchEnd\n});\n\n/* eslint camelcase:0 */\n\nvar Downshift = /*#__PURE__*/function () {\n  var Downshift = /*#__PURE__*/function (_Component) {\n    _inherits(Downshift, _Component);\n    var _super = _createSuper(Downshift);\n    function Downshift(_props) {\n      var _this2;\n      _classCallCheck(this, Downshift);\n      var _this;\n      _this2 = _super.call(this, _props);\n      _this = _assertThisInitialized(_this2);\n      _this2.id = _this2.props.id || \"downshift-\".concat(generateId());\n      _this2.menuId = _this2.props.menuId || \"\".concat(_this2.id, \"-menu\");\n      _this2.labelId = _this2.props.labelId || \"\".concat(_this2.id, \"-label\");\n      _this2.inputId = _this2.props.inputId || \"\".concat(_this2.id, \"-input\");\n      _this2.getItemId = _this2.props.getItemId || function (index) {\n        return \"\".concat(_this2.id, \"-item-\").concat(index);\n      };\n      _this2.input = null;\n      _this2.items = [];\n      _this2.itemCount = null;\n      _this2.previousResultCount = 0;\n      _this2.timeoutIds = [];\n      _this2.internalSetTimeout = function (fn, time) {\n        var id = setTimeout(function () {\n          _this2.timeoutIds = _this2.timeoutIds.filter(function (i) {\n            return i !== id;\n          });\n          fn();\n        }, time);\n        _this2.timeoutIds.push(id);\n      };\n      _this2.setItemCount = function (count) {\n        _this2.itemCount = count;\n      };\n      _this2.unsetItemCount = function () {\n        _this2.itemCount = null;\n      };\n      _this2.setHighlightedIndex = function (highlightedIndex, otherStateToSet) {\n        if (highlightedIndex === void 0) {\n          highlightedIndex = _this.props.defaultHighlightedIndex;\n        }\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n        otherStateToSet = pickState(otherStateToSet);\n        _this.internalSetState(_objectSpread({\n          highlightedIndex: highlightedIndex\n        }, otherStateToSet));\n      };\n      _this2.clearSelection = function (cb) {\n        _this2.internalSetState({\n          selectedItem: null,\n          inputValue: '',\n          highlightedIndex: _this2.props.defaultHighlightedIndex,\n          isOpen: _this2.props.defaultIsOpen\n        }, cb);\n      };\n      _this2.selectItem = function (item, otherStateToSet, cb) {\n        otherStateToSet = pickState(otherStateToSet);\n        _this2.internalSetState(_objectSpread({\n          isOpen: _this2.props.defaultIsOpen,\n          highlightedIndex: _this2.props.defaultHighlightedIndex,\n          selectedItem: item,\n          inputValue: _this2.props.itemToString(item)\n        }, otherStateToSet), cb);\n      };\n      _this2.selectItemAtIndex = function (itemIndex, otherStateToSet, cb) {\n        var item = _this2.items[itemIndex];\n        if (item == null) {\n          return;\n        }\n        _this2.selectItem(item, otherStateToSet, cb);\n      };\n      _this2.selectHighlightedItem = function (otherStateToSet, cb) {\n        return _this2.selectItemAtIndex(_this2.getState().highlightedIndex, otherStateToSet, cb);\n      };\n      _this2.internalSetState = function (stateToSet, cb) {\n        var isItemSelected, onChangeArg;\n        var onStateChangeArg = {};\n        var isStateToSetFunction = typeof stateToSet === 'function'; // we want to call `onInputValueChange` before the `setState` call\n        // so someone controlling the `inputValue` state gets notified of\n        // the input change as soon as possible. This avoids issues with\n        // preserving the cursor position.\n        // See https://github.com/downshift-js/downshift/issues/217 for more info.\n\n        if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n          _this2.props.onInputValueChange(stateToSet.inputValue, _objectSpread(_objectSpread({}, _this2.getStateAndHelpers()), stateToSet));\n        }\n        return _this2.setState(function (state) {\n          state = _this2.getState(state);\n          var newStateToSet = isStateToSetFunction ? stateToSet(state) : stateToSet; // Your own function that could modify the state that will be set.\n\n          newStateToSet = _this2.props.stateReducer(state, newStateToSet); // checks if an item is selected, regardless of if it's different from\n          // what was selected before\n          // used to determine if onSelect and onChange callbacks should be called\n\n          isItemSelected = newStateToSet.hasOwnProperty('selectedItem'); // this keeps track of the object we want to call with setState\n\n          var nextState = {}; // this is just used to tell whether the state changed\n          // and we're trying to update that state. OR if the selection has changed and we're\n          // trying to update the selection\n\n          if (isItemSelected && newStateToSet.selectedItem !== state.selectedItem) {\n            onChangeArg = newStateToSet.selectedItem;\n          }\n          newStateToSet.type = newStateToSet.type || unknown;\n          Object.keys(newStateToSet).forEach(function (key) {\n            // onStateChangeArg should only have the state that is\n            // actually changing\n            if (state[key] !== newStateToSet[key]) {\n              onStateChangeArg[key] = newStateToSet[key];\n            } // the type is useful for the onStateChangeArg\n            // but we don't actually want to set it in internal state.\n            // this is an undocumented feature for now... Not all internalSetState\n            // calls support it and I'm not certain we want them to yet.\n            // But it enables users controlling the isOpen state to know when\n            // the isOpen state changes due to mouseup events which is quite handy.\n\n            if (key === 'type') {\n              return;\n            }\n            newStateToSet[key]; // if it's coming from props, then we don't care to set it internally\n\n            if (!isControlledProp(_this2.props, key)) {\n              nextState[key] = newStateToSet[key];\n            }\n          }); // if stateToSet is a function, then we weren't able to call onInputValueChange\n          // earlier, so we'll call it now that we know what the inputValue state will be.\n\n          if (isStateToSetFunction && newStateToSet.hasOwnProperty('inputValue')) {\n            _this2.props.onInputValueChange(newStateToSet.inputValue, _objectSpread(_objectSpread({}, _this2.getStateAndHelpers()), newStateToSet));\n          }\n          return nextState;\n        }, function () {\n          // call the provided callback if it's a function\n          cbToCb(cb)(); // only call the onStateChange and onChange callbacks if\n          // we have relevant information to pass them.\n\n          var hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1;\n          if (hasMoreStateThanType) {\n            _this2.props.onStateChange(onStateChangeArg, _this2.getStateAndHelpers());\n          }\n          if (isItemSelected) {\n            _this2.props.onSelect(stateToSet.selectedItem, _this2.getStateAndHelpers());\n          }\n          if (onChangeArg !== undefined) {\n            _this2.props.onChange(onChangeArg, _this2.getStateAndHelpers());\n          } // this is currently undocumented and therefore subject to change\n          // We'll try to not break it, but just be warned.\n\n          _this2.props.onUserAction(onStateChangeArg, _this2.getStateAndHelpers());\n        });\n      };\n      _this2.rootRef = function (node) {\n        return _this2._rootNode = node;\n      };\n      _this2.getRootProps = function (_temp, _temp2) {\n        var _objectSpread2;\n        var _ref5 = _temp === void 0 ? {} : _temp,\n          _ref5$refKey = _ref5.refKey,\n          refKey = _ref5$refKey === void 0 ? 'ref' : _ref5$refKey,\n          ref = _ref5.ref,\n          rest = _objectWithoutProperties(_ref5, _excluded);\n        var _ref6 = _temp2 === void 0 ? {} : _temp2,\n          _ref6$suppressRefErro = _ref6.suppressRefError,\n          suppressRefError = _ref6$suppressRefErro === void 0 ? false : _ref6$suppressRefErro;\n        // this is used in the render to know whether the user has called getRootProps.\n        // It uses that to know whether to apply the props automatically\n        _this.getRootProps.called = true;\n        _this.getRootProps.refKey = refKey;\n        _this.getRootProps.suppressRefError = suppressRefError;\n        var _this$getState = _this.getState(),\n          isOpen = _this$getState.isOpen;\n        return _objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, refKey, handleRefs(ref, _this.rootRef)), _defineProperty(_objectSpread2, \"role\", 'combobox'), _defineProperty(_objectSpread2, 'aria-expanded', isOpen), _defineProperty(_objectSpread2, 'aria-haspopup', 'listbox'), _defineProperty(_objectSpread2, 'aria-owns', isOpen ? _this.menuId : null), _defineProperty(_objectSpread2, 'aria-labelledby', _this.labelId), _objectSpread2), rest);\n      };\n      _this2.keyDownHandlers = {\n        ArrowDown: function ArrowDown(event) {\n          var _this3 = this;\n          event.preventDefault();\n          if (this.getState().isOpen) {\n            var amount = event.shiftKey ? 5 : 1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowDown\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowDown\n            }, function () {\n              var itemCount = _this3.getItemCount();\n              if (itemCount > 0) {\n                var _this3$getState = _this3.getState(),\n                  highlightedIndex = _this3$getState.highlightedIndex;\n                var nextHighlightedIndex = getNextWrappingIndex(1, highlightedIndex, itemCount, function (index) {\n                  return _this3.getItemNodeFromIndex(index);\n                });\n                _this3.setHighlightedIndex(nextHighlightedIndex, {\n                  type: keyDownArrowDown\n                });\n              }\n            });\n          }\n        },\n        ArrowUp: function ArrowUp(event) {\n          var _this4 = this;\n          event.preventDefault();\n          if (this.getState().isOpen) {\n            var amount = event.shiftKey ? -5 : -1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowUp\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowUp\n            }, function () {\n              var itemCount = _this4.getItemCount();\n              if (itemCount > 0) {\n                var _this4$getState = _this4.getState(),\n                  highlightedIndex = _this4$getState.highlightedIndex;\n                var nextHighlightedIndex = getNextWrappingIndex(-1, highlightedIndex, itemCount, function (index) {\n                  return _this4.getItemNodeFromIndex(index);\n                });\n                _this4.setHighlightedIndex(nextHighlightedIndex, {\n                  type: keyDownArrowUp\n                });\n              }\n            });\n          }\n        },\n        Enter: function Enter(event) {\n          if (event.which === 229) {\n            return;\n          }\n          var _this$getState2 = this.getState(),\n            isOpen = _this$getState2.isOpen,\n            highlightedIndex = _this$getState2.highlightedIndex;\n          if (isOpen && highlightedIndex != null) {\n            event.preventDefault();\n            var item = this.items[highlightedIndex];\n            var itemNode = this.getItemNodeFromIndex(highlightedIndex);\n            if (item == null || itemNode && itemNode.hasAttribute('disabled')) {\n              return;\n            }\n            this.selectHighlightedItem({\n              type: keyDownEnter\n            });\n          }\n        },\n        Escape: function Escape(event) {\n          event.preventDefault();\n          this.reset(_objectSpread({\n            type: keyDownEscape\n          }, !this.state.isOpen && {\n            selectedItem: null,\n            inputValue: ''\n          }));\n        }\n      };\n      _this2.buttonKeyDownHandlers = _objectSpread(_objectSpread({}, _this2.keyDownHandlers), {}, {\n        ' ': function _(event) {\n          event.preventDefault();\n          this.toggleMenu({\n            type: keyDownSpaceButton\n          });\n        }\n      });\n      _this2.inputKeyDownHandlers = _objectSpread(_objectSpread({}, _this2.keyDownHandlers), {}, {\n        Home: function Home(event) {\n          var _this5 = this;\n          var _this$getState3 = this.getState(),\n            isOpen = _this$getState3.isOpen;\n          if (!isOpen) {\n            return;\n          }\n          event.preventDefault();\n          var itemCount = this.getItemCount();\n          if (itemCount <= 0 || !isOpen) {\n            return;\n          } // get next non-disabled starting downwards from 0 if that's disabled.\n\n          var newHighlightedIndex = getNextNonDisabledIndex(1, 0, itemCount, function (index) {\n            return _this5.getItemNodeFromIndex(index);\n          }, false);\n          this.setHighlightedIndex(newHighlightedIndex, {\n            type: keyDownHome\n          });\n        },\n        End: function End(event) {\n          var _this6 = this;\n          var _this$getState4 = this.getState(),\n            isOpen = _this$getState4.isOpen;\n          if (!isOpen) {\n            return;\n          }\n          event.preventDefault();\n          var itemCount = this.getItemCount();\n          if (itemCount <= 0 || !isOpen) {\n            return;\n          } // get next non-disabled starting upwards from last index if that's disabled.\n\n          var newHighlightedIndex = getNextNonDisabledIndex(-1, itemCount - 1, itemCount, function (index) {\n            return _this6.getItemNodeFromIndex(index);\n          }, false);\n          this.setHighlightedIndex(newHighlightedIndex, {\n            type: keyDownEnd\n          });\n        }\n      });\n      _this2.getToggleButtonProps = function (_temp3) {\n        var _ref7 = _temp3 === void 0 ? {} : _temp3,\n          onClick = _ref7.onClick,\n          onPress = _ref7.onPress,\n          onKeyDown = _ref7.onKeyDown,\n          onKeyUp = _ref7.onKeyUp,\n          onBlur = _ref7.onBlur,\n          rest = _objectWithoutProperties(_ref7, _excluded2);\n        var _this$getState5 = _this.getState(),\n          isOpen = _this$getState5.isOpen;\n        var enabledEventHandlers = {\n          onClick: callAllEventHandlers(onClick, _this.buttonHandleClick),\n          onKeyDown: callAllEventHandlers(onKeyDown, _this.buttonHandleKeyDown),\n          onKeyUp: callAllEventHandlers(onKeyUp, _this.buttonHandleKeyUp),\n          onBlur: callAllEventHandlers(onBlur, _this.buttonHandleBlur)\n        };\n        var eventHandlers = rest.disabled ? {} : enabledEventHandlers;\n        return _objectSpread(_objectSpread({\n          type: 'button',\n          role: 'button',\n          'aria-label': isOpen ? 'close menu' : 'open menu',\n          'aria-haspopup': true,\n          'data-toggle': true\n        }, eventHandlers), rest);\n      };\n      _this2.buttonHandleKeyUp = function (event) {\n        // Prevent click event from emitting in Firefox\n        event.preventDefault();\n      };\n      _this2.buttonHandleKeyDown = function (event) {\n        var key = normalizeArrowKey(event);\n        if (_this2.buttonKeyDownHandlers[key]) {\n          _this2.buttonKeyDownHandlers[key].call(_assertThisInitialized(_this2), event);\n        }\n      };\n      _this2.buttonHandleClick = function (event) {\n        event.preventDefault(); // handle odd case for Safari and Firefox which\n        // don't give the button the focus properly.\n\n        /* istanbul ignore if (can't reasonably test this) */\n\n        if (_this2.props.environment.document.activeElement === _this2.props.environment.document.body) {\n          event.target.focus();\n        } // to simplify testing components that use downshift, we'll not wrap this in a setTimeout\n        // if the NODE_ENV is test. With the proper build system, this should be dead code eliminated\n        // when building for production and should therefore have no impact on production code.\n\n        if (process.env.NODE_ENV === 'test') {\n          _this2.toggleMenu({\n            type: clickButton\n          });\n        } else {\n          // Ensure that toggle of menu occurs after the potential blur event in iOS\n          _this2.internalSetTimeout(function () {\n            return _this2.toggleMenu({\n              type: clickButton\n            });\n          });\n        }\n      };\n      _this2.buttonHandleBlur = function (event) {\n        var blurTarget = event.target; // Save blur target for comparison with activeElement later\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not body element\n\n        _this2.internalSetTimeout(function () {\n          if (!_this2.isMouseDown && (_this2.props.environment.document.activeElement == null || _this2.props.environment.document.activeElement.id !== _this2.inputId) && _this2.props.environment.document.activeElement !== blurTarget // Do nothing if we refocus the same element again (to solve issue in Safari on iOS)\n          ) {\n            _this2.reset({\n              type: blurButton\n            });\n          }\n        });\n      };\n      _this2.getLabelProps = function (props) {\n        return _objectSpread({\n          htmlFor: _this2.inputId,\n          id: _this2.labelId\n        }, props);\n      };\n      _this2.getInputProps = function (_temp4) {\n        var _ref8 = _temp4 === void 0 ? {} : _temp4,\n          onKeyDown = _ref8.onKeyDown,\n          onBlur = _ref8.onBlur,\n          onChange = _ref8.onChange,\n          onInput = _ref8.onInput,\n          onChangeText = _ref8.onChangeText,\n          rest = _objectWithoutProperties(_ref8, _excluded3);\n        var onChangeKey;\n        var eventHandlers = {};\n        /* istanbul ignore next (preact) */\n\n        {\n          onChangeKey = 'onChange';\n        }\n        var _this$getState6 = _this.getState(),\n          inputValue = _this$getState6.inputValue,\n          isOpen = _this$getState6.isOpen,\n          highlightedIndex = _this$getState6.highlightedIndex;\n        if (!rest.disabled) {\n          var _eventHandlers;\n          eventHandlers = (_eventHandlers = {}, _defineProperty(_eventHandlers, onChangeKey, callAllEventHandlers(onChange, onInput, _this.inputHandleChange)), _defineProperty(_eventHandlers, \"onKeyDown\", callAllEventHandlers(onKeyDown, _this.inputHandleKeyDown)), _defineProperty(_eventHandlers, \"onBlur\", callAllEventHandlers(onBlur, _this.inputHandleBlur)), _eventHandlers);\n        }\n        return _objectSpread(_objectSpread({\n          'aria-autocomplete': 'list',\n          'aria-activedescendant': isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0 ? _this.getItemId(highlightedIndex) : null,\n          'aria-controls': isOpen ? _this.menuId : null,\n          'aria-labelledby': _this.labelId,\n          // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n          // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n          autoComplete: 'off',\n          value: inputValue,\n          id: _this.inputId\n        }, eventHandlers), rest);\n      };\n      _this2.inputHandleKeyDown = function (event) {\n        var key = normalizeArrowKey(event);\n        if (key && _this2.inputKeyDownHandlers[key]) {\n          _this2.inputKeyDownHandlers[key].call(_assertThisInitialized(_this2), event);\n        }\n      };\n      _this2.inputHandleChange = function (event) {\n        _this2.internalSetState({\n          type: changeInput,\n          isOpen: true,\n          inputValue: event.target.value,\n          highlightedIndex: _this2.props.defaultHighlightedIndex\n        });\n      };\n      _this2.inputHandleBlur = function () {\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not the body element\n        _this2.internalSetTimeout(function () {\n          var downshiftButtonIsActive = _this2.props.environment.document && !!_this2.props.environment.document.activeElement && !!_this2.props.environment.document.activeElement.dataset && _this2.props.environment.document.activeElement.dataset.toggle && _this2._rootNode && _this2._rootNode.contains(_this2.props.environment.document.activeElement);\n          if (!_this2.isMouseDown && !downshiftButtonIsActive) {\n            _this2.reset({\n              type: blurInput\n            });\n          }\n        });\n      };\n      _this2.menuRef = function (node) {\n        _this2._menuNode = node;\n      };\n      _this2.getMenuProps = function (_temp5, _temp6) {\n        var _objectSpread3;\n        var _ref9 = _temp5 === void 0 ? {} : _temp5,\n          _ref9$refKey = _ref9.refKey,\n          refKey = _ref9$refKey === void 0 ? 'ref' : _ref9$refKey,\n          ref = _ref9.ref,\n          props = _objectWithoutProperties(_ref9, _excluded4);\n        var _ref10 = _temp6 === void 0 ? {} : _temp6,\n          _ref10$suppressRefErr = _ref10.suppressRefError,\n          suppressRefError = _ref10$suppressRefErr === void 0 ? false : _ref10$suppressRefErr;\n        _this.getMenuProps.called = true;\n        _this.getMenuProps.refKey = refKey;\n        _this.getMenuProps.suppressRefError = suppressRefError;\n        return _objectSpread((_objectSpread3 = {}, _defineProperty(_objectSpread3, refKey, handleRefs(ref, _this.menuRef)), _defineProperty(_objectSpread3, \"role\", 'listbox'), _defineProperty(_objectSpread3, 'aria-labelledby', props && props['aria-label'] ? null : _this.labelId), _defineProperty(_objectSpread3, \"id\", _this.menuId), _objectSpread3), props);\n      };\n      _this2.getItemProps = function (_temp7) {\n        var _ref11 = _temp7 === void 0 ? {} : _temp7,\n          onMouseMove = _ref11.onMouseMove,\n          onMouseDown = _ref11.onMouseDown,\n          onClick = _ref11.onClick,\n          onPress = _ref11.onPress,\n          index = _ref11.index,\n          _ref11$item = _ref11.item,\n          item = _ref11$item === void 0 ? process.env.NODE_ENV === 'production' ? /* istanbul ignore next */\n          undefined : requiredProp('getItemProps', 'item') : _ref11$item,\n          rest = _objectWithoutProperties(_ref11, _excluded5);\n        if (index === undefined) {\n          _this.items.push(item);\n          index = _this.items.indexOf(item);\n        } else {\n          _this.items[index] = item;\n        }\n        var onSelectKey = 'onClick';\n        var customClickHandler = onClick;\n        var enabledEventHandlers = _defineProperty({\n          // onMouseMove is used over onMouseEnter here. onMouseMove\n          // is only triggered on actual mouse movement while onMouseEnter\n          // can fire on DOM changes, interrupting keyboard navigation\n          onMouseMove: callAllEventHandlers(onMouseMove, function () {\n            if (index === _this.getState().highlightedIndex) {\n              return;\n            }\n            _this.setHighlightedIndex(index, {\n              type: itemMouseEnter\n            }); // We never want to manually scroll when changing state based\n            // on `onMouseMove` because we will be moving the element out\n            // from under the user which is currently scrolling/moving the\n            // cursor\n\n            _this.avoidScrolling = true;\n            _this.internalSetTimeout(function () {\n              return _this.avoidScrolling = false;\n            }, 250);\n          }),\n          onMouseDown: callAllEventHandlers(onMouseDown, function (event) {\n            // This prevents the activeElement from being changed\n            // to the item so it can remain with the current activeElement\n            // which is a more common use case.\n            event.preventDefault();\n          })\n        }, onSelectKey, callAllEventHandlers(customClickHandler, function () {\n          _this.selectItemAtIndex(index, {\n            type: clickItem\n          });\n        })); // Passing down the onMouseDown handler to prevent redirect\n        // of the activeElement if clicking on disabled items\n\n        var eventHandlers = rest.disabled ? {\n          onMouseDown: enabledEventHandlers.onMouseDown\n        } : enabledEventHandlers;\n        return _objectSpread(_objectSpread({\n          id: _this.getItemId(index),\n          role: 'option',\n          'aria-selected': _this.getState().highlightedIndex === index\n        }, eventHandlers), rest);\n      };\n      _this2.clearItems = function () {\n        _this2.items = [];\n      };\n      _this2.reset = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n        otherStateToSet = pickState(otherStateToSet);\n        _this.internalSetState(function (_ref) {\n          var selectedItem = _ref.selectedItem;\n          return _objectSpread({\n            isOpen: _this.props.defaultIsOpen,\n            highlightedIndex: _this.props.defaultHighlightedIndex,\n            inputValue: _this.props.itemToString(selectedItem)\n          }, otherStateToSet);\n        }, cb);\n      };\n      _this2.toggleMenu = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n        otherStateToSet = pickState(otherStateToSet);\n        _this.internalSetState(function (_ref2) {\n          var isOpen = _ref2.isOpen;\n          return _objectSpread(_objectSpread({\n            isOpen: !isOpen\n          }, isOpen && {\n            highlightedIndex: _this.props.defaultHighlightedIndex\n          }), otherStateToSet);\n        }, function () {\n          var _this$getState7 = _this.getState(),\n            isOpen = _this$getState7.isOpen,\n            highlightedIndex = _this$getState7.highlightedIndex;\n          if (isOpen) {\n            if (_this.getItemCount() > 0 && typeof highlightedIndex === 'number') {\n              _this.setHighlightedIndex(highlightedIndex, otherStateToSet);\n            }\n          }\n          cbToCb(cb)();\n        });\n      };\n      _this2.openMenu = function (cb) {\n        _this2.internalSetState({\n          isOpen: true\n        }, cb);\n      };\n      _this2.closeMenu = function (cb) {\n        _this2.internalSetState({\n          isOpen: false\n        }, cb);\n      };\n      _this2.updateStatus = debounce(function () {\n        var state = _this2.getState();\n        var item = _this2.items[state.highlightedIndex];\n        var resultCount = _this2.getItemCount();\n        var status = _this2.props.getA11yStatusMessage(_objectSpread({\n          itemToString: _this2.props.itemToString,\n          previousResultCount: _this2.previousResultCount,\n          resultCount: resultCount,\n          highlightedItem: item\n        }, state));\n        _this2.previousResultCount = resultCount;\n        setStatus(status, _this2.props.environment.document);\n      }, 200);\n      // fancy destructuring + defaults + aliases\n      // this basically says each value of state should either be set to\n      // the initial value or the default value if the initial value is not provided\n      var _this2$props = _this2.props,\n        defaultHighlightedIndex = _this2$props.defaultHighlightedIndex,\n        _this2$props$initialH = _this2$props.initialHighlightedIndex,\n        _highlightedIndex = _this2$props$initialH === void 0 ? defaultHighlightedIndex : _this2$props$initialH,\n        defaultIsOpen = _this2$props.defaultIsOpen,\n        _this2$props$initialI = _this2$props.initialIsOpen,\n        _isOpen = _this2$props$initialI === void 0 ? defaultIsOpen : _this2$props$initialI,\n        _this2$props$initialI2 = _this2$props.initialInputValue,\n        _inputValue = _this2$props$initialI2 === void 0 ? '' : _this2$props$initialI2,\n        _this2$props$initialS = _this2$props.initialSelectedItem,\n        _selectedItem = _this2$props$initialS === void 0 ? null : _this2$props$initialS;\n      var _state = _this2.getState({\n        highlightedIndex: _highlightedIndex,\n        isOpen: _isOpen,\n        inputValue: _inputValue,\n        selectedItem: _selectedItem\n      });\n      if (_state.selectedItem != null && _this2.props.initialInputValue === undefined) {\n        _state.inputValue = _this2.props.itemToString(_state.selectedItem);\n      }\n      _this2.state = _state;\n      return _this2;\n    }\n\n    /**\n     * Clear all running timeouts\n     */\n    _createClass(Downshift, [{\n      key: \"internalClearTimeouts\",\n      value: function internalClearTimeouts() {\n        this.timeoutIds.forEach(function (id) {\n          clearTimeout(id);\n        });\n        this.timeoutIds = [];\n      }\n      /**\n       * Gets the state based on internal state or props\n       * If a state value is passed via props, then that\n       * is the value given, otherwise it's retrieved from\n       * stateToMerge\n       *\n       * @param {Object} stateToMerge defaults to this.state\n       * @return {Object} the state\n       */\n    }, {\n      key: \"getState\",\n      value: function getState(stateToMerge) {\n        if (stateToMerge === void 0) {\n          stateToMerge = this.state;\n        }\n        return _getState(stateToMerge, this.props);\n      }\n    }, {\n      key: \"getItemCount\",\n      value: function getItemCount() {\n        // things read better this way. They're in priority order:\n        // 1. `this.itemCount`\n        // 2. `this.props.itemCount`\n        // 3. `this.items.length`\n        var itemCount = this.items.length;\n        if (this.itemCount != null) {\n          itemCount = this.itemCount;\n        } else if (this.props.itemCount !== undefined) {\n          itemCount = this.props.itemCount;\n        }\n        return itemCount;\n      }\n    }, {\n      key: \"getItemNodeFromIndex\",\n      value: function getItemNodeFromIndex(index) {\n        return this.props.environment.document.getElementById(this.getItemId(index));\n      }\n    }, {\n      key: \"scrollHighlightedItemIntoView\",\n      value: function scrollHighlightedItemIntoView() {\n        /* istanbul ignore else (react-native) */\n        {\n          var node = this.getItemNodeFromIndex(this.getState().highlightedIndex);\n          this.props.scrollIntoView(node, this._menuNode);\n        }\n      }\n    }, {\n      key: \"moveHighlightedIndex\",\n      value: function moveHighlightedIndex(amount, otherStateToSet) {\n        var _this7 = this;\n        var itemCount = this.getItemCount();\n        var _this$getState8 = this.getState(),\n          highlightedIndex = _this$getState8.highlightedIndex;\n        if (itemCount > 0) {\n          var nextHighlightedIndex = getNextWrappingIndex(amount, highlightedIndex, itemCount, function (index) {\n            return _this7.getItemNodeFromIndex(index);\n          });\n          this.setHighlightedIndex(nextHighlightedIndex, otherStateToSet);\n        }\n      }\n    }, {\n      key: \"getStateAndHelpers\",\n      value: function getStateAndHelpers() {\n        var _this$getState9 = this.getState(),\n          highlightedIndex = _this$getState9.highlightedIndex,\n          inputValue = _this$getState9.inputValue,\n          selectedItem = _this$getState9.selectedItem,\n          isOpen = _this$getState9.isOpen;\n        var itemToString = this.props.itemToString;\n        var id = this.id;\n        var getRootProps = this.getRootProps,\n          getToggleButtonProps = this.getToggleButtonProps,\n          getLabelProps = this.getLabelProps,\n          getMenuProps = this.getMenuProps,\n          getInputProps = this.getInputProps,\n          getItemProps = this.getItemProps,\n          openMenu = this.openMenu,\n          closeMenu = this.closeMenu,\n          toggleMenu = this.toggleMenu,\n          selectItem = this.selectItem,\n          selectItemAtIndex = this.selectItemAtIndex,\n          selectHighlightedItem = this.selectHighlightedItem,\n          setHighlightedIndex = this.setHighlightedIndex,\n          clearSelection = this.clearSelection,\n          clearItems = this.clearItems,\n          reset = this.reset,\n          setItemCount = this.setItemCount,\n          unsetItemCount = this.unsetItemCount,\n          setState = this.internalSetState;\n        return {\n          // prop getters\n          getRootProps: getRootProps,\n          getToggleButtonProps: getToggleButtonProps,\n          getLabelProps: getLabelProps,\n          getMenuProps: getMenuProps,\n          getInputProps: getInputProps,\n          getItemProps: getItemProps,\n          // actions\n          reset: reset,\n          openMenu: openMenu,\n          closeMenu: closeMenu,\n          toggleMenu: toggleMenu,\n          selectItem: selectItem,\n          selectItemAtIndex: selectItemAtIndex,\n          selectHighlightedItem: selectHighlightedItem,\n          setHighlightedIndex: setHighlightedIndex,\n          clearSelection: clearSelection,\n          clearItems: clearItems,\n          setItemCount: setItemCount,\n          unsetItemCount: unsetItemCount,\n          setState: setState,\n          // props\n          itemToString: itemToString,\n          // derived\n          id: id,\n          // state\n          highlightedIndex: highlightedIndex,\n          inputValue: inputValue,\n          isOpen: isOpen,\n          selectedItem: selectedItem\n        };\n      } //////////////////////////// ROOT\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this8 = this;\n        /* istanbul ignore if (react-native) */\n        if (process.env.NODE_ENV !== 'production' && !false && this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n          validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n        }\n        /* istanbul ignore if (react-native) */\n\n        {\n          // this.isMouseDown helps us track whether the mouse is currently held down.\n          // This is useful when the user clicks on an item in the list, but holds the mouse\n          // down long enough for the list to disappear (because the blur event fires on the input)\n          // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n          // trigger hiding the menu.\n          var onMouseDown = function onMouseDown() {\n            _this8.isMouseDown = true;\n          };\n          var onMouseUp = function onMouseUp(event) {\n            _this8.isMouseDown = false; // if the target element or the activeElement is within a downshift node\n            // then we don't want to reset downshift\n\n            var contextWithinDownshift = targetWithinDownshift(event.target, [_this8._rootNode, _this8._menuNode], _this8.props.environment);\n            if (!contextWithinDownshift && _this8.getState().isOpen) {\n              _this8.reset({\n                type: mouseUp\n              }, function () {\n                return _this8.props.onOuterClick(_this8.getStateAndHelpers());\n              });\n            }\n          }; // Touching an element in iOS gives focus and hover states, but touching out of\n          // the element will remove hover, and persist the focus state, resulting in the\n          // blur event not being triggered.\n          // this.isTouchMove helps us track whether the user is tapping or swiping on a touch screen.\n          // If the user taps outside of Downshift, the component should be reset,\n          // but not if the user is swiping\n\n          var onTouchStart = function onTouchStart() {\n            _this8.isTouchMove = false;\n          };\n          var onTouchMove = function onTouchMove() {\n            _this8.isTouchMove = true;\n          };\n          var onTouchEnd = function onTouchEnd(event) {\n            var contextWithinDownshift = targetWithinDownshift(event.target, [_this8._rootNode, _this8._menuNode], _this8.props.environment, false);\n            if (!_this8.isTouchMove && !contextWithinDownshift && _this8.getState().isOpen) {\n              _this8.reset({\n                type: touchEnd\n              }, function () {\n                return _this8.props.onOuterClick(_this8.getStateAndHelpers());\n              });\n            }\n          };\n          var environment = this.props.environment;\n          environment.addEventListener('mousedown', onMouseDown);\n          environment.addEventListener('mouseup', onMouseUp);\n          environment.addEventListener('touchstart', onTouchStart);\n          environment.addEventListener('touchmove', onTouchMove);\n          environment.addEventListener('touchend', onTouchEnd);\n          this.cleanup = function () {\n            _this8.internalClearTimeouts();\n            _this8.updateStatus.cancel();\n            environment.removeEventListener('mousedown', onMouseDown);\n            environment.removeEventListener('mouseup', onMouseUp);\n            environment.removeEventListener('touchstart', onTouchStart);\n            environment.removeEventListener('touchmove', onTouchMove);\n            environment.removeEventListener('touchend', onTouchEnd);\n          };\n        }\n      }\n    }, {\n      key: \"shouldScroll\",\n      value: function shouldScroll(prevState, prevProps) {\n        var _ref12 = this.props.highlightedIndex === undefined ? this.getState() : this.props,\n          currentHighlightedIndex = _ref12.highlightedIndex;\n        var _ref13 = prevProps.highlightedIndex === undefined ? prevState : prevProps,\n          prevHighlightedIndex = _ref13.highlightedIndex;\n        var scrollWhenOpen = currentHighlightedIndex && this.getState().isOpen && !prevState.isOpen;\n        var scrollWhenNavigating = currentHighlightedIndex !== prevHighlightedIndex;\n        return scrollWhenOpen || scrollWhenNavigating;\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps, prevState) {\n        if (process.env.NODE_ENV !== 'production') {\n          validateControlledUnchanged(this.state, prevProps, this.props);\n          /* istanbul ignore if (react-native) */\n\n          if (this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n            validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n          }\n        }\n        if (isControlledProp(this.props, 'selectedItem') && this.props.selectedItemChanged(prevProps.selectedItem, this.props.selectedItem)) {\n          this.internalSetState({\n            type: controlledPropUpdatedSelectedItem,\n            inputValue: this.props.itemToString(this.props.selectedItem)\n          });\n        }\n        if (!this.avoidScrolling && this.shouldScroll(prevState, prevProps)) {\n          this.scrollHighlightedItemIntoView();\n        }\n        /* istanbul ignore else (react-native) */\n\n        {\n          this.updateStatus();\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.cleanup(); // avoids memory leak\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var children = unwrapArray(this.props.children, noop); // because the items are rerendered every time we call the children\n        // we clear this out each render and it will be populated again as\n        // getItemProps is called.\n\n        this.clearItems(); // we reset this so we know whether the user calls getRootProps during\n        // this render. If they do then we don't need to do anything,\n        // if they don't then we need to clone the element they return and\n        // apply the props for them.\n\n        this.getRootProps.called = false;\n        this.getRootProps.refKey = undefined;\n        this.getRootProps.suppressRefError = undefined; // we do something similar for getMenuProps\n\n        this.getMenuProps.called = false;\n        this.getMenuProps.refKey = undefined;\n        this.getMenuProps.suppressRefError = undefined; // we do something similar for getLabelProps\n\n        this.getLabelProps.called = false; // and something similar for getInputProps\n\n        this.getInputProps.called = false;\n        var element = unwrapArray(children(this.getStateAndHelpers()));\n        if (!element) {\n          return null;\n        }\n        if (this.getRootProps.called || this.props.suppressRefError) {\n          if (process.env.NODE_ENV !== 'production' && !this.getRootProps.suppressRefError && !this.props.suppressRefError) {\n            validateGetRootPropsCalledCorrectly(element, this.getRootProps);\n          }\n          return element;\n        } else if (isDOMElement(element)) {\n          // they didn't apply the root props, but we can clone\n          // this and apply the props ourselves\n          return /*#__PURE__*/cloneElement(element, this.getRootProps(getElementProps(element)));\n        }\n        /* istanbul ignore else */\n\n        if (process.env.NODE_ENV !== 'production') {\n          // they didn't apply the root props, but they need to\n          // otherwise we can't query around the autocomplete\n          throw new Error('downshift: If you return a non-DOM element, you must apply the getRootProps function');\n        }\n        /* istanbul ignore next */\n\n        return undefined;\n      }\n    }]);\n    return Downshift;\n  }(Component);\n  Downshift.defaultProps = {\n    defaultHighlightedIndex: null,\n    defaultIsOpen: false,\n    getA11yStatusMessage: getA11yStatusMessage$1,\n    itemToString: function itemToString(i) {\n      if (i == null) {\n        return '';\n      }\n      if (process.env.NODE_ENV !== 'production' && isPlainObject(i) && !i.hasOwnProperty('toString')) {\n        // eslint-disable-next-line no-console\n        console.warn('downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.', 'The object that was passed:', i);\n      }\n      return String(i);\n    },\n    onStateChange: noop,\n    onInputValueChange: noop,\n    onUserAction: noop,\n    onChange: noop,\n    onSelect: noop,\n    onOuterClick: noop,\n    selectedItemChanged: function selectedItemChanged(prevItem, item) {\n      return prevItem !== item;\n    },\n    environment: /* istanbul ignore next (ssr) */\n    typeof window === 'undefined' ? {} : window,\n    stateReducer: function stateReducer(state, stateToSet) {\n      return stateToSet;\n    },\n    suppressRefError: false,\n    scrollIntoView: scrollIntoView\n  };\n  Downshift.stateChangeTypes = stateChangeTypes$3;\n  return Downshift;\n}();\nprocess.env.NODE_ENV !== \"production\" ? Downshift.propTypes = {\n  children: PropTypes.func,\n  defaultHighlightedIndex: PropTypes.number,\n  defaultIsOpen: PropTypes.bool,\n  initialHighlightedIndex: PropTypes.number,\n  initialSelectedItem: PropTypes.any,\n  initialInputValue: PropTypes.string,\n  initialIsOpen: PropTypes.bool,\n  getA11yStatusMessage: PropTypes.func,\n  itemToString: PropTypes.func,\n  onChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  onUserAction: PropTypes.func,\n  onOuterClick: PropTypes.func,\n  selectedItemChanged: PropTypes.func,\n  stateReducer: PropTypes.func,\n  itemCount: PropTypes.number,\n  id: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  }),\n  suppressRefError: PropTypes.bool,\n  scrollIntoView: PropTypes.func,\n  // things we keep in state for uncontrolled components\n  // but can accept as props for controlled components\n\n  /* eslint-disable react/no-unused-prop-types */\n  selectedItem: PropTypes.any,\n  isOpen: PropTypes.bool,\n  inputValue: PropTypes.string,\n  highlightedIndex: PropTypes.number,\n  labelId: PropTypes.string,\n  inputId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func\n  /* eslint-enable react/no-unused-prop-types */\n} : void 0;\nvar Downshift$1 = Downshift;\nfunction validateGetMenuPropsCalledCorrectly(node, _ref3) {\n  var refKey = _ref3.refKey;\n  if (!node) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: The ref prop \\\"\".concat(refKey, \"\\\" from getMenuProps was not applied correctly on your menu element.\"));\n  }\n}\nfunction validateGetRootPropsCalledCorrectly(element, _ref4) {\n  var refKey = _ref4.refKey;\n  var refKeySpecified = refKey !== 'ref';\n  var isComposite = !isDOMElement(element);\n  if (isComposite && !refKeySpecified && !isForwardRef(element)) {\n    // eslint-disable-next-line no-console\n    console.error('downshift: You returned a non-DOM element. You must specify a refKey in getRootProps');\n  } else if (!isComposite && refKeySpecified) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \\\"\".concat(refKey, \"\\\"\"));\n  }\n  if (!isForwardRef(element) && !getElementProps(element)[refKey]) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You must apply the ref prop \\\"\".concat(refKey, \"\\\" from getRootProps onto your root element.\"));\n  }\n}\nvar dropdownDefaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null,\n  inputValue: ''\n};\nfunction callOnChangeProps(action, state, newState) {\n  var props = action.props,\n    type = action.type;\n  var changes = {};\n  Object.keys(state).forEach(function (key) {\n    invokeOnChangeHandler(key, action, state, newState);\n    if (newState[key] !== state[key]) {\n      changes[key] = newState[key];\n    }\n  });\n  if (props.onStateChange && Object.keys(changes).length) {\n    props.onStateChange(_objectSpread({\n      type: type\n    }, changes));\n  }\n}\nfunction invokeOnChangeHandler(key, action, state, newState) {\n  var props = action.props,\n    type = action.type;\n  var handler = \"on\".concat(capitalizeString(key), \"Change\");\n  if (props[handler] && newState[key] !== undefined && newState[key] !== state[key]) {\n    props[handler](_objectSpread({\n      type: type\n    }, newState));\n  }\n}\n/**\n * Default state reducer that returns the changes.\n *\n * @param {Object} s state.\n * @param {Object} a action with changes.\n * @returns {Object} changes.\n */\n\nfunction stateReducer(s, a) {\n  return a.changes;\n}\n/**\n * Returns a message to be added to aria-live region when item is selected.\n *\n * @param {Object} selectionParameters Parameters required to build the message.\n * @returns {string} The a11y message.\n */\n\nfunction getA11ySelectionMessage(selectionParameters) {\n  var selectedItem = selectionParameters.selectedItem,\n    itemToStringLocal = selectionParameters.itemToString;\n  return selectedItem ? \"\".concat(itemToStringLocal(selectedItem), \" has been selected.\") : '';\n}\n/**\n * Debounced call for updating the a11y message.\n */\n\nvar updateA11yStatus = debounce(function (getA11yMessage, document) {\n  setStatus(getA11yMessage(), document);\n}, 200); // istanbul ignore next\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;\nfunction useElementIds(_ref) {\n  var _ref$id = _ref.id,\n    id = _ref$id === void 0 ? \"downshift-\".concat(generateId()) : _ref$id,\n    labelId = _ref.labelId,\n    menuId = _ref.menuId,\n    getItemId = _ref.getItemId,\n    toggleButtonId = _ref.toggleButtonId,\n    inputId = _ref.inputId;\n  var elementIdsRef = useRef({\n    labelId: labelId || \"\".concat(id, \"-label\"),\n    menuId: menuId || \"\".concat(id, \"-menu\"),\n    getItemId: getItemId || function (index) {\n      return \"\".concat(id, \"-item-\").concat(index);\n    },\n    toggleButtonId: toggleButtonId || \"\".concat(id, \"-toggle-button\"),\n    inputId: inputId || \"\".concat(id, \"-input\")\n  });\n  return elementIdsRef.current;\n}\nfunction getItemIndex(index, item, items) {\n  if (index !== undefined) {\n    return index;\n  }\n  if (items.length === 0) {\n    return -1;\n  }\n  return items.indexOf(item);\n}\nfunction itemToString(item) {\n  return item ? String(item) : '';\n}\nfunction isAcceptedCharacterKey(key) {\n  return /^\\S{1}$/.test(key);\n}\nfunction capitalizeString(string) {\n  return \"\".concat(string.slice(0, 1).toUpperCase()).concat(string.slice(1));\n}\nfunction useLatestRef(val) {\n  var ref = useRef(val); // technically this is not \"concurrent mode safe\" because we're manipulating\n  // the value during render (so it's not idempotent). However, the places this\n  // hook is used is to support memoizing callbacks which will be called\n  // *during* render, so we need the latest values *during* render.\n  // If not for this, then we'd probably want to use useLayoutEffect instead.\n\n  ref.current = val;\n  return ref;\n}\n/**\n * Computes the controlled state using a the previous state, props,\n * two reducers, one from downshift and an optional one from the user.\n * Also calls the onChange handlers for state values that have changed.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\nfunction useEnhancedReducer(reducer, initialState, props) {\n  var prevStateRef = useRef();\n  var actionRef = useRef();\n  var enhancedReducer = useCallback(function (state, action) {\n    actionRef.current = action;\n    state = _getState(state, action.props);\n    var changes = reducer(state, action);\n    var newState = action.props.stateReducer(state, _objectSpread(_objectSpread({}, action), {}, {\n      changes: changes\n    }));\n    return newState;\n  }, [reducer]);\n  var _useReducer = useReducer(enhancedReducer, initialState),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    state = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  var propsRef = useLatestRef(props);\n  var dispatchWithProps = useCallback(function (action) {\n    return dispatch(_objectSpread({\n      props: propsRef.current\n    }, action));\n  }, [propsRef]);\n  var action = actionRef.current;\n  useEffect(function () {\n    if (action && prevStateRef.current && prevStateRef.current !== state) {\n      callOnChangeProps(action, _getState(prevStateRef.current, action.props), state);\n    }\n    prevStateRef.current = state;\n  }, [state, props, action]);\n  return [state, dispatchWithProps];\n}\n/**\n * Wraps the useEnhancedReducer and applies the controlled prop values before\n * returning the new state.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\nfunction useControlledReducer$1(reducer, initialState, props) {\n  var _useEnhancedReducer = useEnhancedReducer(reducer, initialState, props),\n    _useEnhancedReducer2 = _slicedToArray(_useEnhancedReducer, 2),\n    state = _useEnhancedReducer2[0],\n    dispatch = _useEnhancedReducer2[1];\n  return [_getState(state, props), dispatch];\n}\nvar defaultProps$3 = {\n  itemToString: itemToString,\n  stateReducer: stateReducer,\n  getA11ySelectionMessage: getA11ySelectionMessage,\n  scrollIntoView: scrollIntoView,\n  circularNavigation: false,\n  environment: /* istanbul ignore next (ssr) */\n  typeof window === 'undefined' ? {} : window\n};\nfunction getDefaultValue$1(props, propKey, defaultStateValues) {\n  if (defaultStateValues === void 0) {\n    defaultStateValues = dropdownDefaultStateValues;\n  }\n  var defaultValue = props[\"default\".concat(capitalizeString(propKey))];\n  if (defaultValue !== undefined) {\n    return defaultValue;\n  }\n  return defaultStateValues[propKey];\n}\nfunction getInitialValue$1(props, propKey, defaultStateValues) {\n  if (defaultStateValues === void 0) {\n    defaultStateValues = dropdownDefaultStateValues;\n  }\n  var value = props[propKey];\n  if (value !== undefined) {\n    return value;\n  }\n  var initialValue = props[\"initial\".concat(capitalizeString(propKey))];\n  if (initialValue !== undefined) {\n    return initialValue;\n  }\n  return getDefaultValue$1(props, propKey, defaultStateValues);\n}\nfunction getInitialState$2(props) {\n  var selectedItem = getInitialValue$1(props, 'selectedItem');\n  var isOpen = getInitialValue$1(props, 'isOpen');\n  var highlightedIndex = getInitialValue$1(props, 'highlightedIndex');\n  var inputValue = getInitialValue$1(props, 'inputValue');\n  return {\n    highlightedIndex: highlightedIndex < 0 && selectedItem && isOpen ? props.items.indexOf(selectedItem) : highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem,\n    inputValue: inputValue\n  };\n}\nfunction getHighlightedIndexOnOpen(props, state, offset, getItemNodeFromIndex) {\n  var items = props.items,\n    initialHighlightedIndex = props.initialHighlightedIndex,\n    defaultHighlightedIndex = props.defaultHighlightedIndex;\n  var selectedItem = state.selectedItem,\n    highlightedIndex = state.highlightedIndex;\n  if (items.length === 0) {\n    return -1;\n  } // initialHighlightedIndex will give value to highlightedIndex on initial state only.\n\n  if (initialHighlightedIndex !== undefined && highlightedIndex === initialHighlightedIndex) {\n    return initialHighlightedIndex;\n  }\n  if (defaultHighlightedIndex !== undefined) {\n    return defaultHighlightedIndex;\n  }\n  if (selectedItem) {\n    if (offset === 0) {\n      return items.indexOf(selectedItem);\n    }\n    return getNextWrappingIndex(offset, items.indexOf(selectedItem), items.length, getItemNodeFromIndex, false);\n  }\n  if (offset === 0) {\n    return -1;\n  }\n  return offset < 0 ? items.length - 1 : 0;\n}\n/**\n * Reuse the movement tracking of mouse and touch events.\n *\n * @param {boolean} isOpen Whether the dropdown is open or not.\n * @param {Array<Object>} downshiftElementRefs Downshift element refs to track movement (toggleButton, menu etc.)\n * @param {Object} environment Environment where component/hook exists.\n * @param {Function} handleBlur Handler on blur from mouse or touch.\n * @returns {Object} Ref containing whether mouseDown or touchMove event is happening\n */\n\nfunction useMouseAndTouchTracker(isOpen, downshiftElementRefs, environment, handleBlur) {\n  var mouseAndTouchTrackersRef = useRef({\n    isMouseDown: false,\n    isTouchMove: false\n  });\n  useEffect(function () {\n    // The same strategy for checking if a click occurred inside or outside downsift\n    // as in downshift.js.\n    var onMouseDown = function onMouseDown() {\n      mouseAndTouchTrackersRef.current.isMouseDown = true;\n    };\n    var onMouseUp = function onMouseUp(event) {\n      mouseAndTouchTrackersRef.current.isMouseDown = false;\n      if (isOpen && !targetWithinDownshift(event.target, downshiftElementRefs.map(function (ref) {\n        return ref.current;\n      }), environment)) {\n        handleBlur();\n      }\n    };\n    var onTouchStart = function onTouchStart() {\n      mouseAndTouchTrackersRef.current.isTouchMove = false;\n    };\n    var onTouchMove = function onTouchMove() {\n      mouseAndTouchTrackersRef.current.isTouchMove = true;\n    };\n    var onTouchEnd = function onTouchEnd(event) {\n      if (isOpen && !mouseAndTouchTrackersRef.current.isTouchMove && !targetWithinDownshift(event.target, downshiftElementRefs.map(function (ref) {\n        return ref.current;\n      }), environment, false)) {\n        handleBlur();\n      }\n    };\n    environment.addEventListener('mousedown', onMouseDown);\n    environment.addEventListener('mouseup', onMouseUp);\n    environment.addEventListener('touchstart', onTouchStart);\n    environment.addEventListener('touchmove', onTouchMove);\n    environment.addEventListener('touchend', onTouchEnd);\n    return function cleanup() {\n      environment.removeEventListener('mousedown', onMouseDown);\n      environment.removeEventListener('mouseup', onMouseUp);\n      environment.removeEventListener('touchstart', onTouchStart);\n      environment.removeEventListener('touchmove', onTouchMove);\n      environment.removeEventListener('touchend', onTouchEnd);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, environment]);\n  return mouseAndTouchTrackersRef;\n}\n/* istanbul ignore next */\n// eslint-disable-next-line import/no-mutable-exports\n\nvar useGetterPropsCalledChecker = function useGetterPropsCalledChecker() {\n  return noop;\n};\n/**\n * Custom hook that checks if getter props are called correctly.\n *\n * @param  {...any} propKeys Getter prop names to be handled.\n * @returns {Function} Setter function called inside getter props to set call information.\n */\n\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  useGetterPropsCalledChecker = function useGetterPropsCalledChecker() {\n    var isInitialMountRef = useRef(true);\n    for (var _len = arguments.length, propKeys = new Array(_len), _key = 0; _key < _len; _key++) {\n      propKeys[_key] = arguments[_key];\n    }\n    var getterPropsCalledRef = useRef(propKeys.reduce(function (acc, propKey) {\n      acc[propKey] = {};\n      return acc;\n    }, {}));\n    useEffect(function () {\n      Object.keys(getterPropsCalledRef.current).forEach(function (propKey) {\n        var propCallInfo = getterPropsCalledRef.current[propKey];\n        if (isInitialMountRef.current) {\n          if (!Object.keys(propCallInfo).length) {\n            // eslint-disable-next-line no-console\n            console.error(\"downshift: You forgot to call the \".concat(propKey, \" getter function on your component / element.\"));\n            return;\n          }\n        }\n        var suppressRefError = propCallInfo.suppressRefError,\n          refKey = propCallInfo.refKey,\n          elementRef = propCallInfo.elementRef;\n        if ((!elementRef || !elementRef.current) && !suppressRefError) {\n          // eslint-disable-next-line no-console\n          console.error(\"downshift: The ref prop \\\"\".concat(refKey, \"\\\" from \").concat(propKey, \" was not applied correctly on your element.\"));\n        }\n      });\n      isInitialMountRef.current = false;\n    });\n    var setGetterPropCallInfo = useCallback(function (propKey, suppressRefError, refKey, elementRef) {\n      getterPropsCalledRef.current[propKey] = {\n        suppressRefError: suppressRefError,\n        refKey: refKey,\n        elementRef: elementRef\n      };\n    }, []);\n    return setGetterPropCallInfo;\n  };\n}\nfunction useA11yMessageSetter(getA11yMessage, dependencyArray, _ref2) {\n  var isInitialMount = _ref2.isInitialMount,\n    highlightedIndex = _ref2.highlightedIndex,\n    items = _ref2.items,\n    environment = _ref2.environment,\n    rest = _objectWithoutProperties(_ref2, _excluded6);\n  // Sets a11y status message on changes in state.\n  useEffect(function () {\n    if (isInitialMount || false) {\n      return;\n    }\n    updateA11yStatus(function () {\n      return getA11yMessage(_objectSpread({\n        highlightedIndex: highlightedIndex,\n        highlightedItem: items[highlightedIndex],\n        resultCount: items.length\n      }, rest));\n    }, environment.document); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencyArray);\n}\nfunction useScrollIntoView(_ref3) {\n  var highlightedIndex = _ref3.highlightedIndex,\n    isOpen = _ref3.isOpen,\n    itemRefs = _ref3.itemRefs,\n    getItemNodeFromIndex = _ref3.getItemNodeFromIndex,\n    menuElement = _ref3.menuElement,\n    scrollIntoViewProp = _ref3.scrollIntoView;\n  // used not to scroll on highlight by mouse.\n  var shouldScrollRef = useRef(true); // Scroll on highlighted item if change comes from keyboard.\n\n  useIsomorphicLayoutEffect(function () {\n    if (highlightedIndex < 0 || !isOpen || !Object.keys(itemRefs.current).length) {\n      return;\n    }\n    if (shouldScrollRef.current === false) {\n      shouldScrollRef.current = true;\n    } else {\n      scrollIntoViewProp(getItemNodeFromIndex(highlightedIndex), menuElement);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [highlightedIndex]);\n  return shouldScrollRef;\n} // eslint-disable-next-line import/no-mutable-exports\n\nvar useControlPropsValidator = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  useControlPropsValidator = function useControlPropsValidator(_ref4) {\n    var isInitialMount = _ref4.isInitialMount,\n      props = _ref4.props,\n      state = _ref4.state;\n    // used for checking when props are moving from controlled to uncontrolled.\n    var prevPropsRef = useRef(props);\n    useEffect(function () {\n      if (isInitialMount) {\n        return;\n      }\n      validateControlledUnchanged(state, prevPropsRef.current, props);\n      prevPropsRef.current = props;\n    }, [state, props, isInitialMount]);\n  };\n}\n\n/* eslint-disable complexity */\n\nfunction downshiftCommonReducer(state, action, stateChangeTypes) {\n  var type = action.type,\n    props = action.props;\n  var changes;\n  switch (type) {\n    case stateChangeTypes.ItemMouseMove:\n      changes = {\n        highlightedIndex: action.disabled ? -1 : action.index\n      };\n      break;\n    case stateChangeTypes.MenuMouseLeave:\n      changes = {\n        highlightedIndex: -1\n      };\n      break;\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen,\n        highlightedIndex: state.isOpen ? -1 : getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false\n      };\n      break;\n    case stateChangeTypes.FunctionSetHighlightedIndex:\n      changes = {\n        highlightedIndex: action.highlightedIndex\n      };\n      break;\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        selectedItem: getDefaultValue$1(props, 'selectedItem'),\n        inputValue: getDefaultValue$1(props, 'inputValue')\n      };\n      break;\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n  return _objectSpread(_objectSpread({}, state), changes);\n}\n/* eslint-enable complexity */\n\nfunction getItemIndexByCharacterKey(_a) {\n  var keysSoFar = _a.keysSoFar,\n    highlightedIndex = _a.highlightedIndex,\n    items = _a.items,\n    itemToString = _a.itemToString,\n    getItemNodeFromIndex = _a.getItemNodeFromIndex;\n  var lowerCasedKeysSoFar = keysSoFar.toLowerCase();\n  for (var index = 0; index < items.length; index++) {\n    var offsetIndex = (index + highlightedIndex + 1) % items.length;\n    var item = items[offsetIndex];\n    if (item !== undefined && itemToString(item).toLowerCase().startsWith(lowerCasedKeysSoFar)) {\n      var element = getItemNodeFromIndex(offsetIndex);\n      if (!(element === null || element === void 0 ? void 0 : element.hasAttribute('disabled'))) {\n        return offsetIndex;\n      }\n    }\n  }\n  return highlightedIndex;\n}\nvar propTypes$2 = {\n  items: PropTypes.array.isRequired,\n  itemToString: PropTypes.func,\n  getA11yStatusMessage: PropTypes.func,\n  getA11ySelectionMessage: PropTypes.func,\n  circularNavigation: PropTypes.bool,\n  highlightedIndex: PropTypes.number,\n  defaultHighlightedIndex: PropTypes.number,\n  initialHighlightedIndex: PropTypes.number,\n  isOpen: PropTypes.bool,\n  defaultIsOpen: PropTypes.bool,\n  initialIsOpen: PropTypes.bool,\n  selectedItem: PropTypes.any,\n  initialSelectedItem: PropTypes.any,\n  defaultSelectedItem: PropTypes.any,\n  id: PropTypes.string,\n  labelId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func,\n  toggleButtonId: PropTypes.string,\n  stateReducer: PropTypes.func,\n  onSelectedItemChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onIsOpenChange: PropTypes.func,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\n/**\n * Default implementation for status message. Only added when menu is open.\n * Will specift if there are results in the list, and if so, how many,\n * and what keys are relevant.\n *\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\nfunction getA11yStatusMessage(_a) {\n  var isOpen = _a.isOpen,\n    resultCount = _a.resultCount,\n    previousResultCount = _a.previousResultCount;\n  if (!isOpen) {\n    return '';\n  }\n  if (!resultCount) {\n    return 'No results are available.';\n  }\n  if (resultCount !== previousResultCount) {\n    return \"\".concat(resultCount, \" result\").concat(resultCount === 1 ? ' is' : 's are', \" available, use up and down arrow keys to navigate. Press Enter or Space Bar keys to select.\");\n  }\n  return '';\n}\nvar defaultProps$2 = __assign(__assign({}, defaultProps$3), {\n  getA11yStatusMessage: getA11yStatusMessage\n});\n// eslint-disable-next-line import/no-mutable-exports\nvar validatePropTypes$2 = noop;\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes$2 = function validatePropTypes$2(options, caller) {\n    PropTypes.checkPropTypes(propTypes$2, options, 'prop', caller.name);\n  };\n}\nvar MenuKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_down__' : 0;\nvar MenuKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_up__' : 1;\nvar MenuKeyDownEscape = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_escape__' : 2;\nvar MenuKeyDownHome = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_home__' : 3;\nvar MenuKeyDownEnd = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_end__' : 4;\nvar MenuKeyDownEnter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_enter__' : 5;\nvar MenuKeyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_space_button__' : 6;\nvar MenuKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_character__' : 7;\nvar MenuBlur = process.env.NODE_ENV !== \"production\" ? '__menu_blur__' : 8;\nvar MenuMouseLeave$1 = process.env.NODE_ENV !== \"production\" ? '__menu_mouse_leave__' : 9;\nvar ItemMouseMove$1 = process.env.NODE_ENV !== \"production\" ? '__item_mouse_move__' : 10;\nvar ItemClick$1 = process.env.NODE_ENV !== \"production\" ? '__item_click__' : 11;\nvar ToggleButtonClick$1 = process.env.NODE_ENV !== \"production\" ? '__togglebutton_click__' : 12;\nvar ToggleButtonKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_down__' : 13;\nvar ToggleButtonKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_up__' : 14;\nvar ToggleButtonKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_character__' : 15;\nvar FunctionToggleMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_toggle_menu__' : 16;\nvar FunctionOpenMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_open_menu__' : 17;\nvar FunctionCloseMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_close_menu__' : 18;\nvar FunctionSetHighlightedIndex$1 = process.env.NODE_ENV !== \"production\" ? '__function_set_highlighted_index__' : 19;\nvar FunctionSelectItem$1 = process.env.NODE_ENV !== \"production\" ? '__function_select_item__' : 20;\nvar FunctionSetInputValue$1 = process.env.NODE_ENV !== \"production\" ? '__function_set_input_value__' : 21;\nvar FunctionReset$2 = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 22;\nvar stateChangeTypes$2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MenuKeyDownArrowDown: MenuKeyDownArrowDown,\n  MenuKeyDownArrowUp: MenuKeyDownArrowUp,\n  MenuKeyDownEscape: MenuKeyDownEscape,\n  MenuKeyDownHome: MenuKeyDownHome,\n  MenuKeyDownEnd: MenuKeyDownEnd,\n  MenuKeyDownEnter: MenuKeyDownEnter,\n  MenuKeyDownSpaceButton: MenuKeyDownSpaceButton,\n  MenuKeyDownCharacter: MenuKeyDownCharacter,\n  MenuBlur: MenuBlur,\n  MenuMouseLeave: MenuMouseLeave$1,\n  ItemMouseMove: ItemMouseMove$1,\n  ItemClick: ItemClick$1,\n  ToggleButtonClick: ToggleButtonClick$1,\n  ToggleButtonKeyDownArrowDown: ToggleButtonKeyDownArrowDown,\n  ToggleButtonKeyDownArrowUp: ToggleButtonKeyDownArrowUp,\n  ToggleButtonKeyDownCharacter: ToggleButtonKeyDownCharacter,\n  FunctionToggleMenu: FunctionToggleMenu$1,\n  FunctionOpenMenu: FunctionOpenMenu$1,\n  FunctionCloseMenu: FunctionCloseMenu$1,\n  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex$1,\n  FunctionSelectItem: FunctionSelectItem$1,\n  FunctionSetInputValue: FunctionSetInputValue$1,\n  FunctionReset: FunctionReset$2\n});\n\n/* eslint-disable complexity */\n\nfunction downshiftSelectReducer(state, action) {\n  var type = action.type,\n    props = action.props,\n    shiftKey = action.shiftKey;\n  var changes;\n  switch (type) {\n    case ItemClick$1:\n      changes = {\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        selectedItem: props.items[action.index]\n      };\n      break;\n    case ToggleButtonKeyDownCharacter:\n      {\n        var lowercasedKey = action.key;\n        var inputValue = \"\".concat(state.inputValue).concat(lowercasedKey);\n        var itemIndex = getItemIndexByCharacterKey({\n          keysSoFar: inputValue,\n          highlightedIndex: state.selectedItem ? props.items.indexOf(state.selectedItem) : -1,\n          items: props.items,\n          itemToString: props.itemToString,\n          getItemNodeFromIndex: action.getItemNodeFromIndex\n        });\n        changes = _objectSpread({\n          inputValue: inputValue\n        }, itemIndex >= 0 && {\n          selectedItem: props.items[itemIndex]\n        });\n      }\n      break;\n    case ToggleButtonKeyDownArrowDown:\n      changes = {\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),\n        isOpen: true\n      };\n      break;\n    case ToggleButtonKeyDownArrowUp:\n      changes = {\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),\n        isOpen: true\n      };\n      break;\n    case MenuKeyDownEnter:\n    case MenuKeyDownSpaceButton:\n      changes = _objectSpread({\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex')\n      }, state.highlightedIndex >= 0 && {\n        selectedItem: props.items[state.highlightedIndex]\n      });\n      break;\n    case MenuKeyDownHome:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n    case MenuKeyDownEnd:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n    case MenuKeyDownEscape:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n    case MenuBlur:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n    case MenuKeyDownCharacter:\n      {\n        var _lowercasedKey = action.key;\n        var _inputValue2 = \"\".concat(state.inputValue).concat(_lowercasedKey);\n        var highlightedIndex = getItemIndexByCharacterKey({\n          keysSoFar: _inputValue2,\n          highlightedIndex: state.highlightedIndex,\n          items: props.items,\n          itemToString: props.itemToString,\n          getItemNodeFromIndex: action.getItemNodeFromIndex\n        });\n        changes = _objectSpread({\n          inputValue: _inputValue2\n        }, highlightedIndex >= 0 && {\n          highlightedIndex: highlightedIndex\n        });\n      }\n      break;\n    case MenuKeyDownArrowDown:\n      changes = {\n        highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n      };\n      break;\n    case MenuKeyDownArrowUp:\n      changes = {\n        highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n      };\n      break;\n    case FunctionSelectItem$1:\n      changes = {\n        selectedItem: action.selectedItem\n      };\n      break;\n    default:\n      return downshiftCommonReducer(state, action, stateChangeTypes$2);\n  }\n  return _objectSpread(_objectSpread({}, state), changes);\n}\n/* eslint-enable complexity */\n\n/* eslint-disable max-statements */\nuseSelect.stateChangeTypes = stateChangeTypes$2;\nfunction useSelect(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n  validatePropTypes$2(userProps, useSelect); // Props defaults and destructuring.\n\n  var props = _objectSpread(_objectSpread({}, defaultProps$2), userProps);\n  var items = props.items,\n    scrollIntoView = props.scrollIntoView,\n    environment = props.environment,\n    initialIsOpen = props.initialIsOpen,\n    defaultIsOpen = props.defaultIsOpen,\n    itemToString = props.itemToString,\n    getA11ySelectionMessage = props.getA11ySelectionMessage,\n    getA11yStatusMessage = props.getA11yStatusMessage; // Initial state depending on controlled props.\n\n  var initialState = getInitialState$2(props);\n  var _useControlledReducer = useControlledReducer$1(downshiftSelectReducer, initialState, props),\n    _useControlledReducer2 = _slicedToArray(_useControlledReducer, 2),\n    state = _useControlledReducer2[0],\n    dispatch = _useControlledReducer2[1];\n  var isOpen = state.isOpen,\n    highlightedIndex = state.highlightedIndex,\n    selectedItem = state.selectedItem,\n    inputValue = state.inputValue; // Element efs.\n\n  var toggleButtonRef = useRef(null);\n  var menuRef = useRef(null);\n  var itemRefs = useRef({}); // used not to trigger menu blur action in some scenarios.\n\n  var shouldBlurRef = useRef(true); // used to keep the inputValue clearTimeout object between renders.\n\n  var clearTimeoutRef = useRef(null); // prevent id re-generation between renders.\n\n  var elementIds = useElementIds(props); // used to keep track of how many items we had on previous cycle.\n\n  var previousResultCountRef = useRef();\n  var isInitialMountRef = useRef(true); // utility callback to get item element.\n\n  var latest = useLatestRef({\n    state: state,\n    props: props\n  }); // Some utils.\n\n  var getItemNodeFromIndex = useCallback(function (index) {\n    return itemRefs.current[elementIds.getItemId(index)];\n  }, [elementIds]); // Effects.\n  // Sets a11y status message on changes in state.\n\n  useA11yMessageSetter(getA11yStatusMessage, [isOpen, highlightedIndex, inputValue, items], _objectSpread({\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items: items,\n    environment: environment,\n    itemToString: itemToString\n  }, state)); // Sets a11y status message on changes in selectedItem.\n\n  useA11yMessageSetter(getA11ySelectionMessage, [selectedItem], _objectSpread({\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items: items,\n    environment: environment,\n    itemToString: itemToString\n  }, state)); // Scroll on highlighted item if change comes from keyboard.\n\n  var shouldScrollRef = useScrollIntoView({\n    menuElement: menuRef.current,\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    itemRefs: itemRefs,\n    scrollIntoView: scrollIntoView,\n    getItemNodeFromIndex: getItemNodeFromIndex\n  }); // Sets cleanup for the keysSoFar callback, debounded after 500ms.\n\n  useEffect(function () {\n    // init the clean function here as we need access to dispatch.\n    clearTimeoutRef.current = debounce(function (outerDispatch) {\n      outerDispatch({\n        type: FunctionSetInputValue$1,\n        inputValue: ''\n      });\n    }, 500); // Cancel any pending debounced calls on mount\n\n    return function () {\n      clearTimeoutRef.current.cancel();\n    };\n  }, []); // Invokes the keysSoFar callback set up above.\n\n  useEffect(function () {\n    if (!inputValue) {\n      return;\n    }\n    clearTimeoutRef.current(dispatch);\n  }, [dispatch, inputValue]);\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props: props,\n    state: state\n  });\n  /* Controls the focus on the menu or the toggle button. */\n\n  useEffect(function () {\n    // Don't focus menu on first render.\n    if (isInitialMountRef.current) {\n      // Unless it was initialised as open.\n      if ((initialIsOpen || defaultIsOpen || isOpen) && menuRef.current) {\n        menuRef.current.focus();\n      }\n      return;\n    } // Focus menu on open.\n\n    if (isOpen) {\n      // istanbul ignore else\n      if (menuRef.current) {\n        menuRef.current.focus();\n      }\n      return;\n    } // Focus toggleButton on close, but not if it was closed with (Shift+)Tab.\n\n    if (environment.document.activeElement === menuRef.current) {\n      // istanbul ignore else\n      if (toggleButtonRef.current) {\n        shouldBlurRef.current = false;\n        toggleButtonRef.current.focus();\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n  useEffect(function () {\n    if (isInitialMountRef.current) {\n      return;\n    }\n    previousResultCountRef.current = items.length;\n  }); // Add mouse/touch events to document.\n\n  var mouseAndTouchTrackersRef = useMouseAndTouchTracker(isOpen, [menuRef, toggleButtonRef], environment, function () {\n    dispatch({\n      type: MenuBlur\n    });\n  });\n  var setGetterPropCallInfo = useGetterPropsCalledChecker('getMenuProps', 'getToggleButtonProps'); // Make initial ref false.\n\n  useEffect(function () {\n    isInitialMountRef.current = false;\n  }, []); // Reset itemRefs on close.\n\n  useEffect(function () {\n    if (!isOpen) {\n      itemRefs.current = {};\n    }\n  }, [isOpen]); // Event handler functions.\n\n  var toggleButtonKeyDownHandlers = useMemo(function () {\n    return {\n      ArrowDown: function ArrowDown(event) {\n        event.preventDefault();\n        dispatch({\n          type: ToggleButtonKeyDownArrowDown,\n          getItemNodeFromIndex: getItemNodeFromIndex,\n          shiftKey: event.shiftKey\n        });\n      },\n      ArrowUp: function ArrowUp(event) {\n        event.preventDefault();\n        dispatch({\n          type: ToggleButtonKeyDownArrowUp,\n          getItemNodeFromIndex: getItemNodeFromIndex,\n          shiftKey: event.shiftKey\n        });\n      }\n    };\n  }, [dispatch, getItemNodeFromIndex]);\n  var menuKeyDownHandlers = useMemo(function () {\n    return {\n      ArrowDown: function ArrowDown(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownArrowDown,\n          getItemNodeFromIndex: getItemNodeFromIndex,\n          shiftKey: event.shiftKey\n        });\n      },\n      ArrowUp: function ArrowUp(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownArrowUp,\n          getItemNodeFromIndex: getItemNodeFromIndex,\n          shiftKey: event.shiftKey\n        });\n      },\n      Home: function Home(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownHome,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      End: function End(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownEnd,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      Escape: function Escape() {\n        dispatch({\n          type: MenuKeyDownEscape\n        });\n      },\n      Enter: function Enter(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownEnter\n        });\n      },\n      ' ': function _(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownSpaceButton\n        });\n      }\n    };\n  }, [dispatch, getItemNodeFromIndex]); // Action functions.\n\n  var toggleMenu = useCallback(function () {\n    dispatch({\n      type: FunctionToggleMenu$1\n    });\n  }, [dispatch]);\n  var closeMenu = useCallback(function () {\n    dispatch({\n      type: FunctionCloseMenu$1\n    });\n  }, [dispatch]);\n  var openMenu = useCallback(function () {\n    dispatch({\n      type: FunctionOpenMenu$1\n    });\n  }, [dispatch]);\n  var setHighlightedIndex = useCallback(function (newHighlightedIndex) {\n    dispatch({\n      type: FunctionSetHighlightedIndex$1,\n      highlightedIndex: newHighlightedIndex\n    });\n  }, [dispatch]);\n  var selectItem = useCallback(function (newSelectedItem) {\n    dispatch({\n      type: FunctionSelectItem$1,\n      selectedItem: newSelectedItem\n    });\n  }, [dispatch]);\n  var reset = useCallback(function () {\n    dispatch({\n      type: FunctionReset$2\n    });\n  }, [dispatch]);\n  var setInputValue = useCallback(function (newInputValue) {\n    dispatch({\n      type: FunctionSetInputValue$1,\n      inputValue: newInputValue\n    });\n  }, [dispatch]); // Getter functions.\n\n  var getLabelProps = useCallback(function (labelProps) {\n    return _objectSpread({\n      id: elementIds.labelId,\n      htmlFor: elementIds.toggleButtonId\n    }, labelProps);\n  }, [elementIds]);\n  var getMenuProps = useCallback(function (_temp, _temp2) {\n    var _objectSpread4;\n    var _ref14 = _temp === void 0 ? {} : _temp,\n      onMouseLeave = _ref14.onMouseLeave,\n      _ref14$refKey = _ref14.refKey,\n      refKey = _ref14$refKey === void 0 ? 'ref' : _ref14$refKey,\n      onKeyDown = _ref14.onKeyDown,\n      onBlur = _ref14.onBlur,\n      ref = _ref14.ref,\n      rest = _objectWithoutProperties(_ref14, _excluded7);\n    var _ref15 = _temp2 === void 0 ? {} : _temp2,\n      _ref15$suppressRefErr = _ref15.suppressRefError,\n      suppressRefError = _ref15$suppressRefErr === void 0 ? false : _ref15$suppressRefErr;\n    var latestState = latest.current.state;\n    var menuHandleKeyDown = function menuHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n      if (key && menuKeyDownHandlers[key]) {\n        menuKeyDownHandlers[key](event);\n      } else if (isAcceptedCharacterKey(key)) {\n        dispatch({\n          type: MenuKeyDownCharacter,\n          key: key,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      }\n    };\n    var menuHandleBlur = function menuHandleBlur() {\n      // if the blur was a result of selection, we don't trigger this action.\n      if (shouldBlurRef.current === false) {\n        shouldBlurRef.current = true;\n        return;\n      }\n      var shouldBlur = !mouseAndTouchTrackersRef.current.isMouseDown;\n      /* istanbul ignore else */\n\n      if (shouldBlur) {\n        dispatch({\n          type: MenuBlur\n        });\n      }\n    };\n    var menuHandleMouseLeave = function menuHandleMouseLeave() {\n      dispatch({\n        type: MenuMouseLeave$1\n      });\n    };\n    setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef);\n    return _objectSpread(_objectSpread((_objectSpread4 = {}, _defineProperty(_objectSpread4, refKey, handleRefs(ref, function (menuNode) {\n      menuRef.current = menuNode;\n    })), _defineProperty(_objectSpread4, \"id\", elementIds.menuId), _defineProperty(_objectSpread4, \"role\", 'listbox'), _defineProperty(_objectSpread4, 'aria-labelledby', elementIds.labelId), _defineProperty(_objectSpread4, \"tabIndex\", -1), _objectSpread4), latestState.isOpen && latestState.highlightedIndex > -1 && {\n      'aria-activedescendant': elementIds.getItemId(latestState.highlightedIndex)\n    }), {}, {\n      onMouseLeave: callAllEventHandlers(onMouseLeave, menuHandleMouseLeave),\n      onKeyDown: callAllEventHandlers(onKeyDown, menuHandleKeyDown),\n      onBlur: callAllEventHandlers(onBlur, menuHandleBlur)\n    }, rest);\n  }, [dispatch, latest, menuKeyDownHandlers, mouseAndTouchTrackersRef, setGetterPropCallInfo, elementIds, getItemNodeFromIndex]);\n  var getToggleButtonProps = useCallback(function (_temp3, _temp4) {\n    var _objectSpread5;\n    var _ref16 = _temp3 === void 0 ? {} : _temp3,\n      onClick = _ref16.onClick,\n      onKeyDown = _ref16.onKeyDown,\n      _ref16$refKey = _ref16.refKey,\n      refKey = _ref16$refKey === void 0 ? 'ref' : _ref16$refKey,\n      ref = _ref16.ref,\n      rest = _objectWithoutProperties(_ref16, _excluded8);\n    var _ref17 = _temp4 === void 0 ? {} : _temp4,\n      _ref17$suppressRefErr = _ref17.suppressRefError,\n      suppressRefError = _ref17$suppressRefErr === void 0 ? false : _ref17$suppressRefErr;\n    var toggleButtonHandleClick = function toggleButtonHandleClick() {\n      dispatch({\n        type: ToggleButtonClick$1\n      });\n    };\n    var toggleButtonHandleKeyDown = function toggleButtonHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n      if (key && toggleButtonKeyDownHandlers[key]) {\n        toggleButtonKeyDownHandlers[key](event);\n      } else if (isAcceptedCharacterKey(key)) {\n        dispatch({\n          type: ToggleButtonKeyDownCharacter,\n          key: key,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      }\n    };\n    var toggleProps = _objectSpread((_objectSpread5 = {}, _defineProperty(_objectSpread5, refKey, handleRefs(ref, function (toggleButtonNode) {\n      toggleButtonRef.current = toggleButtonNode;\n    })), _defineProperty(_objectSpread5, \"id\", elementIds.toggleButtonId), _defineProperty(_objectSpread5, 'aria-haspopup', 'listbox'), _defineProperty(_objectSpread5, 'aria-expanded', latest.current.state.isOpen), _defineProperty(_objectSpread5, 'aria-labelledby', \"\".concat(elementIds.labelId, \" \").concat(elementIds.toggleButtonId)), _objectSpread5), rest);\n    if (!rest.disabled) {\n      toggleProps.onClick = callAllEventHandlers(onClick, toggleButtonHandleClick);\n      toggleProps.onKeyDown = callAllEventHandlers(onKeyDown, toggleButtonHandleKeyDown);\n    }\n    setGetterPropCallInfo('getToggleButtonProps', suppressRefError, refKey, toggleButtonRef);\n    return toggleProps;\n  }, [dispatch, latest, toggleButtonKeyDownHandlers, setGetterPropCallInfo, elementIds, getItemNodeFromIndex]);\n  var getItemProps = useCallback(function (_temp5) {\n    var _ref18 = _temp5 === void 0 ? {} : _temp5,\n      item = _ref18.item,\n      index = _ref18.index,\n      onMouseMove = _ref18.onMouseMove,\n      onClick = _ref18.onClick,\n      _ref18$refKey = _ref18.refKey,\n      refKey = _ref18$refKey === void 0 ? 'ref' : _ref18$refKey,\n      ref = _ref18.ref,\n      disabled = _ref18.disabled,\n      rest = _objectWithoutProperties(_ref18, _excluded9);\n    var _latest$current = latest.current,\n      latestState = _latest$current.state,\n      latestProps = _latest$current.props;\n    var itemHandleMouseMove = function itemHandleMouseMove() {\n      if (index === latestState.highlightedIndex) {\n        return;\n      }\n      shouldScrollRef.current = false;\n      dispatch({\n        type: ItemMouseMove$1,\n        index: index,\n        disabled: disabled\n      });\n    };\n    var itemHandleClick = function itemHandleClick() {\n      dispatch({\n        type: ItemClick$1,\n        index: index\n      });\n    };\n    var itemIndex = getItemIndex(index, item, latestProps.items);\n    if (itemIndex < 0) {\n      throw new Error('Pass either item or item index in getItemProps!');\n    }\n    var itemProps = _objectSpread(_defineProperty({\n      disabled: disabled,\n      role: 'option',\n      'aria-selected': \"\".concat(itemIndex === latestState.highlightedIndex),\n      id: elementIds.getItemId(itemIndex)\n    }, refKey, handleRefs(ref, function (itemNode) {\n      if (itemNode) {\n        itemRefs.current[elementIds.getItemId(itemIndex)] = itemNode;\n      }\n    })), rest);\n    if (!disabled) {\n      itemProps.onClick = callAllEventHandlers(onClick, itemHandleClick);\n    }\n    itemProps.onMouseMove = callAllEventHandlers(onMouseMove, itemHandleMouseMove);\n    return itemProps;\n  }, [dispatch, latest, shouldScrollRef, elementIds]);\n  return {\n    // prop getters.\n    getToggleButtonProps: getToggleButtonProps,\n    getLabelProps: getLabelProps,\n    getMenuProps: getMenuProps,\n    getItemProps: getItemProps,\n    // actions.\n    toggleMenu: toggleMenu,\n    openMenu: openMenu,\n    closeMenu: closeMenu,\n    setHighlightedIndex: setHighlightedIndex,\n    selectItem: selectItem,\n    reset: reset,\n    setInputValue: setInputValue,\n    // state.\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem,\n    inputValue: inputValue\n  };\n}\nvar InputKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__input_keydown_arrow_down__' : 0;\nvar InputKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__input_keydown_arrow_up__' : 1;\nvar InputKeyDownEscape = process.env.NODE_ENV !== \"production\" ? '__input_keydown_escape__' : 2;\nvar InputKeyDownHome = process.env.NODE_ENV !== \"production\" ? '__input_keydown_home__' : 3;\nvar InputKeyDownEnd = process.env.NODE_ENV !== \"production\" ? '__input_keydown_end__' : 4;\nvar InputKeyDownEnter = process.env.NODE_ENV !== \"production\" ? '__input_keydown_enter__' : 5;\nvar InputChange = process.env.NODE_ENV !== \"production\" ? '__input_change__' : 6;\nvar InputBlur = process.env.NODE_ENV !== \"production\" ? '__input_blur__' : 7;\nvar MenuMouseLeave = process.env.NODE_ENV !== \"production\" ? '__menu_mouse_leave__' : 8;\nvar ItemMouseMove = process.env.NODE_ENV !== \"production\" ? '__item_mouse_move__' : 9;\nvar ItemClick = process.env.NODE_ENV !== \"production\" ? '__item_click__' : 10;\nvar ToggleButtonClick = process.env.NODE_ENV !== \"production\" ? '__togglebutton_click__' : 11;\nvar FunctionToggleMenu = process.env.NODE_ENV !== \"production\" ? '__function_toggle_menu__' : 12;\nvar FunctionOpenMenu = process.env.NODE_ENV !== \"production\" ? '__function_open_menu__' : 13;\nvar FunctionCloseMenu = process.env.NODE_ENV !== \"production\" ? '__function_close_menu__' : 14;\nvar FunctionSetHighlightedIndex = process.env.NODE_ENV !== \"production\" ? '__function_set_highlighted_index__' : 15;\nvar FunctionSelectItem = process.env.NODE_ENV !== \"production\" ? '__function_select_item__' : 16;\nvar FunctionSetInputValue = process.env.NODE_ENV !== \"production\" ? '__function_set_input_value__' : 17;\nvar FunctionReset$1 = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 18;\nvar ControlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__controlled_prop_updated_selected_item__' : 19;\nvar stateChangeTypes$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  InputKeyDownArrowDown: InputKeyDownArrowDown,\n  InputKeyDownArrowUp: InputKeyDownArrowUp,\n  InputKeyDownEscape: InputKeyDownEscape,\n  InputKeyDownHome: InputKeyDownHome,\n  InputKeyDownEnd: InputKeyDownEnd,\n  InputKeyDownEnter: InputKeyDownEnter,\n  InputChange: InputChange,\n  InputBlur: InputBlur,\n  MenuMouseLeave: MenuMouseLeave,\n  ItemMouseMove: ItemMouseMove,\n  ItemClick: ItemClick,\n  ToggleButtonClick: ToggleButtonClick,\n  FunctionToggleMenu: FunctionToggleMenu,\n  FunctionOpenMenu: FunctionOpenMenu,\n  FunctionCloseMenu: FunctionCloseMenu,\n  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex,\n  FunctionSelectItem: FunctionSelectItem,\n  FunctionSetInputValue: FunctionSetInputValue,\n  FunctionReset: FunctionReset$1,\n  ControlledPropUpdatedSelectedItem: ControlledPropUpdatedSelectedItem\n});\nfunction getInitialState$1(props) {\n  var initialState = getInitialState$2(props);\n  var selectedItem = initialState.selectedItem;\n  var inputValue = initialState.inputValue;\n  if (inputValue === '' && selectedItem && props.defaultInputValue === undefined && props.initialInputValue === undefined && props.inputValue === undefined) {\n    inputValue = props.itemToString(selectedItem);\n  }\n  return _objectSpread(_objectSpread({}, initialState), {}, {\n    inputValue: inputValue\n  });\n}\nvar propTypes$1 = {\n  items: PropTypes.array.isRequired,\n  itemToString: PropTypes.func,\n  getA11yStatusMessage: PropTypes.func,\n  getA11ySelectionMessage: PropTypes.func,\n  circularNavigation: PropTypes.bool,\n  highlightedIndex: PropTypes.number,\n  defaultHighlightedIndex: PropTypes.number,\n  initialHighlightedIndex: PropTypes.number,\n  isOpen: PropTypes.bool,\n  defaultIsOpen: PropTypes.bool,\n  initialIsOpen: PropTypes.bool,\n  selectedItem: PropTypes.any,\n  initialSelectedItem: PropTypes.any,\n  defaultSelectedItem: PropTypes.any,\n  inputValue: PropTypes.string,\n  defaultInputValue: PropTypes.string,\n  initialInputValue: PropTypes.string,\n  id: PropTypes.string,\n  labelId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func,\n  inputId: PropTypes.string,\n  toggleButtonId: PropTypes.string,\n  stateReducer: PropTypes.func,\n  onSelectedItemChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onIsOpenChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\n/**\n * The useCombobox version of useControlledReducer, which also\n * checks if the controlled prop selectedItem changed between\n * renders. If so, it will also update inputValue with its\n * string equivalent. It uses the common useEnhancedReducer to\n * compute the rest of the state.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\nfunction useControlledReducer(reducer, initialState, props) {\n  var previousSelectedItemRef = useRef();\n  var _useEnhancedReducer3 = useEnhancedReducer(reducer, initialState, props),\n    _useEnhancedReducer4 = _slicedToArray(_useEnhancedReducer3, 2),\n    state = _useEnhancedReducer4[0],\n    dispatch = _useEnhancedReducer4[1]; // ToDo: if needed, make same approach as selectedItemChanged from Downshift.\n\n  useEffect(function () {\n    if (isControlledProp(props, 'selectedItem')) {\n      if (previousSelectedItemRef.current !== props.selectedItem) {\n        dispatch({\n          type: ControlledPropUpdatedSelectedItem,\n          inputValue: props.itemToString(props.selectedItem)\n        });\n      }\n      previousSelectedItemRef.current = state.selectedItem === previousSelectedItemRef.current ? props.selectedItem : state.selectedItem;\n    }\n  });\n  return [_getState(state, props), dispatch];\n} // eslint-disable-next-line import/no-mutable-exports\n\nvar validatePropTypes$1 = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes$1 = function validatePropTypes$1(options, caller) {\n    PropTypes.checkPropTypes(propTypes$1, options, 'prop', caller.name);\n  };\n}\nvar defaultProps$1 = _objectSpread(_objectSpread({}, defaultProps$3), {}, {\n  getA11yStatusMessage: getA11yStatusMessage$1,\n  circularNavigation: true\n});\n\n/* eslint-disable complexity */\n\nfunction downshiftUseComboboxReducer(state, action) {\n  var type = action.type,\n    props = action.props,\n    shiftKey = action.shiftKey;\n  var changes;\n  switch (type) {\n    case ItemClick:\n      changes = {\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index])\n      };\n      break;\n    case InputKeyDownArrowDown:\n      if (state.isOpen) {\n        changes = {\n          highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n        };\n      } else {\n        changes = {\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),\n          isOpen: props.items.length >= 0\n        };\n      }\n      break;\n    case InputKeyDownArrowUp:\n      if (state.isOpen) {\n        changes = {\n          highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n        };\n      } else {\n        changes = {\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),\n          isOpen: props.items.length >= 0\n        };\n      }\n      break;\n    case InputKeyDownEnter:\n      changes = _objectSpread({}, state.isOpen && state.highlightedIndex >= 0 && {\n        selectedItem: props.items[state.highlightedIndex],\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        inputValue: props.itemToString(props.items[state.highlightedIndex])\n      });\n      break;\n    case InputKeyDownEscape:\n      changes = _objectSpread({\n        isOpen: false,\n        highlightedIndex: -1\n      }, !state.isOpen && {\n        selectedItem: null,\n        inputValue: ''\n      });\n      break;\n    case InputKeyDownHome:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n    case InputKeyDownEnd:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n    case InputBlur:\n      changes = _objectSpread({\n        isOpen: false,\n        highlightedIndex: -1\n      }, state.highlightedIndex >= 0 && action.selectItem && {\n        selectedItem: props.items[state.highlightedIndex],\n        inputValue: props.itemToString(props.items[state.highlightedIndex])\n      });\n      break;\n    case InputChange:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        inputValue: action.inputValue\n      };\n      break;\n    case FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem)\n      };\n      break;\n    case ControlledPropUpdatedSelectedItem:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n    default:\n      return downshiftCommonReducer(state, action, stateChangeTypes$1);\n  }\n  return _objectSpread(_objectSpread({}, state), changes);\n}\n/* eslint-enable complexity */\n\n/* eslint-disable max-statements */\nuseCombobox.stateChangeTypes = stateChangeTypes$1;\nfunction useCombobox(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n  validatePropTypes$1(userProps, useCombobox); // Props defaults and destructuring.\n\n  var props = _objectSpread(_objectSpread({}, defaultProps$1), userProps);\n  var initialIsOpen = props.initialIsOpen,\n    defaultIsOpen = props.defaultIsOpen,\n    items = props.items,\n    scrollIntoView = props.scrollIntoView,\n    environment = props.environment,\n    getA11yStatusMessage = props.getA11yStatusMessage,\n    getA11ySelectionMessage = props.getA11ySelectionMessage,\n    itemToString = props.itemToString; // Initial state depending on controlled props.\n\n  var initialState = getInitialState$1(props);\n  var _useControlledReducer3 = useControlledReducer(downshiftUseComboboxReducer, initialState, props),\n    _useControlledReducer4 = _slicedToArray(_useControlledReducer3, 2),\n    state = _useControlledReducer4[0],\n    dispatch = _useControlledReducer4[1];\n  var isOpen = state.isOpen,\n    highlightedIndex = state.highlightedIndex,\n    selectedItem = state.selectedItem,\n    inputValue = state.inputValue; // Element refs.\n\n  var menuRef = useRef(null);\n  var itemRefs = useRef({});\n  var inputRef = useRef(null);\n  var toggleButtonRef = useRef(null);\n  var comboboxRef = useRef(null);\n  var isInitialMountRef = useRef(true); // prevent id re-generation between renders.\n\n  var elementIds = useElementIds(props); // used to keep track of how many items we had on previous cycle.\n\n  var previousResultCountRef = useRef(); // utility callback to get item element.\n\n  var latest = useLatestRef({\n    state: state,\n    props: props\n  });\n  var getItemNodeFromIndex = useCallback(function (index) {\n    return itemRefs.current[elementIds.getItemId(index)];\n  }, [elementIds]); // Effects.\n  // Sets a11y status message on changes in state.\n\n  useA11yMessageSetter(getA11yStatusMessage, [isOpen, highlightedIndex, inputValue, items], _objectSpread({\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items: items,\n    environment: environment,\n    itemToString: itemToString\n  }, state)); // Sets a11y status message on changes in selectedItem.\n\n  useA11yMessageSetter(getA11ySelectionMessage, [selectedItem], _objectSpread({\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items: items,\n    environment: environment,\n    itemToString: itemToString\n  }, state)); // Scroll on highlighted item if change comes from keyboard.\n\n  var shouldScrollRef = useScrollIntoView({\n    menuElement: menuRef.current,\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    itemRefs: itemRefs,\n    scrollIntoView: scrollIntoView,\n    getItemNodeFromIndex: getItemNodeFromIndex\n  });\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props: props,\n    state: state\n  }); // Focus the input on first render if required.\n\n  useEffect(function () {\n    var focusOnOpen = initialIsOpen || defaultIsOpen || isOpen;\n    if (focusOnOpen && inputRef.current) {\n      inputRef.current.focus();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(function () {\n    if (isInitialMountRef.current) {\n      return;\n    }\n    previousResultCountRef.current = items.length;\n  }); // Add mouse/touch events to document.\n\n  var mouseAndTouchTrackersRef = useMouseAndTouchTracker(isOpen, [comboboxRef, menuRef, toggleButtonRef], environment, function () {\n    dispatch({\n      type: InputBlur,\n      selectItem: false\n    });\n  });\n  var setGetterPropCallInfo = useGetterPropsCalledChecker('getInputProps', 'getComboboxProps', 'getMenuProps'); // Make initial ref false.\n\n  useEffect(function () {\n    isInitialMountRef.current = false;\n  }, []); // Reset itemRefs on close.\n\n  useEffect(function () {\n    if (!isOpen) {\n      itemRefs.current = {};\n    }\n  }, [isOpen]);\n  /* Event handler functions */\n\n  var inputKeyDownHandlers = useMemo(function () {\n    return {\n      ArrowDown: function ArrowDown(event) {\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownArrowDown,\n          shiftKey: event.shiftKey,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      ArrowUp: function ArrowUp(event) {\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownArrowUp,\n          shiftKey: event.shiftKey,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      Home: function Home(event) {\n        if (!latest.current.state.isOpen) {\n          return;\n        }\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownHome,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      End: function End(event) {\n        if (!latest.current.state.isOpen) {\n          return;\n        }\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownEnd,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      Escape: function Escape(event) {\n        var latestState = latest.current.state;\n        if (latestState.isOpen || latestState.inputValue || latestState.selectedItem || latestState.highlightedIndex > -1) {\n          event.preventDefault();\n          dispatch({\n            type: InputKeyDownEscape\n          });\n        }\n      },\n      Enter: function Enter(event) {\n        var latestState = latest.current.state; // if closed or no highlighted index, do nothing.\n\n        if (!latestState.isOpen || latestState.highlightedIndex < 0 || event.which === 229 // if IME composing, wait for next Enter keydown event.\n        ) {\n          return;\n        }\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownEnter,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      }\n    };\n  }, [dispatch, latest, getItemNodeFromIndex]); // Getter props.\n\n  var getLabelProps = useCallback(function (labelProps) {\n    return _objectSpread({\n      id: elementIds.labelId,\n      htmlFor: elementIds.inputId\n    }, labelProps);\n  }, [elementIds]);\n  var getMenuProps = useCallback(function (_temp, _temp2) {\n    var _objectSpread7;\n    var _ref19 = _temp === void 0 ? {} : _temp,\n      onMouseLeave = _ref19.onMouseLeave,\n      _ref19$refKey = _ref19.refKey,\n      refKey = _ref19$refKey === void 0 ? 'ref' : _ref19$refKey,\n      ref = _ref19.ref,\n      rest = _objectWithoutProperties(_ref19, _excluded10);\n    var _ref20 = _temp2 === void 0 ? {} : _temp2,\n      _ref20$suppressRefErr = _ref20.suppressRefError,\n      suppressRefError = _ref20$suppressRefErr === void 0 ? false : _ref20$suppressRefErr;\n    setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef);\n    return _objectSpread((_objectSpread7 = {}, _defineProperty(_objectSpread7, refKey, handleRefs(ref, function (menuNode) {\n      menuRef.current = menuNode;\n    })), _defineProperty(_objectSpread7, \"id\", elementIds.menuId), _defineProperty(_objectSpread7, \"role\", 'listbox'), _defineProperty(_objectSpread7, 'aria-labelledby', elementIds.labelId), _defineProperty(_objectSpread7, \"onMouseLeave\", callAllEventHandlers(onMouseLeave, function () {\n      dispatch({\n        type: MenuMouseLeave\n      });\n    })), _objectSpread7), rest);\n  }, [dispatch, setGetterPropCallInfo, elementIds]);\n  var getItemProps = useCallback(function (_temp3) {\n    var _objectSpread8;\n    var _ref21 = _temp3 === void 0 ? {} : _temp3,\n      item = _ref21.item,\n      index = _ref21.index,\n      _ref21$refKey = _ref21.refKey,\n      refKey = _ref21$refKey === void 0 ? 'ref' : _ref21$refKey,\n      ref = _ref21.ref,\n      onMouseMove = _ref21.onMouseMove,\n      onMouseDown = _ref21.onMouseDown,\n      onClick = _ref21.onClick,\n      onPress = _ref21.onPress,\n      disabled = _ref21.disabled,\n      rest = _objectWithoutProperties(_ref21, _excluded11);\n    var _latest$current2 = latest.current,\n      latestProps = _latest$current2.props,\n      latestState = _latest$current2.state;\n    var itemIndex = getItemIndex(index, item, latestProps.items);\n    if (itemIndex < 0) {\n      throw new Error('Pass either item or item index in getItemProps!');\n    }\n    var onSelectKey = 'onClick';\n    var customClickHandler = onClick;\n    var itemHandleMouseMove = function itemHandleMouseMove() {\n      if (index === latestState.highlightedIndex) {\n        return;\n      }\n      shouldScrollRef.current = false;\n      dispatch({\n        type: ItemMouseMove,\n        index: index,\n        disabled: disabled\n      });\n    };\n    var itemHandleClick = function itemHandleClick() {\n      dispatch({\n        type: ItemClick,\n        index: index\n      });\n    };\n    var itemHandleMouseDown = function itemHandleMouseDown(e) {\n      return e.preventDefault();\n    };\n    return _objectSpread(_objectSpread((_objectSpread8 = {}, _defineProperty(_objectSpread8, refKey, handleRefs(ref, function (itemNode) {\n      if (itemNode) {\n        itemRefs.current[elementIds.getItemId(itemIndex)] = itemNode;\n      }\n    })), _defineProperty(_objectSpread8, \"disabled\", disabled), _defineProperty(_objectSpread8, \"role\", 'option'), _defineProperty(_objectSpread8, 'aria-selected', \"\".concat(itemIndex === latestState.highlightedIndex)), _defineProperty(_objectSpread8, \"id\", elementIds.getItemId(itemIndex)), _objectSpread8), !disabled && _defineProperty({}, onSelectKey, callAllEventHandlers(customClickHandler, itemHandleClick))), {}, {\n      onMouseMove: callAllEventHandlers(onMouseMove, itemHandleMouseMove),\n      onMouseDown: callAllEventHandlers(onMouseDown, itemHandleMouseDown)\n    }, rest);\n  }, [dispatch, latest, shouldScrollRef, elementIds]);\n  var getToggleButtonProps = useCallback(function (_temp4) {\n    var _objectSpread9;\n    var _ref23 = _temp4 === void 0 ? {} : _temp4,\n      onClick = _ref23.onClick,\n      onPress = _ref23.onPress,\n      _ref23$refKey = _ref23.refKey,\n      refKey = _ref23$refKey === void 0 ? 'ref' : _ref23$refKey,\n      ref = _ref23.ref,\n      rest = _objectWithoutProperties(_ref23, _excluded12);\n    var toggleButtonHandleClick = function toggleButtonHandleClick() {\n      dispatch({\n        type: ToggleButtonClick\n      });\n      if (!latest.current.state.isOpen && inputRef.current) {\n        inputRef.current.focus();\n      }\n    };\n    return _objectSpread(_objectSpread((_objectSpread9 = {}, _defineProperty(_objectSpread9, refKey, handleRefs(ref, function (toggleButtonNode) {\n      toggleButtonRef.current = toggleButtonNode;\n    })), _defineProperty(_objectSpread9, \"id\", elementIds.toggleButtonId), _defineProperty(_objectSpread9, \"tabIndex\", -1), _objectSpread9), !rest.disabled && _objectSpread({}, {\n      onClick: callAllEventHandlers(onClick, toggleButtonHandleClick)\n    })), rest);\n  }, [dispatch, latest, elementIds]);\n  var getInputProps = useCallback(function (_temp5, _temp6) {\n    var _objectSpread10;\n    var _ref24 = _temp5 === void 0 ? {} : _temp5,\n      onKeyDown = _ref24.onKeyDown,\n      onChange = _ref24.onChange,\n      onInput = _ref24.onInput,\n      onBlur = _ref24.onBlur,\n      onChangeText = _ref24.onChangeText,\n      _ref24$refKey = _ref24.refKey,\n      refKey = _ref24$refKey === void 0 ? 'ref' : _ref24$refKey,\n      ref = _ref24.ref,\n      rest = _objectWithoutProperties(_ref24, _excluded13);\n    var _ref25 = _temp6 === void 0 ? {} : _temp6,\n      _ref25$suppressRefErr = _ref25.suppressRefError,\n      suppressRefError = _ref25$suppressRefErr === void 0 ? false : _ref25$suppressRefErr;\n    setGetterPropCallInfo('getInputProps', suppressRefError, refKey, inputRef);\n    var latestState = latest.current.state;\n    var inputHandleKeyDown = function inputHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n      if (key && inputKeyDownHandlers[key]) {\n        inputKeyDownHandlers[key](event);\n      }\n    };\n    var inputHandleChange = function inputHandleChange(event) {\n      dispatch({\n        type: InputChange,\n        inputValue: event.target.value\n      });\n    };\n    var inputHandleBlur = function inputHandleBlur() {\n      /* istanbul ignore else */\n      if (latestState.isOpen && !mouseAndTouchTrackersRef.current.isMouseDown) {\n        dispatch({\n          type: InputBlur,\n          selectItem: true\n        });\n      }\n    };\n    /* istanbul ignore next (preact) */\n\n    var onChangeKey = 'onChange';\n    var eventHandlers = {};\n    if (!rest.disabled) {\n      var _eventHandlers2;\n      eventHandlers = (_eventHandlers2 = {}, _defineProperty(_eventHandlers2, onChangeKey, callAllEventHandlers(onChange, onInput, inputHandleChange)), _defineProperty(_eventHandlers2, \"onKeyDown\", callAllEventHandlers(onKeyDown, inputHandleKeyDown)), _defineProperty(_eventHandlers2, \"onBlur\", callAllEventHandlers(onBlur, inputHandleBlur)), _eventHandlers2);\n    }\n    return _objectSpread(_objectSpread(_objectSpread((_objectSpread10 = {}, _defineProperty(_objectSpread10, refKey, handleRefs(ref, function (inputNode) {\n      inputRef.current = inputNode;\n    })), _defineProperty(_objectSpread10, \"id\", elementIds.inputId), _defineProperty(_objectSpread10, 'aria-autocomplete', 'list'), _defineProperty(_objectSpread10, 'aria-controls', elementIds.menuId), _objectSpread10), latestState.isOpen && latestState.highlightedIndex > -1 && {\n      'aria-activedescendant': elementIds.getItemId(latestState.highlightedIndex)\n    }), {}, {\n      'aria-labelledby': elementIds.labelId,\n      // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n      // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n      autoComplete: 'off',\n      value: latestState.inputValue\n    }, eventHandlers), rest);\n  }, [dispatch, inputKeyDownHandlers, latest, mouseAndTouchTrackersRef, setGetterPropCallInfo, elementIds]);\n  var getComboboxProps = useCallback(function (_temp7, _temp8) {\n    var _objectSpread11;\n    var _ref26 = _temp7 === void 0 ? {} : _temp7,\n      _ref26$refKey = _ref26.refKey,\n      refKey = _ref26$refKey === void 0 ? 'ref' : _ref26$refKey,\n      ref = _ref26.ref,\n      rest = _objectWithoutProperties(_ref26, _excluded14);\n    var _ref27 = _temp8 === void 0 ? {} : _temp8,\n      _ref27$suppressRefErr = _ref27.suppressRefError,\n      suppressRefError = _ref27$suppressRefErr === void 0 ? false : _ref27$suppressRefErr;\n    setGetterPropCallInfo('getComboboxProps', suppressRefError, refKey, comboboxRef);\n    return _objectSpread((_objectSpread11 = {}, _defineProperty(_objectSpread11, refKey, handleRefs(ref, function (comboboxNode) {\n      comboboxRef.current = comboboxNode;\n    })), _defineProperty(_objectSpread11, \"role\", 'combobox'), _defineProperty(_objectSpread11, 'aria-haspopup', 'listbox'), _defineProperty(_objectSpread11, 'aria-owns', elementIds.menuId), _defineProperty(_objectSpread11, 'aria-expanded', latest.current.state.isOpen), _objectSpread11), rest);\n  }, [latest, setGetterPropCallInfo, elementIds]); // returns\n\n  var toggleMenu = useCallback(function () {\n    dispatch({\n      type: FunctionToggleMenu\n    });\n  }, [dispatch]);\n  var closeMenu = useCallback(function () {\n    dispatch({\n      type: FunctionCloseMenu\n    });\n  }, [dispatch]);\n  var openMenu = useCallback(function () {\n    dispatch({\n      type: FunctionOpenMenu\n    });\n  }, [dispatch]);\n  var setHighlightedIndex = useCallback(function (newHighlightedIndex) {\n    dispatch({\n      type: FunctionSetHighlightedIndex,\n      highlightedIndex: newHighlightedIndex\n    });\n  }, [dispatch]);\n  var selectItem = useCallback(function (newSelectedItem) {\n    dispatch({\n      type: FunctionSelectItem,\n      selectedItem: newSelectedItem\n    });\n  }, [dispatch]);\n  var setInputValue = useCallback(function (newInputValue) {\n    dispatch({\n      type: FunctionSetInputValue,\n      inputValue: newInputValue\n    });\n  }, [dispatch]);\n  var reset = useCallback(function () {\n    dispatch({\n      type: FunctionReset$1\n    });\n  }, [dispatch]);\n  return {\n    // prop getters.\n    getItemProps: getItemProps,\n    getLabelProps: getLabelProps,\n    getMenuProps: getMenuProps,\n    getInputProps: getInputProps,\n    getComboboxProps: getComboboxProps,\n    getToggleButtonProps: getToggleButtonProps,\n    // actions.\n    toggleMenu: toggleMenu,\n    openMenu: openMenu,\n    closeMenu: closeMenu,\n    setHighlightedIndex: setHighlightedIndex,\n    setInputValue: setInputValue,\n    selectItem: selectItem,\n    reset: reset,\n    // state.\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem,\n    inputValue: inputValue\n  };\n}\nvar defaultStateValues = {\n  activeIndex: -1,\n  selectedItems: []\n};\n/**\n * Returns the initial value for a state key in the following order:\n * 1. controlled prop, 2. initial prop, 3. default prop, 4. default\n * value from Downshift.\n *\n * @param {Object} props Props passed to the hook.\n * @param {string} propKey Props key to generate the value for.\n * @returns {any} The initial value for that prop.\n */\n\nfunction getInitialValue(props, propKey) {\n  return getInitialValue$1(props, propKey, defaultStateValues);\n}\n/**\n * Returns the default value for a state key in the following order:\n * 1. controlled prop, 2. default prop, 3. default value from Downshift.\n *\n * @param {Object} props Props passed to the hook.\n * @param {string} propKey Props key to generate the value for.\n * @returns {any} The initial value for that prop.\n */\n\nfunction getDefaultValue(props, propKey) {\n  return getDefaultValue$1(props, propKey, defaultStateValues);\n}\n/**\n * Gets the initial state based on the provided props. It uses initial, default\n * and controlled props related to state in order to compute the initial value.\n *\n * @param {Object} props Props passed to the hook.\n * @returns {Object} The initial state.\n */\n\nfunction getInitialState(props) {\n  var activeIndex = getInitialValue(props, 'activeIndex');\n  var selectedItems = getInitialValue(props, 'selectedItems');\n  return {\n    activeIndex: activeIndex,\n    selectedItems: selectedItems\n  };\n}\n/**\n * Returns true if dropdown keydown operation is permitted. Should not be\n * allowed on keydown with modifier keys (ctrl, alt, shift, meta), on\n * input element with text content that is either highlighted or selection\n * cursor is not at the starting position.\n *\n * @param {KeyboardEvent} event The event from keydown.\n * @returns {boolean} Whether the operation is allowed.\n */\n\nfunction isKeyDownOperationPermitted(event) {\n  if (event.shiftKey || event.metaKey || event.ctrlKey || event.altKey) {\n    return false;\n  }\n  var element = event.target;\n  if (element instanceof HTMLInputElement &&\n  // if element is a text input\n  element.value !== '' && (\n  // and we have text in it\n  // and cursor is either not at the start or is currently highlighting text.\n  element.selectionStart !== 0 || element.selectionEnd !== 0)) {\n    return false;\n  }\n  return true;\n}\n/**\n * Returns a message to be added to aria-live region when item is removed.\n *\n * @param {Object} selectionParameters Parameters required to build the message.\n * @returns {string} The a11y message.\n */\n\nfunction getA11yRemovalMessage(selectionParameters) {\n  var removedSelectedItem = selectionParameters.removedSelectedItem,\n    itemToStringLocal = selectionParameters.itemToString;\n  return \"\".concat(itemToStringLocal(removedSelectedItem), \" has been removed.\");\n}\nvar propTypes = {\n  selectedItems: PropTypes.array,\n  initialSelectedItems: PropTypes.array,\n  defaultSelectedItems: PropTypes.array,\n  itemToString: PropTypes.func,\n  getA11yRemovalMessage: PropTypes.func,\n  stateReducer: PropTypes.func,\n  activeIndex: PropTypes.number,\n  initialActiveIndex: PropTypes.number,\n  defaultActiveIndex: PropTypes.number,\n  onActiveIndexChange: PropTypes.func,\n  onSelectedItemsChange: PropTypes.func,\n  keyNavigationNext: PropTypes.string,\n  keyNavigationPrevious: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\nvar defaultProps = {\n  itemToString: defaultProps$3.itemToString,\n  stateReducer: defaultProps$3.stateReducer,\n  environment: defaultProps$3.environment,\n  getA11yRemovalMessage: getA11yRemovalMessage,\n  keyNavigationNext: 'ArrowRight',\n  keyNavigationPrevious: 'ArrowLeft'\n}; // eslint-disable-next-line import/no-mutable-exports\n\nvar validatePropTypes = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes = function validatePropTypes(options, caller) {\n    PropTypes.checkPropTypes(propTypes, options, 'prop', caller.name);\n  };\n}\nvar SelectedItemClick = process.env.NODE_ENV !== \"production\" ? '__selected_item_click__' : 0;\nvar SelectedItemKeyDownDelete = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_delete__' : 1;\nvar SelectedItemKeyDownBackspace = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_backspace__' : 2;\nvar SelectedItemKeyDownNavigationNext = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_navigation_next__' : 3;\nvar SelectedItemKeyDownNavigationPrevious = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_navigation_previous__' : 4;\nvar DropdownKeyDownNavigationPrevious = process.env.NODE_ENV !== \"production\" ? '__dropdown_keydown_navigation_previous__' : 5;\nvar DropdownKeyDownBackspace = process.env.NODE_ENV !== \"production\" ? '__dropdown_keydown_backspace__' : 6;\nvar DropdownClick = process.env.NODE_ENV !== \"production\" ? '__dropdown_click__' : 7;\nvar FunctionAddSelectedItem = process.env.NODE_ENV !== \"production\" ? '__function_add_selected_item__' : 8;\nvar FunctionRemoveSelectedItem = process.env.NODE_ENV !== \"production\" ? '__function_remove_selected_item__' : 9;\nvar FunctionSetSelectedItems = process.env.NODE_ENV !== \"production\" ? '__function_set_selected_items__' : 10;\nvar FunctionSetActiveIndex = process.env.NODE_ENV !== \"production\" ? '__function_set_active_index__' : 11;\nvar FunctionReset = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 12;\nvar stateChangeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  SelectedItemClick: SelectedItemClick,\n  SelectedItemKeyDownDelete: SelectedItemKeyDownDelete,\n  SelectedItemKeyDownBackspace: SelectedItemKeyDownBackspace,\n  SelectedItemKeyDownNavigationNext: SelectedItemKeyDownNavigationNext,\n  SelectedItemKeyDownNavigationPrevious: SelectedItemKeyDownNavigationPrevious,\n  DropdownKeyDownNavigationPrevious: DropdownKeyDownNavigationPrevious,\n  DropdownKeyDownBackspace: DropdownKeyDownBackspace,\n  DropdownClick: DropdownClick,\n  FunctionAddSelectedItem: FunctionAddSelectedItem,\n  FunctionRemoveSelectedItem: FunctionRemoveSelectedItem,\n  FunctionSetSelectedItems: FunctionSetSelectedItems,\n  FunctionSetActiveIndex: FunctionSetActiveIndex,\n  FunctionReset: FunctionReset\n});\n\n/* eslint-disable complexity */\n\nfunction downshiftMultipleSelectionReducer(state, action) {\n  var type = action.type,\n    index = action.index,\n    props = action.props,\n    selectedItem = action.selectedItem;\n  var activeIndex = state.activeIndex,\n    selectedItems = state.selectedItems;\n  var changes;\n  switch (type) {\n    case SelectedItemClick:\n      changes = {\n        activeIndex: index\n      };\n      break;\n    case SelectedItemKeyDownNavigationPrevious:\n      changes = {\n        activeIndex: activeIndex - 1 < 0 ? 0 : activeIndex - 1\n      };\n      break;\n    case SelectedItemKeyDownNavigationNext:\n      changes = {\n        activeIndex: activeIndex + 1 >= selectedItems.length ? -1 : activeIndex + 1\n      };\n      break;\n    case SelectedItemKeyDownBackspace:\n    case SelectedItemKeyDownDelete:\n      {\n        var newActiveIndex = activeIndex;\n        if (selectedItems.length === 1) {\n          newActiveIndex = -1;\n        } else if (activeIndex === selectedItems.length - 1) {\n          newActiveIndex = selectedItems.length - 2;\n        }\n        changes = _objectSpread({\n          selectedItems: [].concat(_toConsumableArray(selectedItems.slice(0, activeIndex)), _toConsumableArray(selectedItems.slice(activeIndex + 1)))\n        }, {\n          activeIndex: newActiveIndex\n        });\n        break;\n      }\n    case DropdownKeyDownNavigationPrevious:\n      changes = {\n        activeIndex: selectedItems.length - 1\n      };\n      break;\n    case DropdownKeyDownBackspace:\n      changes = {\n        selectedItems: selectedItems.slice(0, selectedItems.length - 1)\n      };\n      break;\n    case FunctionAddSelectedItem:\n      changes = {\n        selectedItems: [].concat(_toConsumableArray(selectedItems), [selectedItem])\n      };\n      break;\n    case DropdownClick:\n      changes = {\n        activeIndex: -1\n      };\n      break;\n    case FunctionRemoveSelectedItem:\n      {\n        var _newActiveIndex = activeIndex;\n        var selectedItemIndex = selectedItems.indexOf(selectedItem);\n        if (selectedItemIndex >= 0) {\n          if (selectedItems.length === 1) {\n            _newActiveIndex = -1;\n          } else if (selectedItemIndex === selectedItems.length - 1) {\n            _newActiveIndex = selectedItems.length - 2;\n          }\n          changes = {\n            selectedItems: [].concat(_toConsumableArray(selectedItems.slice(0, selectedItemIndex)), _toConsumableArray(selectedItems.slice(selectedItemIndex + 1))),\n            activeIndex: _newActiveIndex\n          };\n        }\n        break;\n      }\n    case FunctionSetSelectedItems:\n      {\n        var newSelectedItems = action.selectedItems;\n        changes = {\n          selectedItems: newSelectedItems\n        };\n        break;\n      }\n    case FunctionSetActiveIndex:\n      {\n        var _newActiveIndex2 = action.activeIndex;\n        changes = {\n          activeIndex: _newActiveIndex2\n        };\n        break;\n      }\n    case FunctionReset:\n      changes = {\n        activeIndex: getDefaultValue(props, 'activeIndex'),\n        selectedItems: getDefaultValue(props, 'selectedItems')\n      };\n      break;\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n  return _objectSpread(_objectSpread({}, state), changes);\n}\nuseMultipleSelection.stateChangeTypes = stateChangeTypes;\nfunction useMultipleSelection(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n  validatePropTypes(userProps, useMultipleSelection); // Props defaults and destructuring.\n\n  var props = _objectSpread(_objectSpread({}, defaultProps), userProps);\n  var getA11yRemovalMessage = props.getA11yRemovalMessage,\n    itemToString = props.itemToString,\n    environment = props.environment,\n    keyNavigationNext = props.keyNavigationNext,\n    keyNavigationPrevious = props.keyNavigationPrevious; // Reducer init.\n\n  var _useControlledReducer5 = useControlledReducer$1(downshiftMultipleSelectionReducer, getInitialState(props), props),\n    _useControlledReducer6 = _slicedToArray(_useControlledReducer5, 2),\n    state = _useControlledReducer6[0],\n    dispatch = _useControlledReducer6[1];\n  var activeIndex = state.activeIndex,\n    selectedItems = state.selectedItems; // Refs.\n\n  var isInitialMountRef = useRef(true);\n  var dropdownRef = useRef(null);\n  var previousSelectedItemsRef = useRef(selectedItems);\n  var selectedItemRefs = useRef();\n  selectedItemRefs.current = [];\n  var latest = useLatestRef({\n    state: state,\n    props: props\n  }); // Effects.\n\n  /* Sets a11y status message on changes in selectedItem. */\n\n  useEffect(function () {\n    if (isInitialMountRef.current) {\n      return;\n    }\n    if (selectedItems.length < previousSelectedItemsRef.current.length) {\n      var removedSelectedItem = previousSelectedItemsRef.current.find(function (item) {\n        return selectedItems.indexOf(item) < 0;\n      });\n      setStatus(getA11yRemovalMessage({\n        itemToString: itemToString,\n        resultCount: selectedItems.length,\n        removedSelectedItem: removedSelectedItem,\n        activeIndex: activeIndex,\n        activeSelectedItem: selectedItems[activeIndex]\n      }), environment.document);\n    }\n    previousSelectedItemsRef.current = selectedItems; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedItems.length]); // Sets focus on active item.\n\n  useEffect(function () {\n    if (isInitialMountRef.current) {\n      return;\n    }\n    if (activeIndex === -1 && dropdownRef.current) {\n      dropdownRef.current.focus();\n    } else if (selectedItemRefs.current[activeIndex]) {\n      selectedItemRefs.current[activeIndex].focus();\n    }\n  }, [activeIndex]);\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props: props,\n    state: state\n  });\n  var setGetterPropCallInfo = useGetterPropsCalledChecker('getDropdownProps'); // Make initial ref false.\n\n  useEffect(function () {\n    isInitialMountRef.current = false;\n  }, []); // Event handler functions.\n\n  var selectedItemKeyDownHandlers = useMemo(function () {\n    var _ref28;\n    return _ref28 = {}, _defineProperty(_ref28, keyNavigationPrevious, function () {\n      dispatch({\n        type: SelectedItemKeyDownNavigationPrevious\n      });\n    }), _defineProperty(_ref28, keyNavigationNext, function () {\n      dispatch({\n        type: SelectedItemKeyDownNavigationNext\n      });\n    }), _defineProperty(_ref28, \"Delete\", function Delete() {\n      dispatch({\n        type: SelectedItemKeyDownDelete\n      });\n    }), _defineProperty(_ref28, \"Backspace\", function Backspace() {\n      dispatch({\n        type: SelectedItemKeyDownBackspace\n      });\n    }), _ref28;\n  }, [dispatch, keyNavigationNext, keyNavigationPrevious]);\n  var dropdownKeyDownHandlers = useMemo(function () {\n    var _ref29;\n    return _ref29 = {}, _defineProperty(_ref29, keyNavigationPrevious, function (event) {\n      if (isKeyDownOperationPermitted(event)) {\n        dispatch({\n          type: DropdownKeyDownNavigationPrevious\n        });\n      }\n    }), _defineProperty(_ref29, \"Backspace\", function Backspace(event) {\n      if (isKeyDownOperationPermitted(event)) {\n        dispatch({\n          type: DropdownKeyDownBackspace\n        });\n      }\n    }), _ref29;\n  }, [dispatch, keyNavigationPrevious]); // Getter props.\n\n  var getSelectedItemProps = useCallback(function (_temp) {\n    var _objectSpread12;\n    var _ref30 = _temp === void 0 ? {} : _temp,\n      _ref30$refKey = _ref30.refKey,\n      refKey = _ref30$refKey === void 0 ? 'ref' : _ref30$refKey,\n      ref = _ref30.ref,\n      onClick = _ref30.onClick,\n      onKeyDown = _ref30.onKeyDown,\n      selectedItem = _ref30.selectedItem,\n      index = _ref30.index,\n      rest = _objectWithoutProperties(_ref30, _excluded15);\n    var latestState = latest.current.state;\n    var itemIndex = getItemIndex(index, selectedItem, latestState.selectedItems);\n    if (itemIndex < 0) {\n      throw new Error('Pass either selectedItem or index in getSelectedItemProps!');\n    }\n    var selectedItemHandleClick = function selectedItemHandleClick() {\n      dispatch({\n        type: SelectedItemClick,\n        index: index\n      });\n    };\n    var selectedItemHandleKeyDown = function selectedItemHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n      if (key && selectedItemKeyDownHandlers[key]) {\n        selectedItemKeyDownHandlers[key](event);\n      }\n    };\n    return _objectSpread((_objectSpread12 = {}, _defineProperty(_objectSpread12, refKey, handleRefs(ref, function (selectedItemNode) {\n      if (selectedItemNode) {\n        selectedItemRefs.current.push(selectedItemNode);\n      }\n    })), _defineProperty(_objectSpread12, \"tabIndex\", index === latestState.activeIndex ? 0 : -1), _defineProperty(_objectSpread12, \"onClick\", callAllEventHandlers(onClick, selectedItemHandleClick)), _defineProperty(_objectSpread12, \"onKeyDown\", callAllEventHandlers(onKeyDown, selectedItemHandleKeyDown)), _objectSpread12), rest);\n  }, [dispatch, latest, selectedItemKeyDownHandlers]);\n  var getDropdownProps = useCallback(function (_temp2, _temp3) {\n    var _ref31 = _temp2 === void 0 ? {} : _temp2,\n      _ref31$refKey = _ref31.refKey,\n      refKey = _ref31$refKey === void 0 ? 'ref' : _ref31$refKey,\n      ref = _ref31.ref,\n      onKeyDown = _ref31.onKeyDown,\n      onClick = _ref31.onClick,\n      _ref31$preventKeyActi = _ref31.preventKeyAction,\n      preventKeyAction = _ref31$preventKeyActi === void 0 ? false : _ref31$preventKeyActi,\n      rest = _objectWithoutProperties(_ref31, _excluded16);\n    var _ref32 = _temp3 === void 0 ? {} : _temp3,\n      _ref32$suppressRefErr = _ref32.suppressRefError,\n      suppressRefError = _ref32$suppressRefErr === void 0 ? false : _ref32$suppressRefErr;\n    setGetterPropCallInfo('getDropdownProps', suppressRefError, refKey, dropdownRef);\n    var dropdownHandleKeyDown = function dropdownHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n      if (key && dropdownKeyDownHandlers[key]) {\n        dropdownKeyDownHandlers[key](event);\n      }\n    };\n    var dropdownHandleClick = function dropdownHandleClick() {\n      dispatch({\n        type: DropdownClick\n      });\n    };\n    return _objectSpread(_objectSpread(_defineProperty({}, refKey, handleRefs(ref, function (dropdownNode) {\n      if (dropdownNode) {\n        dropdownRef.current = dropdownNode;\n      }\n    })), !preventKeyAction && {\n      onKeyDown: callAllEventHandlers(onKeyDown, dropdownHandleKeyDown),\n      onClick: callAllEventHandlers(onClick, dropdownHandleClick)\n    }), rest);\n  }, [dispatch, dropdownKeyDownHandlers, setGetterPropCallInfo]); // returns\n\n  var addSelectedItem = useCallback(function (selectedItem) {\n    dispatch({\n      type: FunctionAddSelectedItem,\n      selectedItem: selectedItem\n    });\n  }, [dispatch]);\n  var removeSelectedItem = useCallback(function (selectedItem) {\n    dispatch({\n      type: FunctionRemoveSelectedItem,\n      selectedItem: selectedItem\n    });\n  }, [dispatch]);\n  var setSelectedItems = useCallback(function (newSelectedItems) {\n    dispatch({\n      type: FunctionSetSelectedItems,\n      selectedItems: newSelectedItems\n    });\n  }, [dispatch]);\n  var setActiveIndex = useCallback(function (newActiveIndex) {\n    dispatch({\n      type: FunctionSetActiveIndex,\n      activeIndex: newActiveIndex\n    });\n  }, [dispatch]);\n  var reset = useCallback(function () {\n    dispatch({\n      type: FunctionReset\n    });\n  }, [dispatch]);\n  return {\n    getSelectedItemProps: getSelectedItemProps,\n    getDropdownProps: getDropdownProps,\n    addSelectedItem: addSelectedItem,\n    removeSelectedItem: removeSelectedItem,\n    setSelectedItems: setSelectedItems,\n    setActiveIndex: setActiveIndex,\n    reset: reset,\n    selectedItems: selectedItems,\n    activeIndex: activeIndex\n  };\n}\nexport { Downshift$1 as default, resetIdCounter, useCombobox, useMultipleSelection, useSelect };","map":{"version":3,"names":["PropTypes","Component","cloneElement","useRef","useEffect","useCallback","useLayoutEffect","useReducer","useMemo","isForwardRef","computeScrollIntoView","__assign","idCounter","cbToCb","cb","noop","scrollIntoView","node","menuNode","actions","boundary","block","scrollMode","forEach","_ref","el","top","left","scrollTop","scrollLeft","isOrContainsNode","parent","child","environment","result","Node","contains","debounce","fn","time","timeoutId","cancel","clearTimeout","wrapper","_len","arguments","length","args","Array","_key","setTimeout","apply","callAllEventHandlers","_len2","fns","_key2","event","_len3","_key3","some","concat","preventDownshiftDefault","hasOwnProperty","nativeEvent","handleRefs","_len4","refs","_key4","ref","current","generateId","String","resetIdCounter","getA11yStatusMessage$1","_ref2","isOpen","resultCount","previousResultCount","unwrapArray","arg","defaultValue","isArray","isDOMElement","element","type","getElementProps","props","requiredProp","fnName","propName","console","error","stateKeys","pickState","state","k","getState","Object","keys","reduce","prevState","key","isControlledProp","undefined","normalizeArrowKey","keyCode","indexOf","isPlainObject","obj","prototype","toString","call","getNextWrappingIndex","moveAmount","baseIndex","itemCount","getItemNodeFromIndex","circular","itemsLastIndex","newIndex","nonDisabledNewIndex","getNextNonDisabledIndex","currentElementNode","hasAttribute","index","targetWithinDownshift","target","downshiftElements","checkActiveElement","contextNode","document","activeElement","validateControlledUnchanged","process","env","NODE_ENV","prevProps","nextProps","warningDescription","propKey","cleanupStatus","documentProp","getStatusDiv","textContent","setStatus","status","div","statusDiv","getElementById","createElement","setAttribute","assign","style","border","clip","height","margin","overflow","padding","position","width","body","appendChild","unknown","mouseUp","itemMouseEnter","keyDownArrowUp","keyDownArrowDown","keyDownEscape","keyDownEnter","keyDownHome","keyDownEnd","clickItem","blurInput","changeInput","keyDownSpaceButton","clickButton","blurButton","controlledPropUpdatedSelectedItem","touchEnd","stateChangeTypes$3","freeze","__proto__","Downshift","_Component","_inherits","_super","_createSuper","_props","_this2","_classCallCheck","_this","_assertThisInitialized","id","menuId","labelId","inputId","getItemId","input","items","timeoutIds","internalSetTimeout","filter","i","push","setItemCount","count","unsetItemCount","setHighlightedIndex","highlightedIndex","otherStateToSet","defaultHighlightedIndex","internalSetState","_objectSpread","clearSelection","selectedItem","inputValue","defaultIsOpen","selectItem","item","itemToString","selectItemAtIndex","itemIndex","selectHighlightedItem","stateToSet","isItemSelected","onChangeArg","onStateChangeArg","isStateToSetFunction","onInputValueChange","getStateAndHelpers","setState","newStateToSet","stateReducer","nextState","hasMoreStateThanType","onStateChange","onSelect","onChange","onUserAction","rootRef","_rootNode","getRootProps","_temp","_temp2","_objectSpread2","_ref5","_ref5$refKey","refKey","rest","_objectWithoutProperties","_excluded","_ref6","_ref6$suppressRefErro","suppressRefError","called","_this$getState","_defineProperty","keyDownHandlers","ArrowDown","_this3","preventDefault","amount","shiftKey","moveHighlightedIndex","getItemCount","_this3$getState","nextHighlightedIndex","ArrowUp","_this4","_this4$getState","Enter","which","_this$getState2","itemNode","Escape","reset","buttonKeyDownHandlers","_","toggleMenu","inputKeyDownHandlers","Home","_this5","_this$getState3","newHighlightedIndex","End","_this6","_this$getState4","getToggleButtonProps","_temp3","_ref7","onClick","onPress","onKeyDown","onKeyUp","onBlur","_excluded2","_this$getState5","enabledEventHandlers","buttonHandleClick","buttonHandleKeyDown","buttonHandleKeyUp","buttonHandleBlur","eventHandlers","disabled","role","focus","blurTarget","isMouseDown","getLabelProps","htmlFor","getInputProps","_temp4","_ref8","onInput","onChangeText","_excluded3","onChangeKey","_this$getState6","_eventHandlers","inputHandleChange","inputHandleKeyDown","inputHandleBlur","autoComplete","value","downshiftButtonIsActive","dataset","toggle","menuRef","_menuNode","getMenuProps","_temp5","_temp6","_objectSpread3","_ref9","_ref9$refKey","_excluded4","_ref10","_ref10$suppressRefErr","getItemProps","_temp7","_ref11","onMouseMove","onMouseDown","_ref11$item","_excluded5","onSelectKey","customClickHandler","avoidScrolling","clearItems","_this$getState7","openMenu","closeMenu","updateStatus","getA11yStatusMessage","highlightedItem","_this2$props","_this2$props$initialH","initialHighlightedIndex","_highlightedIndex","_this2$props$initialI","initialIsOpen","_isOpen","_this2$props$initialI2","initialInputValue","_inputValue","_this2$props$initialS","initialSelectedItem","_selectedItem","_state","_createClass","internalClearTimeouts","stateToMerge","scrollHighlightedItemIntoView","_this7","_this$getState8","_this$getState9","componentDidMount","_this8","validateGetMenuPropsCalledCorrectly","onMouseUp","contextWithinDownshift","onOuterClick","onTouchStart","isTouchMove","onTouchMove","onTouchEnd","addEventListener","cleanup","removeEventListener","shouldScroll","_ref12","currentHighlightedIndex","_ref13","prevHighlightedIndex","scrollWhenOpen","scrollWhenNavigating","componentDidUpdate","selectedItemChanged","componentWillUnmount","render","children","validateGetRootPropsCalledCorrectly","Error","defaultProps","warn","prevItem","window","stateChangeTypes","propTypes","func","number","bool","any","string","shape","Downshift$1","_ref3","_ref4","refKeySpecified","isComposite","dropdownDefaultStateValues","callOnChangeProps","action","newState","changes","invokeOnChangeHandler","handler","capitalizeString","s","a","getA11ySelectionMessage","selectionParameters","itemToStringLocal","updateA11yStatus","getA11yMessage","useIsomorphicLayoutEffect","useElementIds","_ref$id","toggleButtonId","elementIdsRef","getItemIndex","isAcceptedCharacterKey","test","slice","toUpperCase","useLatestRef","val","useEnhancedReducer","reducer","initialState","prevStateRef","actionRef","enhancedReducer","_useReducer","_useReducer2","_slicedToArray","dispatch","propsRef","dispatchWithProps","useControlledReducer$1","_useEnhancedReducer","_useEnhancedReducer2","defaultProps$3","circularNavigation","getDefaultValue$1","defaultStateValues","getInitialValue$1","initialValue","getInitialState$2","getHighlightedIndexOnOpen","offset","useMouseAndTouchTracker","downshiftElementRefs","handleBlur","mouseAndTouchTrackersRef","map","useGetterPropsCalledChecker","isInitialMountRef","propKeys","getterPropsCalledRef","acc","propCallInfo","elementRef","setGetterPropCallInfo","useA11yMessageSetter","dependencyArray","isInitialMount","_excluded6","useScrollIntoView","itemRefs","menuElement","scrollIntoViewProp","shouldScrollRef","useControlPropsValidator","prevPropsRef","downshiftCommonReducer","ItemMouseMove","MenuMouseLeave","ToggleButtonClick","FunctionToggleMenu","FunctionOpenMenu","FunctionCloseMenu","FunctionSetHighlightedIndex","FunctionSetInputValue","FunctionReset","getItemIndexByCharacterKey","_a","keysSoFar","lowerCasedKeysSoFar","toLowerCase","offsetIndex","startsWith","propTypes$2","array","isRequired","defaultSelectedItem","onSelectedItemChange","onHighlightedIndexChange","onIsOpenChange","defaultProps$2","validatePropTypes$2","options","caller","checkPropTypes","name","MenuKeyDownArrowDown","MenuKeyDownArrowUp","MenuKeyDownEscape","MenuKeyDownHome","MenuKeyDownEnd","MenuKeyDownEnter","MenuKeyDownSpaceButton","MenuKeyDownCharacter","MenuBlur","MenuMouseLeave$1","ItemMouseMove$1","ItemClick$1","ToggleButtonClick$1","ToggleButtonKeyDownArrowDown","ToggleButtonKeyDownArrowUp","ToggleButtonKeyDownCharacter","FunctionToggleMenu$1","FunctionOpenMenu$1","FunctionCloseMenu$1","FunctionSetHighlightedIndex$1","FunctionSelectItem$1","FunctionSetInputValue$1","FunctionReset$2","stateChangeTypes$2","ItemClick","FunctionSelectItem","downshiftSelectReducer","lowercasedKey","useSelect","userProps","_useControlledReducer","_useControlledReducer2","toggleButtonRef","shouldBlurRef","clearTimeoutRef","elementIds","previousResultCountRef","latest","outerDispatch","toggleButtonKeyDownHandlers","menuKeyDownHandlers","newSelectedItem","setInputValue","newInputValue","labelProps","_objectSpread4","_ref14","onMouseLeave","_ref14$refKey","_excluded7","_ref15","_ref15$suppressRefErr","latestState","menuHandleKeyDown","menuHandleBlur","shouldBlur","menuHandleMouseLeave","_objectSpread5","_ref16","_ref16$refKey","_excluded8","_ref17","_ref17$suppressRefErr","toggleButtonHandleClick","toggleButtonHandleKeyDown","toggleProps","toggleButtonNode","_ref18","_ref18$refKey","_excluded9","_latest$current","latestProps","itemHandleMouseMove","itemHandleClick","itemProps","InputKeyDownArrowDown","InputKeyDownArrowUp","InputKeyDownEscape","InputKeyDownHome","InputKeyDownEnd","InputKeyDownEnter","InputChange","InputBlur","FunctionReset$1","ControlledPropUpdatedSelectedItem","stateChangeTypes$1","getInitialState$1","defaultInputValue","propTypes$1","useControlledReducer","previousSelectedItemRef","_useEnhancedReducer3","_useEnhancedReducer4","validatePropTypes$1","defaultProps$1","downshiftUseComboboxReducer","useCombobox","_useControlledReducer3","_useControlledReducer4","inputRef","comboboxRef","focusOnOpen","_objectSpread7","_ref19","_ref19$refKey","_excluded10","_ref20","_ref20$suppressRefErr","_objectSpread8","_ref21","_ref21$refKey","_excluded11","_latest$current2","itemHandleMouseDown","e","_objectSpread9","_ref23","_ref23$refKey","_excluded12","_objectSpread10","_ref24","_ref24$refKey","_excluded13","_ref25","_ref25$suppressRefErr","_eventHandlers2","inputNode","getComboboxProps","_temp8","_objectSpread11","_ref26","_ref26$refKey","_excluded14","_ref27","_ref27$suppressRefErr","comboboxNode","activeIndex","selectedItems","getInitialValue","getDefaultValue","getInitialState","isKeyDownOperationPermitted","metaKey","ctrlKey","altKey","HTMLInputElement","selectionStart","selectionEnd","getA11yRemovalMessage","removedSelectedItem","initialSelectedItems","defaultSelectedItems","initialActiveIndex","defaultActiveIndex","onActiveIndexChange","onSelectedItemsChange","keyNavigationNext","keyNavigationPrevious","validatePropTypes","SelectedItemClick","SelectedItemKeyDownDelete","SelectedItemKeyDownBackspace","SelectedItemKeyDownNavigationNext","SelectedItemKeyDownNavigationPrevious","DropdownKeyDownNavigationPrevious","DropdownKeyDownBackspace","DropdownClick","FunctionAddSelectedItem","FunctionRemoveSelectedItem","FunctionSetSelectedItems","FunctionSetActiveIndex","downshiftMultipleSelectionReducer","newActiveIndex","_toConsumableArray","selectedItemIndex","newSelectedItems","useMultipleSelection","_useControlledReducer5","_useControlledReducer6","dropdownRef","previousSelectedItemsRef","selectedItemRefs","find","activeSelectedItem","selectedItemKeyDownHandlers","_ref28","Delete","Backspace","dropdownKeyDownHandlers","_ref29","getSelectedItemProps","_objectSpread12","_ref30","_ref30$refKey","_excluded15","selectedItemHandleClick","selectedItemHandleKeyDown","selectedItemNode","getDropdownProps","_ref31","_ref31$refKey","_ref31$preventKeyActi","preventKeyAction","_excluded16","_ref32","_ref32$suppressRefErr","dropdownHandleKeyDown","dropdownHandleClick","dropdownNode","addSelectedItem","removeSelectedItem","setSelectedItems","setActiveIndex","default"],"sources":["/Users/gracielaalaniz/Documents/cloudflare-build/node_modules/downshift/dist/downshift.esm.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Component, cloneElement, useRef, useEffect, useCallback, useLayoutEffect, useReducer, useMemo } from 'react';\nimport { isForwardRef } from 'react-is';\nimport computeScrollIntoView from 'compute-scroll-into-view';\nimport { __assign } from 'tslib';\n\nlet idCounter = 0;\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\n\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop;\n}\n\nfunction noop() {}\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node the element that should scroll into view\n * @param {HTMLElement} menuNode the menu element of the component\n */\n\n\nfunction scrollIntoView(node, menuNode) {\n  if (!node) {\n    return;\n  }\n\n  const actions = computeScrollIntoView(node, {\n    boundary: menuNode,\n    block: 'nearest',\n    scrollMode: 'if-needed'\n  });\n  actions.forEach(_ref => {\n    let {\n      el,\n      top,\n      left\n    } = _ref;\n    el.scrollTop = top;\n    el.scrollLeft = left;\n  });\n}\n/**\n * @param {HTMLElement} parent the parent node\n * @param {HTMLElement} child the child node\n * @param {Window} environment The window context where downshift renders.\n * @return {Boolean} whether the parent is the child or the child is in the parent\n */\n\n\nfunction isOrContainsNode(parent, child, environment) {\n  const result = parent === child || child instanceof environment.Node && parent.contains && parent.contains(child);\n  return result;\n}\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\n\n\nfunction debounce(fn, time) {\n  let timeoutId;\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n  }\n\n  function wrapper() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    cancel();\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      fn(...args);\n    }, time);\n  }\n\n  wrapper.cancel = cancel;\n  return wrapper;\n}\n/**\n * This is intended to be used to compose event handlers.\n * They are executed in order until one of them sets\n * `event.preventDownshiftDefault = true`.\n * @param {...Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\n\n\nfunction callAllEventHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function (event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return fns.some(fn => {\n      if (fn) {\n        fn(event, ...args);\n      }\n\n      return event.preventDownshiftDefault || event.hasOwnProperty('nativeEvent') && event.nativeEvent.preventDownshiftDefault;\n    });\n  };\n}\n\nfunction handleRefs() {\n  for (var _len4 = arguments.length, refs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    refs[_key4] = arguments[_key4];\n  }\n\n  return node => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(node);\n      } else if (ref) {\n        ref.current = node;\n      }\n    });\n  };\n}\n/**\n * This generates a unique ID for an instance of Downshift\n * @return {String} the unique ID\n */\n\n\nfunction generateId() {\n  return String(idCounter++);\n}\n/**\n * Resets idCounter to 0. Used for SSR.\n */\n\n\nfunction resetIdCounter() {\n  idCounter = 0;\n}\n/**\n * Default implementation for status message. Only added when menu is open.\n * Will specify if there are results in the list, and if so, how many,\n * and what keys are relevant.\n *\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\n\n\nfunction getA11yStatusMessage$1(_ref2) {\n  let {\n    isOpen,\n    resultCount,\n    previousResultCount\n  } = _ref2;\n\n  if (!isOpen) {\n    return '';\n  }\n\n  if (!resultCount) {\n    return 'No results are available.';\n  }\n\n  if (resultCount !== previousResultCount) {\n    return `${resultCount} result${resultCount === 1 ? ' is' : 's are'} available, use up and down arrow keys to navigate. Press Enter key to select.`;\n  }\n\n  return '';\n}\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\n\n\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ?\n  /* istanbul ignore next (preact) */\n  arg[0] : arg;\n\n  if (!arg && defaultValue) {\n    return defaultValue;\n  } else {\n    return arg;\n  }\n}\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\n\n\nfunction isDOMElement(element) {\n\n\n  return typeof element.type === 'string';\n}\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\n\n\nfunction getElementProps(element) {\n\n  return element.props;\n}\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\n\n\nfunction requiredProp(fnName, propName) {\n  // eslint-disable-next-line no-console\n  console.error(`The property \"${propName}\" is required in \"${fnName}\"`);\n}\n\nconst stateKeys = ['highlightedIndex', 'inputValue', 'isOpen', 'selectedItem', 'type'];\n/**\n * @param {Object} state the state object\n * @return {Object} state that is relevant to downshift\n */\n\nfunction pickState(state) {\n  if (state === void 0) {\n    state = {};\n  }\n\n  const result = {};\n  stateKeys.forEach(k => {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k];\n    }\n  });\n  return result;\n}\n/**\n * This will perform a shallow merge of the given state object\n * with the state coming from props\n * (for the controlled component scenario)\n * This is used in state updater functions so they're referencing\n * the right state regardless of where it comes from.\n *\n * @param {Object} state The state of the component/hook.\n * @param {Object} props The props that may contain controlled values.\n * @returns {Object} The merged controlled state.\n */\n\n\nfunction getState(state, props) {\n  return Object.keys(state).reduce((prevState, key) => {\n    prevState[key] = isControlledProp(props, key) ? props[key] : state[key];\n    return prevState;\n  }, {});\n}\n/**\n * This determines whether a prop is a \"controlled prop\" meaning it is\n * state which is controlled by the outside of this component rather\n * than within this component.\n *\n * @param {Object} props The props that may contain controlled values.\n * @param {String} key the key to check\n * @return {Boolean} whether it is a controlled controlled prop\n */\n\n\nfunction isControlledProp(props, key) {\n  return props[key] !== undefined;\n}\n/**\n * Normalizes the 'key' property of a KeyboardEvent in IE/Edge\n * @param {Object} event a keyboardEvent object\n * @return {String} keyboard key\n */\n\n\nfunction normalizeArrowKey(event) {\n  const {\n    key,\n    keyCode\n  } = event;\n  /* istanbul ignore next (ie) */\n\n  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {\n    return `Arrow${key}`;\n  }\n\n  return key;\n}\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\n\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n/**\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\n * it will wrap to either 0 or itemCount - 1.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index after the move.\n */\n\n\nfunction getNextWrappingIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {\n  if (circular === void 0) {\n    circular = true;\n  }\n\n  if (itemCount === 0) {\n    return -1;\n  }\n\n  const itemsLastIndex = itemCount - 1;\n\n  if (typeof baseIndex !== 'number' || baseIndex < 0 || baseIndex >= itemCount) {\n    baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n  }\n\n  let newIndex = baseIndex + moveAmount;\n\n  if (newIndex < 0) {\n    newIndex = circular ? itemsLastIndex : 0;\n  } else if (newIndex > itemsLastIndex) {\n    newIndex = circular ? 0 : itemsLastIndex;\n  }\n\n  const nonDisabledNewIndex = getNextNonDisabledIndex(moveAmount, newIndex, itemCount, getItemNodeFromIndex, circular);\n\n  if (nonDisabledNewIndex === -1) {\n    return baseIndex >= itemCount ? -1 : baseIndex;\n  }\n\n  return nonDisabledNewIndex;\n}\n/**\n * Returns the next index in the list of an item that is not disabled.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index. Returns baseIndex if item is not disabled. Returns next non-disabled item otherwise. If no non-disabled found it will return -1.\n */\n\n\nfunction getNextNonDisabledIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {\n  const currentElementNode = getItemNodeFromIndex(baseIndex);\n\n  if (!currentElementNode || !currentElementNode.hasAttribute('disabled')) {\n    return baseIndex;\n  }\n\n  if (moveAmount > 0) {\n    for (let index = baseIndex + 1; index < itemCount; index++) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  } else {\n    for (let index = baseIndex - 1; index >= 0; index--) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  }\n\n  if (circular) {\n    return moveAmount > 0 ? getNextNonDisabledIndex(1, 0, itemCount, getItemNodeFromIndex, false) : getNextNonDisabledIndex(-1, itemCount - 1, itemCount, getItemNodeFromIndex, false);\n  }\n\n  return -1;\n}\n/**\n * Checks if event target is within the downshift elements.\n *\n * @param {EventTarget} target Target to check.\n * @param {HTMLElement[]} downshiftElements The elements that form downshift (list, toggle button etc).\n * @param {Window} environment The window context where downshift renders.\n * @param {boolean} checkActiveElement Whether to also check activeElement.\n *\n * @returns {boolean} Whether or not the target is within downshift elements.\n */\n\n\nfunction targetWithinDownshift(target, downshiftElements, environment, checkActiveElement) {\n  if (checkActiveElement === void 0) {\n    checkActiveElement = true;\n  }\n\n  return downshiftElements.some(contextNode => contextNode && (isOrContainsNode(contextNode, target, environment) || checkActiveElement && isOrContainsNode(contextNode, environment.document.activeElement, environment)));\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nlet validateControlledUnchanged = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validateControlledUnchanged = (state, prevProps, nextProps) => {\n    const warningDescription = `This prop should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Downshift element for the lifetime of the component. More info: https://github.com/downshift-js/downshift#control-props`;\n    Object.keys(state).forEach(propKey => {\n      if (prevProps[propKey] !== undefined && nextProps[propKey] === undefined) {\n        // eslint-disable-next-line no-console\n        console.error(`downshift: A component has changed the controlled prop \"${propKey}\" to be uncontrolled. ${warningDescription}`);\n      } else if (prevProps[propKey] === undefined && nextProps[propKey] !== undefined) {\n        // eslint-disable-next-line no-console\n        console.error(`downshift: A component has changed the uncontrolled prop \"${propKey}\" to be controlled. ${warningDescription}`);\n      }\n    });\n  };\n}\n\nconst cleanupStatus = debounce(documentProp => {\n  getStatusDiv(documentProp).textContent = '';\n}, 500);\n/**\n * @param {String} status the status message\n * @param {Object} documentProp document passed by the user.\n */\n\nfunction setStatus(status, documentProp) {\n  const div = getStatusDiv(documentProp);\n\n  if (!status) {\n    return;\n  }\n\n  div.textContent = status;\n  cleanupStatus(documentProp);\n}\n/**\n * Get the status node or create it if it does not already exist.\n * @param {Object} documentProp document passed by the user.\n * @return {HTMLElement} the status node.\n */\n\n\nfunction getStatusDiv(documentProp) {\n  if (documentProp === void 0) {\n    documentProp = document;\n  }\n\n  let statusDiv = documentProp.getElementById('a11y-status-message');\n\n  if (statusDiv) {\n    return statusDiv;\n  }\n\n  statusDiv = documentProp.createElement('div');\n  statusDiv.setAttribute('id', 'a11y-status-message');\n  statusDiv.setAttribute('role', 'status');\n  statusDiv.setAttribute('aria-live', 'polite');\n  statusDiv.setAttribute('aria-relevant', 'additions text');\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px'\n  });\n  documentProp.body.appendChild(statusDiv);\n  return statusDiv;\n}\n\nconst unknown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_unknown__' : 0;\nconst mouseUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_mouseup__' : 1;\nconst itemMouseEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_item_mouseenter__' : 2;\nconst keyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_up__' : 3;\nconst keyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_down__' : 4;\nconst keyDownEscape = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_escape__' : 5;\nconst keyDownEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_enter__' : 6;\nconst keyDownHome = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_home__' : 7;\nconst keyDownEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_end__' : 8;\nconst clickItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_item__' : 9;\nconst blurInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_input__' : 10;\nconst changeInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_change_input__' : 11;\nconst keyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_space_button__' : 12;\nconst clickButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_button__' : 13;\nconst blurButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_button__' : 14;\nconst controlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_controlled_prop_updated_selected_item__' : 15;\nconst touchEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_touchend__' : 16;\n\nvar stateChangeTypes$3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  unknown: unknown,\n  mouseUp: mouseUp,\n  itemMouseEnter: itemMouseEnter,\n  keyDownArrowUp: keyDownArrowUp,\n  keyDownArrowDown: keyDownArrowDown,\n  keyDownEscape: keyDownEscape,\n  keyDownEnter: keyDownEnter,\n  keyDownHome: keyDownHome,\n  keyDownEnd: keyDownEnd,\n  clickItem: clickItem,\n  blurInput: blurInput,\n  changeInput: changeInput,\n  keyDownSpaceButton: keyDownSpaceButton,\n  clickButton: clickButton,\n  blurButton: blurButton,\n  controlledPropUpdatedSelectedItem: controlledPropUpdatedSelectedItem,\n  touchEnd: touchEnd\n});\n\n/* eslint camelcase:0 */\n\nconst Downshift = /*#__PURE__*/(() => {\n  class Downshift extends Component {\n    constructor(_props) {\n      var _this;\n\n      super(_props);\n      _this = this;\n      this.id = this.props.id || `downshift-${generateId()}`;\n      this.menuId = this.props.menuId || `${this.id}-menu`;\n      this.labelId = this.props.labelId || `${this.id}-label`;\n      this.inputId = this.props.inputId || `${this.id}-input`;\n\n      this.getItemId = this.props.getItemId || (index => `${this.id}-item-${index}`);\n\n      this.input = null;\n      this.items = [];\n      this.itemCount = null;\n      this.previousResultCount = 0;\n      this.timeoutIds = [];\n\n      this.internalSetTimeout = (fn, time) => {\n        const id = setTimeout(() => {\n          this.timeoutIds = this.timeoutIds.filter(i => i !== id);\n          fn();\n        }, time);\n        this.timeoutIds.push(id);\n      };\n\n      this.setItemCount = count => {\n        this.itemCount = count;\n      };\n\n      this.unsetItemCount = () => {\n        this.itemCount = null;\n      };\n\n      this.setHighlightedIndex = function (highlightedIndex, otherStateToSet) {\n        if (highlightedIndex === void 0) {\n          highlightedIndex = _this.props.defaultHighlightedIndex;\n        }\n\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState({\n          highlightedIndex,\n          ...otherStateToSet\n        });\n      };\n\n      this.clearSelection = cb => {\n        this.internalSetState({\n          selectedItem: null,\n          inputValue: '',\n          highlightedIndex: this.props.defaultHighlightedIndex,\n          isOpen: this.props.defaultIsOpen\n        }, cb);\n      };\n\n      this.selectItem = (item, otherStateToSet, cb) => {\n        otherStateToSet = pickState(otherStateToSet);\n        this.internalSetState({\n          isOpen: this.props.defaultIsOpen,\n          highlightedIndex: this.props.defaultHighlightedIndex,\n          selectedItem: item,\n          inputValue: this.props.itemToString(item),\n          ...otherStateToSet\n        }, cb);\n      };\n\n      this.selectItemAtIndex = (itemIndex, otherStateToSet, cb) => {\n        const item = this.items[itemIndex];\n\n        if (item == null) {\n          return;\n        }\n\n        this.selectItem(item, otherStateToSet, cb);\n      };\n\n      this.selectHighlightedItem = (otherStateToSet, cb) => {\n        return this.selectItemAtIndex(this.getState().highlightedIndex, otherStateToSet, cb);\n      };\n\n      this.internalSetState = (stateToSet, cb) => {\n        let isItemSelected, onChangeArg;\n        const onStateChangeArg = {};\n        const isStateToSetFunction = typeof stateToSet === 'function'; // we want to call `onInputValueChange` before the `setState` call\n        // so someone controlling the `inputValue` state gets notified of\n        // the input change as soon as possible. This avoids issues with\n        // preserving the cursor position.\n        // See https://github.com/downshift-js/downshift/issues/217 for more info.\n\n        if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n          this.props.onInputValueChange(stateToSet.inputValue, { ...this.getStateAndHelpers(),\n            ...stateToSet\n          });\n        }\n\n        return this.setState(state => {\n          state = this.getState(state);\n          let newStateToSet = isStateToSetFunction ? stateToSet(state) : stateToSet; // Your own function that could modify the state that will be set.\n\n          newStateToSet = this.props.stateReducer(state, newStateToSet); // checks if an item is selected, regardless of if it's different from\n          // what was selected before\n          // used to determine if onSelect and onChange callbacks should be called\n\n          isItemSelected = newStateToSet.hasOwnProperty('selectedItem'); // this keeps track of the object we want to call with setState\n\n          const nextState = {}; // this is just used to tell whether the state changed\n          // and we're trying to update that state. OR if the selection has changed and we're\n          // trying to update the selection\n\n          if (isItemSelected && newStateToSet.selectedItem !== state.selectedItem) {\n            onChangeArg = newStateToSet.selectedItem;\n          }\n\n          newStateToSet.type = newStateToSet.type || unknown;\n          Object.keys(newStateToSet).forEach(key => {\n            // onStateChangeArg should only have the state that is\n            // actually changing\n            if (state[key] !== newStateToSet[key]) {\n              onStateChangeArg[key] = newStateToSet[key];\n            } // the type is useful for the onStateChangeArg\n            // but we don't actually want to set it in internal state.\n            // this is an undocumented feature for now... Not all internalSetState\n            // calls support it and I'm not certain we want them to yet.\n            // But it enables users controlling the isOpen state to know when\n            // the isOpen state changes due to mouseup events which is quite handy.\n\n\n            if (key === 'type') {\n              return;\n            }\n\n            newStateToSet[key]; // if it's coming from props, then we don't care to set it internally\n\n            if (!isControlledProp(this.props, key)) {\n              nextState[key] = newStateToSet[key];\n            }\n          }); // if stateToSet is a function, then we weren't able to call onInputValueChange\n          // earlier, so we'll call it now that we know what the inputValue state will be.\n\n          if (isStateToSetFunction && newStateToSet.hasOwnProperty('inputValue')) {\n            this.props.onInputValueChange(newStateToSet.inputValue, { ...this.getStateAndHelpers(),\n              ...newStateToSet\n            });\n          }\n\n          return nextState;\n        }, () => {\n          // call the provided callback if it's a function\n          cbToCb(cb)(); // only call the onStateChange and onChange callbacks if\n          // we have relevant information to pass them.\n\n          const hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1;\n\n          if (hasMoreStateThanType) {\n            this.props.onStateChange(onStateChangeArg, this.getStateAndHelpers());\n          }\n\n          if (isItemSelected) {\n            this.props.onSelect(stateToSet.selectedItem, this.getStateAndHelpers());\n          }\n\n          if (onChangeArg !== undefined) {\n            this.props.onChange(onChangeArg, this.getStateAndHelpers());\n          } // this is currently undocumented and therefore subject to change\n          // We'll try to not break it, but just be warned.\n\n\n          this.props.onUserAction(onStateChangeArg, this.getStateAndHelpers());\n        });\n      };\n\n      this.rootRef = node => this._rootNode = node;\n\n      this.getRootProps = function (_temp, _temp2) {\n        let {\n          refKey = 'ref',\n          ref,\n          ...rest\n        } = _temp === void 0 ? {} : _temp;\n        let {\n          suppressRefError = false\n        } = _temp2 === void 0 ? {} : _temp2;\n        // this is used in the render to know whether the user has called getRootProps.\n        // It uses that to know whether to apply the props automatically\n        _this.getRootProps.called = true;\n        _this.getRootProps.refKey = refKey;\n        _this.getRootProps.suppressRefError = suppressRefError;\n\n        const {\n          isOpen\n        } = _this.getState();\n\n        return {\n          [refKey]: handleRefs(ref, _this.rootRef),\n          role: 'combobox',\n          'aria-expanded': isOpen,\n          'aria-haspopup': 'listbox',\n          'aria-owns': isOpen ? _this.menuId : null,\n          'aria-labelledby': _this.labelId,\n          ...rest\n        };\n      };\n\n      this.keyDownHandlers = {\n        ArrowDown(event) {\n          event.preventDefault();\n\n          if (this.getState().isOpen) {\n            const amount = event.shiftKey ? 5 : 1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowDown\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowDown\n            }, () => {\n              const itemCount = this.getItemCount();\n\n              if (itemCount > 0) {\n                const {\n                  highlightedIndex\n                } = this.getState();\n                const nextHighlightedIndex = getNextWrappingIndex(1, highlightedIndex, itemCount, index => this.getItemNodeFromIndex(index));\n                this.setHighlightedIndex(nextHighlightedIndex, {\n                  type: keyDownArrowDown\n                });\n              }\n            });\n          }\n        },\n\n        ArrowUp(event) {\n          event.preventDefault();\n\n          if (this.getState().isOpen) {\n            const amount = event.shiftKey ? -5 : -1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowUp\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowUp\n            }, () => {\n              const itemCount = this.getItemCount();\n\n              if (itemCount > 0) {\n                const {\n                  highlightedIndex\n                } = this.getState();\n                const nextHighlightedIndex = getNextWrappingIndex(-1, highlightedIndex, itemCount, index => this.getItemNodeFromIndex(index));\n                this.setHighlightedIndex(nextHighlightedIndex, {\n                  type: keyDownArrowUp\n                });\n              }\n            });\n          }\n        },\n\n        Enter(event) {\n          if (event.which === 229) {\n            return;\n          }\n\n          const {\n            isOpen,\n            highlightedIndex\n          } = this.getState();\n\n          if (isOpen && highlightedIndex != null) {\n            event.preventDefault();\n            const item = this.items[highlightedIndex];\n            const itemNode = this.getItemNodeFromIndex(highlightedIndex);\n\n            if (item == null || itemNode && itemNode.hasAttribute('disabled')) {\n              return;\n            }\n\n            this.selectHighlightedItem({\n              type: keyDownEnter\n            });\n          }\n        },\n\n        Escape(event) {\n          event.preventDefault();\n          this.reset({\n            type: keyDownEscape,\n            ...(!this.state.isOpen && {\n              selectedItem: null,\n              inputValue: ''\n            })\n          });\n        }\n\n      };\n      this.buttonKeyDownHandlers = { ...this.keyDownHandlers,\n\n        ' '(event) {\n          event.preventDefault();\n          this.toggleMenu({\n            type: keyDownSpaceButton\n          });\n        }\n\n      };\n      this.inputKeyDownHandlers = { ...this.keyDownHandlers,\n\n        Home(event) {\n          const {\n            isOpen\n          } = this.getState();\n\n          if (!isOpen) {\n            return;\n          }\n\n          event.preventDefault();\n          const itemCount = this.getItemCount();\n\n          if (itemCount <= 0 || !isOpen) {\n            return;\n          } // get next non-disabled starting downwards from 0 if that's disabled.\n\n\n          const newHighlightedIndex = getNextNonDisabledIndex(1, 0, itemCount, index => this.getItemNodeFromIndex(index), false);\n          this.setHighlightedIndex(newHighlightedIndex, {\n            type: keyDownHome\n          });\n        },\n\n        End(event) {\n          const {\n            isOpen\n          } = this.getState();\n\n          if (!isOpen) {\n            return;\n          }\n\n          event.preventDefault();\n          const itemCount = this.getItemCount();\n\n          if (itemCount <= 0 || !isOpen) {\n            return;\n          } // get next non-disabled starting upwards from last index if that's disabled.\n\n\n          const newHighlightedIndex = getNextNonDisabledIndex(-1, itemCount - 1, itemCount, index => this.getItemNodeFromIndex(index), false);\n          this.setHighlightedIndex(newHighlightedIndex, {\n            type: keyDownEnd\n          });\n        }\n\n      };\n\n      this.getToggleButtonProps = function (_temp3) {\n        let {\n          onClick,\n          onPress,\n          onKeyDown,\n          onKeyUp,\n          onBlur,\n          ...rest\n        } = _temp3 === void 0 ? {} : _temp3;\n\n        const {\n          isOpen\n        } = _this.getState();\n\n        const enabledEventHandlers = {\n          onClick: callAllEventHandlers(onClick, _this.buttonHandleClick),\n          onKeyDown: callAllEventHandlers(onKeyDown, _this.buttonHandleKeyDown),\n          onKeyUp: callAllEventHandlers(onKeyUp, _this.buttonHandleKeyUp),\n          onBlur: callAllEventHandlers(onBlur, _this.buttonHandleBlur)\n        };\n        const eventHandlers = rest.disabled ? {} : enabledEventHandlers;\n        return {\n          type: 'button',\n          role: 'button',\n          'aria-label': isOpen ? 'close menu' : 'open menu',\n          'aria-haspopup': true,\n          'data-toggle': true,\n          ...eventHandlers,\n          ...rest\n        };\n      };\n\n      this.buttonHandleKeyUp = event => {\n        // Prevent click event from emitting in Firefox\n        event.preventDefault();\n      };\n\n      this.buttonHandleKeyDown = event => {\n        const key = normalizeArrowKey(event);\n\n        if (this.buttonKeyDownHandlers[key]) {\n          this.buttonKeyDownHandlers[key].call(this, event);\n        }\n      };\n\n      this.buttonHandleClick = event => {\n        event.preventDefault(); // handle odd case for Safari and Firefox which\n        // don't give the button the focus properly.\n\n        /* istanbul ignore if (can't reasonably test this) */\n\n        if (this.props.environment.document.activeElement === this.props.environment.document.body) {\n          event.target.focus();\n        } // to simplify testing components that use downshift, we'll not wrap this in a setTimeout\n        // if the NODE_ENV is test. With the proper build system, this should be dead code eliminated\n        // when building for production and should therefore have no impact on production code.\n\n\n        if (process.env.NODE_ENV === 'test') {\n          this.toggleMenu({\n            type: clickButton\n          });\n        } else {\n          // Ensure that toggle of menu occurs after the potential blur event in iOS\n          this.internalSetTimeout(() => this.toggleMenu({\n            type: clickButton\n          }));\n        }\n      };\n\n      this.buttonHandleBlur = event => {\n        const blurTarget = event.target; // Save blur target for comparison with activeElement later\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not body element\n\n        this.internalSetTimeout(() => {\n          if (!this.isMouseDown && (this.props.environment.document.activeElement == null || this.props.environment.document.activeElement.id !== this.inputId) && this.props.environment.document.activeElement !== blurTarget // Do nothing if we refocus the same element again (to solve issue in Safari on iOS)\n          ) {\n            this.reset({\n              type: blurButton\n            });\n          }\n        });\n      };\n\n      this.getLabelProps = props => {\n        return {\n          htmlFor: this.inputId,\n          id: this.labelId,\n          ...props\n        };\n      };\n\n      this.getInputProps = function (_temp4) {\n        let {\n          onKeyDown,\n          onBlur,\n          onChange,\n          onInput,\n          onChangeText,\n          ...rest\n        } = _temp4 === void 0 ? {} : _temp4;\n        let onChangeKey;\n        let eventHandlers = {};\n        /* istanbul ignore next (preact) */\n\n        {\n          onChangeKey = 'onChange';\n        }\n\n        const {\n          inputValue,\n          isOpen,\n          highlightedIndex\n        } = _this.getState();\n\n        if (!rest.disabled) {\n          eventHandlers = {\n            [onChangeKey]: callAllEventHandlers(onChange, onInput, _this.inputHandleChange),\n            onKeyDown: callAllEventHandlers(onKeyDown, _this.inputHandleKeyDown),\n            onBlur: callAllEventHandlers(onBlur, _this.inputHandleBlur)\n          };\n        }\n\n        return {\n          'aria-autocomplete': 'list',\n          'aria-activedescendant': isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0 ? _this.getItemId(highlightedIndex) : null,\n          'aria-controls': isOpen ? _this.menuId : null,\n          'aria-labelledby': _this.labelId,\n          // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n          // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n          autoComplete: 'off',\n          value: inputValue,\n          id: _this.inputId,\n          ...eventHandlers,\n          ...rest\n        };\n      };\n\n      this.inputHandleKeyDown = event => {\n        const key = normalizeArrowKey(event);\n\n        if (key && this.inputKeyDownHandlers[key]) {\n          this.inputKeyDownHandlers[key].call(this, event);\n        }\n      };\n\n      this.inputHandleChange = event => {\n        this.internalSetState({\n          type: changeInput,\n          isOpen: true,\n          inputValue: event.target.value,\n          highlightedIndex: this.props.defaultHighlightedIndex\n        });\n      };\n\n      this.inputHandleBlur = () => {\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not the body element\n        this.internalSetTimeout(() => {\n          const downshiftButtonIsActive = this.props.environment.document && !!this.props.environment.document.activeElement && !!this.props.environment.document.activeElement.dataset && this.props.environment.document.activeElement.dataset.toggle && this._rootNode && this._rootNode.contains(this.props.environment.document.activeElement);\n\n          if (!this.isMouseDown && !downshiftButtonIsActive) {\n            this.reset({\n              type: blurInput\n            });\n          }\n        });\n      };\n\n      this.menuRef = node => {\n        this._menuNode = node;\n      };\n\n      this.getMenuProps = function (_temp5, _temp6) {\n        let {\n          refKey = 'ref',\n          ref,\n          ...props\n        } = _temp5 === void 0 ? {} : _temp5;\n        let {\n          suppressRefError = false\n        } = _temp6 === void 0 ? {} : _temp6;\n        _this.getMenuProps.called = true;\n        _this.getMenuProps.refKey = refKey;\n        _this.getMenuProps.suppressRefError = suppressRefError;\n        return {\n          [refKey]: handleRefs(ref, _this.menuRef),\n          role: 'listbox',\n          'aria-labelledby': props && props['aria-label'] ? null : _this.labelId,\n          id: _this.menuId,\n          ...props\n        };\n      };\n\n      this.getItemProps = function (_temp7) {\n        let {\n          onMouseMove,\n          onMouseDown,\n          onClick,\n          onPress,\n          index,\n          item = process.env.NODE_ENV === 'production' ?\n          /* istanbul ignore next */\n          undefined : requiredProp('getItemProps', 'item'),\n          ...rest\n        } = _temp7 === void 0 ? {} : _temp7;\n\n        if (index === undefined) {\n          _this.items.push(item);\n\n          index = _this.items.indexOf(item);\n        } else {\n          _this.items[index] = item;\n        }\n\n        const onSelectKey = 'onClick';\n        const customClickHandler = onClick;\n        const enabledEventHandlers = {\n          // onMouseMove is used over onMouseEnter here. onMouseMove\n          // is only triggered on actual mouse movement while onMouseEnter\n          // can fire on DOM changes, interrupting keyboard navigation\n          onMouseMove: callAllEventHandlers(onMouseMove, () => {\n            if (index === _this.getState().highlightedIndex) {\n              return;\n            }\n\n            _this.setHighlightedIndex(index, {\n              type: itemMouseEnter\n            }); // We never want to manually scroll when changing state based\n            // on `onMouseMove` because we will be moving the element out\n            // from under the user which is currently scrolling/moving the\n            // cursor\n\n\n            _this.avoidScrolling = true;\n\n            _this.internalSetTimeout(() => _this.avoidScrolling = false, 250);\n          }),\n          onMouseDown: callAllEventHandlers(onMouseDown, event => {\n            // This prevents the activeElement from being changed\n            // to the item so it can remain with the current activeElement\n            // which is a more common use case.\n            event.preventDefault();\n          }),\n          [onSelectKey]: callAllEventHandlers(customClickHandler, () => {\n            _this.selectItemAtIndex(index, {\n              type: clickItem\n            });\n          })\n        }; // Passing down the onMouseDown handler to prevent redirect\n        // of the activeElement if clicking on disabled items\n\n        const eventHandlers = rest.disabled ? {\n          onMouseDown: enabledEventHandlers.onMouseDown\n        } : enabledEventHandlers;\n        return {\n          id: _this.getItemId(index),\n          role: 'option',\n          'aria-selected': _this.getState().highlightedIndex === index,\n          ...eventHandlers,\n          ...rest\n        };\n      };\n\n      this.clearItems = () => {\n        this.items = [];\n      };\n\n      this.reset = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(_ref => {\n          let {\n            selectedItem\n          } = _ref;\n          return {\n            isOpen: _this.props.defaultIsOpen,\n            highlightedIndex: _this.props.defaultHighlightedIndex,\n            inputValue: _this.props.itemToString(selectedItem),\n            ...otherStateToSet\n          };\n        }, cb);\n      };\n\n      this.toggleMenu = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(_ref2 => {\n          let {\n            isOpen\n          } = _ref2;\n          return {\n            isOpen: !isOpen,\n            ...(isOpen && {\n              highlightedIndex: _this.props.defaultHighlightedIndex\n            }),\n            ...otherStateToSet\n          };\n        }, () => {\n          const {\n            isOpen,\n            highlightedIndex\n          } = _this.getState();\n\n          if (isOpen) {\n            if (_this.getItemCount() > 0 && typeof highlightedIndex === 'number') {\n              _this.setHighlightedIndex(highlightedIndex, otherStateToSet);\n            }\n          }\n\n          cbToCb(cb)();\n        });\n      };\n\n      this.openMenu = cb => {\n        this.internalSetState({\n          isOpen: true\n        }, cb);\n      };\n\n      this.closeMenu = cb => {\n        this.internalSetState({\n          isOpen: false\n        }, cb);\n      };\n\n      this.updateStatus = debounce(() => {\n        const state = this.getState();\n        const item = this.items[state.highlightedIndex];\n        const resultCount = this.getItemCount();\n        const status = this.props.getA11yStatusMessage({\n          itemToString: this.props.itemToString,\n          previousResultCount: this.previousResultCount,\n          resultCount,\n          highlightedItem: item,\n          ...state\n        });\n        this.previousResultCount = resultCount;\n        setStatus(status, this.props.environment.document);\n      }, 200);\n      // fancy destructuring + defaults + aliases\n      // this basically says each value of state should either be set to\n      // the initial value or the default value if the initial value is not provided\n      const {\n        defaultHighlightedIndex,\n        initialHighlightedIndex: _highlightedIndex = defaultHighlightedIndex,\n        defaultIsOpen,\n        initialIsOpen: _isOpen = defaultIsOpen,\n        initialInputValue: _inputValue = '',\n        initialSelectedItem: _selectedItem = null\n      } = this.props;\n\n      const _state = this.getState({\n        highlightedIndex: _highlightedIndex,\n        isOpen: _isOpen,\n        inputValue: _inputValue,\n        selectedItem: _selectedItem\n      });\n\n      if (_state.selectedItem != null && this.props.initialInputValue === undefined) {\n        _state.inputValue = this.props.itemToString(_state.selectedItem);\n      }\n\n      this.state = _state;\n    }\n\n    /**\n     * Clear all running timeouts\n     */\n    internalClearTimeouts() {\n      this.timeoutIds.forEach(id => {\n        clearTimeout(id);\n      });\n      this.timeoutIds = [];\n    }\n    /**\n     * Gets the state based on internal state or props\n     * If a state value is passed via props, then that\n     * is the value given, otherwise it's retrieved from\n     * stateToMerge\n     *\n     * @param {Object} stateToMerge defaults to this.state\n     * @return {Object} the state\n     */\n\n\n    getState(stateToMerge) {\n      if (stateToMerge === void 0) {\n        stateToMerge = this.state;\n      }\n\n      return getState(stateToMerge, this.props);\n    }\n\n    getItemCount() {\n      // things read better this way. They're in priority order:\n      // 1. `this.itemCount`\n      // 2. `this.props.itemCount`\n      // 3. `this.items.length`\n      let itemCount = this.items.length;\n\n      if (this.itemCount != null) {\n        itemCount = this.itemCount;\n      } else if (this.props.itemCount !== undefined) {\n        itemCount = this.props.itemCount;\n      }\n\n      return itemCount;\n    }\n\n    getItemNodeFromIndex(index) {\n      return this.props.environment.document.getElementById(this.getItemId(index));\n    }\n\n    scrollHighlightedItemIntoView() {\n      /* istanbul ignore else (react-native) */\n      {\n        const node = this.getItemNodeFromIndex(this.getState().highlightedIndex);\n        this.props.scrollIntoView(node, this._menuNode);\n      }\n    }\n\n    moveHighlightedIndex(amount, otherStateToSet) {\n      const itemCount = this.getItemCount();\n      const {\n        highlightedIndex\n      } = this.getState();\n\n      if (itemCount > 0) {\n        const nextHighlightedIndex = getNextWrappingIndex(amount, highlightedIndex, itemCount, index => this.getItemNodeFromIndex(index));\n        this.setHighlightedIndex(nextHighlightedIndex, otherStateToSet);\n      }\n    }\n\n    getStateAndHelpers() {\n      const {\n        highlightedIndex,\n        inputValue,\n        selectedItem,\n        isOpen\n      } = this.getState();\n      const {\n        itemToString\n      } = this.props;\n      const {\n        id\n      } = this;\n      const {\n        getRootProps,\n        getToggleButtonProps,\n        getLabelProps,\n        getMenuProps,\n        getInputProps,\n        getItemProps,\n        openMenu,\n        closeMenu,\n        toggleMenu,\n        selectItem,\n        selectItemAtIndex,\n        selectHighlightedItem,\n        setHighlightedIndex,\n        clearSelection,\n        clearItems,\n        reset,\n        setItemCount,\n        unsetItemCount,\n        internalSetState: setState\n      } = this;\n      return {\n        // prop getters\n        getRootProps,\n        getToggleButtonProps,\n        getLabelProps,\n        getMenuProps,\n        getInputProps,\n        getItemProps,\n        // actions\n        reset,\n        openMenu,\n        closeMenu,\n        toggleMenu,\n        selectItem,\n        selectItemAtIndex,\n        selectHighlightedItem,\n        setHighlightedIndex,\n        clearSelection,\n        clearItems,\n        setItemCount,\n        unsetItemCount,\n        setState,\n        // props\n        itemToString,\n        // derived\n        id,\n        // state\n        highlightedIndex,\n        inputValue,\n        isOpen,\n        selectedItem\n      };\n    } //////////////////////////// ROOT\n\n\n    componentDidMount() {\n      /* istanbul ignore if (react-native) */\n      if (process.env.NODE_ENV !== 'production' && !false && this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n        validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n      }\n      /* istanbul ignore if (react-native) */\n\n\n      {\n        // this.isMouseDown helps us track whether the mouse is currently held down.\n        // This is useful when the user clicks on an item in the list, but holds the mouse\n        // down long enough for the list to disappear (because the blur event fires on the input)\n        // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n        // trigger hiding the menu.\n        const onMouseDown = () => {\n          this.isMouseDown = true;\n        };\n\n        const onMouseUp = event => {\n          this.isMouseDown = false; // if the target element or the activeElement is within a downshift node\n          // then we don't want to reset downshift\n\n          const contextWithinDownshift = targetWithinDownshift(event.target, [this._rootNode, this._menuNode], this.props.environment);\n\n          if (!contextWithinDownshift && this.getState().isOpen) {\n            this.reset({\n              type: mouseUp\n            }, () => this.props.onOuterClick(this.getStateAndHelpers()));\n          }\n        }; // Touching an element in iOS gives focus and hover states, but touching out of\n        // the element will remove hover, and persist the focus state, resulting in the\n        // blur event not being triggered.\n        // this.isTouchMove helps us track whether the user is tapping or swiping on a touch screen.\n        // If the user taps outside of Downshift, the component should be reset,\n        // but not if the user is swiping\n\n\n        const onTouchStart = () => {\n          this.isTouchMove = false;\n        };\n\n        const onTouchMove = () => {\n          this.isTouchMove = true;\n        };\n\n        const onTouchEnd = event => {\n          const contextWithinDownshift = targetWithinDownshift(event.target, [this._rootNode, this._menuNode], this.props.environment, false);\n\n          if (!this.isTouchMove && !contextWithinDownshift && this.getState().isOpen) {\n            this.reset({\n              type: touchEnd\n            }, () => this.props.onOuterClick(this.getStateAndHelpers()));\n          }\n        };\n\n        const {\n          environment\n        } = this.props;\n        environment.addEventListener('mousedown', onMouseDown);\n        environment.addEventListener('mouseup', onMouseUp);\n        environment.addEventListener('touchstart', onTouchStart);\n        environment.addEventListener('touchmove', onTouchMove);\n        environment.addEventListener('touchend', onTouchEnd);\n\n        this.cleanup = () => {\n          this.internalClearTimeouts();\n          this.updateStatus.cancel();\n          environment.removeEventListener('mousedown', onMouseDown);\n          environment.removeEventListener('mouseup', onMouseUp);\n          environment.removeEventListener('touchstart', onTouchStart);\n          environment.removeEventListener('touchmove', onTouchMove);\n          environment.removeEventListener('touchend', onTouchEnd);\n        };\n      }\n    }\n\n    shouldScroll(prevState, prevProps) {\n      const {\n        highlightedIndex: currentHighlightedIndex\n      } = this.props.highlightedIndex === undefined ? this.getState() : this.props;\n      const {\n        highlightedIndex: prevHighlightedIndex\n      } = prevProps.highlightedIndex === undefined ? prevState : prevProps;\n      const scrollWhenOpen = currentHighlightedIndex && this.getState().isOpen && !prevState.isOpen;\n      const scrollWhenNavigating = currentHighlightedIndex !== prevHighlightedIndex;\n      return scrollWhenOpen || scrollWhenNavigating;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateControlledUnchanged(this.state, prevProps, this.props);\n        /* istanbul ignore if (react-native) */\n\n        if (this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n          validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n        }\n      }\n\n      if (isControlledProp(this.props, 'selectedItem') && this.props.selectedItemChanged(prevProps.selectedItem, this.props.selectedItem)) {\n        this.internalSetState({\n          type: controlledPropUpdatedSelectedItem,\n          inputValue: this.props.itemToString(this.props.selectedItem)\n        });\n      }\n\n      if (!this.avoidScrolling && this.shouldScroll(prevState, prevProps)) {\n        this.scrollHighlightedItemIntoView();\n      }\n      /* istanbul ignore else (react-native) */\n\n\n      {\n        this.updateStatus();\n      }\n    }\n\n    componentWillUnmount() {\n      this.cleanup(); // avoids memory leak\n    }\n\n    render() {\n      const children = unwrapArray(this.props.children, noop); // because the items are rerendered every time we call the children\n      // we clear this out each render and it will be populated again as\n      // getItemProps is called.\n\n      this.clearItems(); // we reset this so we know whether the user calls getRootProps during\n      // this render. If they do then we don't need to do anything,\n      // if they don't then we need to clone the element they return and\n      // apply the props for them.\n\n      this.getRootProps.called = false;\n      this.getRootProps.refKey = undefined;\n      this.getRootProps.suppressRefError = undefined; // we do something similar for getMenuProps\n\n      this.getMenuProps.called = false;\n      this.getMenuProps.refKey = undefined;\n      this.getMenuProps.suppressRefError = undefined; // we do something similar for getLabelProps\n\n      this.getLabelProps.called = false; // and something similar for getInputProps\n\n      this.getInputProps.called = false;\n      const element = unwrapArray(children(this.getStateAndHelpers()));\n\n      if (!element) {\n        return null;\n      }\n\n      if (this.getRootProps.called || this.props.suppressRefError) {\n        if (process.env.NODE_ENV !== 'production' && !this.getRootProps.suppressRefError && !this.props.suppressRefError) {\n          validateGetRootPropsCalledCorrectly(element, this.getRootProps);\n        }\n\n        return element;\n      } else if (isDOMElement(element)) {\n        // they didn't apply the root props, but we can clone\n        // this and apply the props ourselves\n        return /*#__PURE__*/cloneElement(element, this.getRootProps(getElementProps(element)));\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        // they didn't apply the root props, but they need to\n        // otherwise we can't query around the autocomplete\n        throw new Error('downshift: If you return a non-DOM element, you must apply the getRootProps function');\n      }\n      /* istanbul ignore next */\n\n\n      return undefined;\n    }\n\n  }\n\n  Downshift.defaultProps = {\n    defaultHighlightedIndex: null,\n    defaultIsOpen: false,\n    getA11yStatusMessage: getA11yStatusMessage$1,\n    itemToString: i => {\n      if (i == null) {\n        return '';\n      }\n\n      if (process.env.NODE_ENV !== 'production' && isPlainObject(i) && !i.hasOwnProperty('toString')) {\n        // eslint-disable-next-line no-console\n        console.warn('downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.', 'The object that was passed:', i);\n      }\n\n      return String(i);\n    },\n    onStateChange: noop,\n    onInputValueChange: noop,\n    onUserAction: noop,\n    onChange: noop,\n    onSelect: noop,\n    onOuterClick: noop,\n    selectedItemChanged: (prevItem, item) => prevItem !== item,\n    environment:\n    /* istanbul ignore next (ssr) */\n    typeof window === 'undefined' ? {} : window,\n    stateReducer: (state, stateToSet) => stateToSet,\n    suppressRefError: false,\n    scrollIntoView\n  };\n  Downshift.stateChangeTypes = stateChangeTypes$3;\n  return Downshift;\n})();\n\nprocess.env.NODE_ENV !== \"production\" ? Downshift.propTypes = {\n  children: PropTypes.func,\n  defaultHighlightedIndex: PropTypes.number,\n  defaultIsOpen: PropTypes.bool,\n  initialHighlightedIndex: PropTypes.number,\n  initialSelectedItem: PropTypes.any,\n  initialInputValue: PropTypes.string,\n  initialIsOpen: PropTypes.bool,\n  getA11yStatusMessage: PropTypes.func,\n  itemToString: PropTypes.func,\n  onChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  onUserAction: PropTypes.func,\n  onOuterClick: PropTypes.func,\n  selectedItemChanged: PropTypes.func,\n  stateReducer: PropTypes.func,\n  itemCount: PropTypes.number,\n  id: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  }),\n  suppressRefError: PropTypes.bool,\n  scrollIntoView: PropTypes.func,\n  // things we keep in state for uncontrolled components\n  // but can accept as props for controlled components\n\n  /* eslint-disable react/no-unused-prop-types */\n  selectedItem: PropTypes.any,\n  isOpen: PropTypes.bool,\n  inputValue: PropTypes.string,\n  highlightedIndex: PropTypes.number,\n  labelId: PropTypes.string,\n  inputId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func\n  /* eslint-enable react/no-unused-prop-types */\n\n} : void 0;\nvar Downshift$1 = Downshift;\n\nfunction validateGetMenuPropsCalledCorrectly(node, _ref3) {\n  let {\n    refKey\n  } = _ref3;\n\n  if (!node) {\n    // eslint-disable-next-line no-console\n    console.error(`downshift: The ref prop \"${refKey}\" from getMenuProps was not applied correctly on your menu element.`);\n  }\n}\n\nfunction validateGetRootPropsCalledCorrectly(element, _ref4) {\n  let {\n    refKey\n  } = _ref4;\n  const refKeySpecified = refKey !== 'ref';\n  const isComposite = !isDOMElement(element);\n\n  if (isComposite && !refKeySpecified && !isForwardRef(element)) {\n    // eslint-disable-next-line no-console\n    console.error('downshift: You returned a non-DOM element. You must specify a refKey in getRootProps');\n  } else if (!isComposite && refKeySpecified) {\n    // eslint-disable-next-line no-console\n    console.error(`downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \"${refKey}\"`);\n  }\n\n  if (!isForwardRef(element) && !getElementProps(element)[refKey]) {\n    // eslint-disable-next-line no-console\n    console.error(`downshift: You must apply the ref prop \"${refKey}\" from getRootProps onto your root element.`);\n  }\n}\n\nconst dropdownDefaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null,\n  inputValue: ''\n};\n\nfunction callOnChangeProps(action, state, newState) {\n  const {\n    props,\n    type\n  } = action;\n  const changes = {};\n  Object.keys(state).forEach(key => {\n    invokeOnChangeHandler(key, action, state, newState);\n\n    if (newState[key] !== state[key]) {\n      changes[key] = newState[key];\n    }\n  });\n\n  if (props.onStateChange && Object.keys(changes).length) {\n    props.onStateChange({\n      type,\n      ...changes\n    });\n  }\n}\n\nfunction invokeOnChangeHandler(key, action, state, newState) {\n  const {\n    props,\n    type\n  } = action;\n  const handler = `on${capitalizeString(key)}Change`;\n\n  if (props[handler] && newState[key] !== undefined && newState[key] !== state[key]) {\n    props[handler]({\n      type,\n      ...newState\n    });\n  }\n}\n/**\n * Default state reducer that returns the changes.\n *\n * @param {Object} s state.\n * @param {Object} a action with changes.\n * @returns {Object} changes.\n */\n\n\nfunction stateReducer(s, a) {\n  return a.changes;\n}\n/**\n * Returns a message to be added to aria-live region when item is selected.\n *\n * @param {Object} selectionParameters Parameters required to build the message.\n * @returns {string} The a11y message.\n */\n\n\nfunction getA11ySelectionMessage(selectionParameters) {\n  const {\n    selectedItem,\n    itemToString: itemToStringLocal\n  } = selectionParameters;\n  return selectedItem ? `${itemToStringLocal(selectedItem)} has been selected.` : '';\n}\n/**\n * Debounced call for updating the a11y message.\n */\n\n\nconst updateA11yStatus = debounce((getA11yMessage, document) => {\n  setStatus(getA11yMessage(), document);\n}, 200); // istanbul ignore next\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction useElementIds(_ref) {\n  let {\n    id = `downshift-${generateId()}`,\n    labelId,\n    menuId,\n    getItemId,\n    toggleButtonId,\n    inputId\n  } = _ref;\n  const elementIdsRef = useRef({\n    labelId: labelId || `${id}-label`,\n    menuId: menuId || `${id}-menu`,\n    getItemId: getItemId || (index => `${id}-item-${index}`),\n    toggleButtonId: toggleButtonId || `${id}-toggle-button`,\n    inputId: inputId || `${id}-input`\n  });\n  return elementIdsRef.current;\n}\n\nfunction getItemIndex(index, item, items) {\n  if (index !== undefined) {\n    return index;\n  }\n\n  if (items.length === 0) {\n    return -1;\n  }\n\n  return items.indexOf(item);\n}\n\nfunction itemToString(item) {\n  return item ? String(item) : '';\n}\n\nfunction isAcceptedCharacterKey(key) {\n  return /^\\S{1}$/.test(key);\n}\n\nfunction capitalizeString(string) {\n  return `${string.slice(0, 1).toUpperCase()}${string.slice(1)}`;\n}\n\nfunction useLatestRef(val) {\n  const ref = useRef(val); // technically this is not \"concurrent mode safe\" because we're manipulating\n  // the value during render (so it's not idempotent). However, the places this\n  // hook is used is to support memoizing callbacks which will be called\n  // *during* render, so we need the latest values *during* render.\n  // If not for this, then we'd probably want to use useLayoutEffect instead.\n\n  ref.current = val;\n  return ref;\n}\n/**\n * Computes the controlled state using a the previous state, props,\n * two reducers, one from downshift and an optional one from the user.\n * Also calls the onChange handlers for state values that have changed.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\n\nfunction useEnhancedReducer(reducer, initialState, props) {\n  const prevStateRef = useRef();\n  const actionRef = useRef();\n  const enhancedReducer = useCallback((state, action) => {\n    actionRef.current = action;\n    state = getState(state, action.props);\n    const changes = reducer(state, action);\n    const newState = action.props.stateReducer(state, { ...action,\n      changes\n    });\n    return newState;\n  }, [reducer]);\n  const [state, dispatch] = useReducer(enhancedReducer, initialState);\n  const propsRef = useLatestRef(props);\n  const dispatchWithProps = useCallback(action => dispatch({\n    props: propsRef.current,\n    ...action\n  }), [propsRef]);\n  const action = actionRef.current;\n  useEffect(() => {\n    if (action && prevStateRef.current && prevStateRef.current !== state) {\n      callOnChangeProps(action, getState(prevStateRef.current, action.props), state);\n    }\n\n    prevStateRef.current = state;\n  }, [state, props, action]);\n  return [state, dispatchWithProps];\n}\n/**\n * Wraps the useEnhancedReducer and applies the controlled prop values before\n * returning the new state.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\n\nfunction useControlledReducer$1(reducer, initialState, props) {\n  const [state, dispatch] = useEnhancedReducer(reducer, initialState, props);\n  return [getState(state, props), dispatch];\n}\n\nconst defaultProps$3 = {\n  itemToString,\n  stateReducer,\n  getA11ySelectionMessage,\n  scrollIntoView,\n  circularNavigation: false,\n  environment:\n  /* istanbul ignore next (ssr) */\n  typeof window === 'undefined' ? {} : window\n};\n\nfunction getDefaultValue$1(props, propKey, defaultStateValues) {\n  if (defaultStateValues === void 0) {\n    defaultStateValues = dropdownDefaultStateValues;\n  }\n\n  const defaultValue = props[`default${capitalizeString(propKey)}`];\n\n  if (defaultValue !== undefined) {\n    return defaultValue;\n  }\n\n  return defaultStateValues[propKey];\n}\n\nfunction getInitialValue$1(props, propKey, defaultStateValues) {\n  if (defaultStateValues === void 0) {\n    defaultStateValues = dropdownDefaultStateValues;\n  }\n\n  const value = props[propKey];\n\n  if (value !== undefined) {\n    return value;\n  }\n\n  const initialValue = props[`initial${capitalizeString(propKey)}`];\n\n  if (initialValue !== undefined) {\n    return initialValue;\n  }\n\n  return getDefaultValue$1(props, propKey, defaultStateValues);\n}\n\nfunction getInitialState$2(props) {\n  const selectedItem = getInitialValue$1(props, 'selectedItem');\n  const isOpen = getInitialValue$1(props, 'isOpen');\n  const highlightedIndex = getInitialValue$1(props, 'highlightedIndex');\n  const inputValue = getInitialValue$1(props, 'inputValue');\n  return {\n    highlightedIndex: highlightedIndex < 0 && selectedItem && isOpen ? props.items.indexOf(selectedItem) : highlightedIndex,\n    isOpen,\n    selectedItem,\n    inputValue\n  };\n}\n\nfunction getHighlightedIndexOnOpen(props, state, offset, getItemNodeFromIndex) {\n  const {\n    items,\n    initialHighlightedIndex,\n    defaultHighlightedIndex\n  } = props;\n  const {\n    selectedItem,\n    highlightedIndex\n  } = state;\n\n  if (items.length === 0) {\n    return -1;\n  } // initialHighlightedIndex will give value to highlightedIndex on initial state only.\n\n\n  if (initialHighlightedIndex !== undefined && highlightedIndex === initialHighlightedIndex) {\n    return initialHighlightedIndex;\n  }\n\n  if (defaultHighlightedIndex !== undefined) {\n    return defaultHighlightedIndex;\n  }\n\n  if (selectedItem) {\n    if (offset === 0) {\n      return items.indexOf(selectedItem);\n    }\n\n    return getNextWrappingIndex(offset, items.indexOf(selectedItem), items.length, getItemNodeFromIndex, false);\n  }\n\n  if (offset === 0) {\n    return -1;\n  }\n\n  return offset < 0 ? items.length - 1 : 0;\n}\n/**\n * Reuse the movement tracking of mouse and touch events.\n *\n * @param {boolean} isOpen Whether the dropdown is open or not.\n * @param {Array<Object>} downshiftElementRefs Downshift element refs to track movement (toggleButton, menu etc.)\n * @param {Object} environment Environment where component/hook exists.\n * @param {Function} handleBlur Handler on blur from mouse or touch.\n * @returns {Object} Ref containing whether mouseDown or touchMove event is happening\n */\n\n\nfunction useMouseAndTouchTracker(isOpen, downshiftElementRefs, environment, handleBlur) {\n  const mouseAndTouchTrackersRef = useRef({\n    isMouseDown: false,\n    isTouchMove: false\n  });\n  useEffect(() => {\n    // The same strategy for checking if a click occurred inside or outside downsift\n    // as in downshift.js.\n    const onMouseDown = () => {\n      mouseAndTouchTrackersRef.current.isMouseDown = true;\n    };\n\n    const onMouseUp = event => {\n      mouseAndTouchTrackersRef.current.isMouseDown = false;\n\n      if (isOpen && !targetWithinDownshift(event.target, downshiftElementRefs.map(ref => ref.current), environment)) {\n        handleBlur();\n      }\n    };\n\n    const onTouchStart = () => {\n      mouseAndTouchTrackersRef.current.isTouchMove = false;\n    };\n\n    const onTouchMove = () => {\n      mouseAndTouchTrackersRef.current.isTouchMove = true;\n    };\n\n    const onTouchEnd = event => {\n      if (isOpen && !mouseAndTouchTrackersRef.current.isTouchMove && !targetWithinDownshift(event.target, downshiftElementRefs.map(ref => ref.current), environment, false)) {\n        handleBlur();\n      }\n    };\n\n    environment.addEventListener('mousedown', onMouseDown);\n    environment.addEventListener('mouseup', onMouseUp);\n    environment.addEventListener('touchstart', onTouchStart);\n    environment.addEventListener('touchmove', onTouchMove);\n    environment.addEventListener('touchend', onTouchEnd);\n    return function cleanup() {\n      environment.removeEventListener('mousedown', onMouseDown);\n      environment.removeEventListener('mouseup', onMouseUp);\n      environment.removeEventListener('touchstart', onTouchStart);\n      environment.removeEventListener('touchmove', onTouchMove);\n      environment.removeEventListener('touchend', onTouchEnd);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, environment]);\n  return mouseAndTouchTrackersRef;\n}\n/* istanbul ignore next */\n// eslint-disable-next-line import/no-mutable-exports\n\n\nlet useGetterPropsCalledChecker = () => noop;\n/**\n * Custom hook that checks if getter props are called correctly.\n *\n * @param  {...any} propKeys Getter prop names to be handled.\n * @returns {Function} Setter function called inside getter props to set call information.\n */\n\n/* istanbul ignore next */\n\n\nif (process.env.NODE_ENV !== 'production') {\n  useGetterPropsCalledChecker = function () {\n    const isInitialMountRef = useRef(true);\n\n    for (var _len = arguments.length, propKeys = new Array(_len), _key = 0; _key < _len; _key++) {\n      propKeys[_key] = arguments[_key];\n    }\n\n    const getterPropsCalledRef = useRef(propKeys.reduce((acc, propKey) => {\n      acc[propKey] = {};\n      return acc;\n    }, {}));\n    useEffect(() => {\n      Object.keys(getterPropsCalledRef.current).forEach(propKey => {\n        const propCallInfo = getterPropsCalledRef.current[propKey];\n\n        if (isInitialMountRef.current) {\n          if (!Object.keys(propCallInfo).length) {\n            // eslint-disable-next-line no-console\n            console.error(`downshift: You forgot to call the ${propKey} getter function on your component / element.`);\n            return;\n          }\n        }\n\n        const {\n          suppressRefError,\n          refKey,\n          elementRef\n        } = propCallInfo;\n\n        if ((!elementRef || !elementRef.current) && !suppressRefError) {\n          // eslint-disable-next-line no-console\n          console.error(`downshift: The ref prop \"${refKey}\" from ${propKey} was not applied correctly on your element.`);\n        }\n      });\n      isInitialMountRef.current = false;\n    });\n    const setGetterPropCallInfo = useCallback((propKey, suppressRefError, refKey, elementRef) => {\n      getterPropsCalledRef.current[propKey] = {\n        suppressRefError,\n        refKey,\n        elementRef\n      };\n    }, []);\n    return setGetterPropCallInfo;\n  };\n}\n\nfunction useA11yMessageSetter(getA11yMessage, dependencyArray, _ref2) {\n  let {\n    isInitialMount,\n    highlightedIndex,\n    items,\n    environment,\n    ...rest\n  } = _ref2;\n  // Sets a11y status message on changes in state.\n  useEffect(() => {\n    if (isInitialMount || false) {\n      return;\n    }\n\n    updateA11yStatus(() => getA11yMessage({\n      highlightedIndex,\n      highlightedItem: items[highlightedIndex],\n      resultCount: items.length,\n      ...rest\n    }), environment.document); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencyArray);\n}\n\nfunction useScrollIntoView(_ref3) {\n  let {\n    highlightedIndex,\n    isOpen,\n    itemRefs,\n    getItemNodeFromIndex,\n    menuElement,\n    scrollIntoView: scrollIntoViewProp\n  } = _ref3;\n  // used not to scroll on highlight by mouse.\n  const shouldScrollRef = useRef(true); // Scroll on highlighted item if change comes from keyboard.\n\n  useIsomorphicLayoutEffect(() => {\n    if (highlightedIndex < 0 || !isOpen || !Object.keys(itemRefs.current).length) {\n      return;\n    }\n\n    if (shouldScrollRef.current === false) {\n      shouldScrollRef.current = true;\n    } else {\n      scrollIntoViewProp(getItemNodeFromIndex(highlightedIndex), menuElement);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [highlightedIndex]);\n  return shouldScrollRef;\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nlet useControlPropsValidator = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  useControlPropsValidator = _ref4 => {\n    let {\n      isInitialMount,\n      props,\n      state\n    } = _ref4;\n    // used for checking when props are moving from controlled to uncontrolled.\n    const prevPropsRef = useRef(props);\n    useEffect(() => {\n      if (isInitialMount) {\n        return;\n      }\n\n      validateControlledUnchanged(state, prevPropsRef.current, props);\n      prevPropsRef.current = props;\n    }, [state, props, isInitialMount]);\n  };\n}\n\n/* eslint-disable complexity */\n\nfunction downshiftCommonReducer(state, action, stateChangeTypes) {\n  const {\n    type,\n    props\n  } = action;\n  let changes;\n\n  switch (type) {\n    case stateChangeTypes.ItemMouseMove:\n      changes = {\n        highlightedIndex: action.disabled ? -1 : action.index\n      };\n      break;\n\n    case stateChangeTypes.MenuMouseLeave:\n      changes = {\n        highlightedIndex: -1\n      };\n      break;\n\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen,\n        highlightedIndex: state.isOpen ? -1 : getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false\n      };\n      break;\n\n    case stateChangeTypes.FunctionSetHighlightedIndex:\n      changes = {\n        highlightedIndex: action.highlightedIndex\n      };\n      break;\n\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        selectedItem: getDefaultValue$1(props, 'selectedItem'),\n        inputValue: getDefaultValue$1(props, 'inputValue')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return { ...state,\n    ...changes\n  };\n}\n/* eslint-enable complexity */\n\nfunction getItemIndexByCharacterKey(_a) {\n    var keysSoFar = _a.keysSoFar, highlightedIndex = _a.highlightedIndex, items = _a.items, itemToString = _a.itemToString, getItemNodeFromIndex = _a.getItemNodeFromIndex;\n    var lowerCasedKeysSoFar = keysSoFar.toLowerCase();\n    for (var index = 0; index < items.length; index++) {\n        var offsetIndex = (index + highlightedIndex + 1) % items.length;\n        var item = items[offsetIndex];\n        if (item !== undefined &&\n            itemToString(item)\n                .toLowerCase()\n                .startsWith(lowerCasedKeysSoFar)) {\n            var element = getItemNodeFromIndex(offsetIndex);\n            if (!(element === null || element === void 0 ? void 0 : element.hasAttribute('disabled'))) {\n                return offsetIndex;\n            }\n        }\n    }\n    return highlightedIndex;\n}\nvar propTypes$2 = {\n    items: PropTypes.array.isRequired,\n    itemToString: PropTypes.func,\n    getA11yStatusMessage: PropTypes.func,\n    getA11ySelectionMessage: PropTypes.func,\n    circularNavigation: PropTypes.bool,\n    highlightedIndex: PropTypes.number,\n    defaultHighlightedIndex: PropTypes.number,\n    initialHighlightedIndex: PropTypes.number,\n    isOpen: PropTypes.bool,\n    defaultIsOpen: PropTypes.bool,\n    initialIsOpen: PropTypes.bool,\n    selectedItem: PropTypes.any,\n    initialSelectedItem: PropTypes.any,\n    defaultSelectedItem: PropTypes.any,\n    id: PropTypes.string,\n    labelId: PropTypes.string,\n    menuId: PropTypes.string,\n    getItemId: PropTypes.func,\n    toggleButtonId: PropTypes.string,\n    stateReducer: PropTypes.func,\n    onSelectedItemChange: PropTypes.func,\n    onHighlightedIndexChange: PropTypes.func,\n    onStateChange: PropTypes.func,\n    onIsOpenChange: PropTypes.func,\n    environment: PropTypes.shape({\n        addEventListener: PropTypes.func,\n        removeEventListener: PropTypes.func,\n        document: PropTypes.shape({\n            getElementById: PropTypes.func,\n            activeElement: PropTypes.any,\n            body: PropTypes.any\n        })\n    })\n};\n/**\n * Default implementation for status message. Only added when menu is open.\n * Will specift if there are results in the list, and if so, how many,\n * and what keys are relevant.\n *\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\nfunction getA11yStatusMessage(_a) {\n    var isOpen = _a.isOpen, resultCount = _a.resultCount, previousResultCount = _a.previousResultCount;\n    if (!isOpen) {\n        return '';\n    }\n    if (!resultCount) {\n        return 'No results are available.';\n    }\n    if (resultCount !== previousResultCount) {\n        return \"\".concat(resultCount, \" result\").concat(resultCount === 1 ? ' is' : 's are', \" available, use up and down arrow keys to navigate. Press Enter or Space Bar keys to select.\");\n    }\n    return '';\n}\nvar defaultProps$2 = __assign(__assign({}, defaultProps$3), { getA11yStatusMessage: getA11yStatusMessage });\n// eslint-disable-next-line import/no-mutable-exports\nvar validatePropTypes$2 = noop;\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== 'production') {\n    validatePropTypes$2 = function (options, caller) {\n        PropTypes.checkPropTypes(propTypes$2, options, 'prop', caller.name);\n    };\n}\n\nconst MenuKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_down__' : 0;\nconst MenuKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_up__' : 1;\nconst MenuKeyDownEscape = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_escape__' : 2;\nconst MenuKeyDownHome = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_home__' : 3;\nconst MenuKeyDownEnd = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_end__' : 4;\nconst MenuKeyDownEnter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_enter__' : 5;\nconst MenuKeyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_space_button__' : 6;\nconst MenuKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_character__' : 7;\nconst MenuBlur = process.env.NODE_ENV !== \"production\" ? '__menu_blur__' : 8;\nconst MenuMouseLeave$1 = process.env.NODE_ENV !== \"production\" ? '__menu_mouse_leave__' : 9;\nconst ItemMouseMove$1 = process.env.NODE_ENV !== \"production\" ? '__item_mouse_move__' : 10;\nconst ItemClick$1 = process.env.NODE_ENV !== \"production\" ? '__item_click__' : 11;\nconst ToggleButtonClick$1 = process.env.NODE_ENV !== \"production\" ? '__togglebutton_click__' : 12;\nconst ToggleButtonKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_down__' : 13;\nconst ToggleButtonKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_up__' : 14;\nconst ToggleButtonKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_character__' : 15;\nconst FunctionToggleMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_toggle_menu__' : 16;\nconst FunctionOpenMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_open_menu__' : 17;\nconst FunctionCloseMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_close_menu__' : 18;\nconst FunctionSetHighlightedIndex$1 = process.env.NODE_ENV !== \"production\" ? '__function_set_highlighted_index__' : 19;\nconst FunctionSelectItem$1 = process.env.NODE_ENV !== \"production\" ? '__function_select_item__' : 20;\nconst FunctionSetInputValue$1 = process.env.NODE_ENV !== \"production\" ? '__function_set_input_value__' : 21;\nconst FunctionReset$2 = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 22;\n\nvar stateChangeTypes$2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MenuKeyDownArrowDown: MenuKeyDownArrowDown,\n  MenuKeyDownArrowUp: MenuKeyDownArrowUp,\n  MenuKeyDownEscape: MenuKeyDownEscape,\n  MenuKeyDownHome: MenuKeyDownHome,\n  MenuKeyDownEnd: MenuKeyDownEnd,\n  MenuKeyDownEnter: MenuKeyDownEnter,\n  MenuKeyDownSpaceButton: MenuKeyDownSpaceButton,\n  MenuKeyDownCharacter: MenuKeyDownCharacter,\n  MenuBlur: MenuBlur,\n  MenuMouseLeave: MenuMouseLeave$1,\n  ItemMouseMove: ItemMouseMove$1,\n  ItemClick: ItemClick$1,\n  ToggleButtonClick: ToggleButtonClick$1,\n  ToggleButtonKeyDownArrowDown: ToggleButtonKeyDownArrowDown,\n  ToggleButtonKeyDownArrowUp: ToggleButtonKeyDownArrowUp,\n  ToggleButtonKeyDownCharacter: ToggleButtonKeyDownCharacter,\n  FunctionToggleMenu: FunctionToggleMenu$1,\n  FunctionOpenMenu: FunctionOpenMenu$1,\n  FunctionCloseMenu: FunctionCloseMenu$1,\n  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex$1,\n  FunctionSelectItem: FunctionSelectItem$1,\n  FunctionSetInputValue: FunctionSetInputValue$1,\n  FunctionReset: FunctionReset$2\n});\n\n/* eslint-disable complexity */\n\nfunction downshiftSelectReducer(state, action) {\n  const {\n    type,\n    props,\n    shiftKey\n  } = action;\n  let changes;\n\n  switch (type) {\n    case ItemClick$1:\n      changes = {\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        selectedItem: props.items[action.index]\n      };\n      break;\n\n    case ToggleButtonKeyDownCharacter:\n      {\n        const lowercasedKey = action.key;\n        const inputValue = `${state.inputValue}${lowercasedKey}`;\n        const itemIndex = getItemIndexByCharacterKey({\n          keysSoFar: inputValue,\n          highlightedIndex: state.selectedItem ? props.items.indexOf(state.selectedItem) : -1,\n          items: props.items,\n          itemToString: props.itemToString,\n          getItemNodeFromIndex: action.getItemNodeFromIndex\n        });\n        changes = {\n          inputValue,\n          ...(itemIndex >= 0 && {\n            selectedItem: props.items[itemIndex]\n          })\n        };\n      }\n      break;\n\n    case ToggleButtonKeyDownArrowDown:\n      changes = {\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),\n        isOpen: true\n      };\n      break;\n\n    case ToggleButtonKeyDownArrowUp:\n      changes = {\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),\n        isOpen: true\n      };\n      break;\n\n    case MenuKeyDownEnter:\n    case MenuKeyDownSpaceButton:\n      changes = {\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        ...(state.highlightedIndex >= 0 && {\n          selectedItem: props.items[state.highlightedIndex]\n        })\n      };\n      break;\n\n    case MenuKeyDownHome:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case MenuKeyDownEnd:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case MenuKeyDownEscape:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n\n    case MenuBlur:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n\n    case MenuKeyDownCharacter:\n      {\n        const lowercasedKey = action.key;\n        const inputValue = `${state.inputValue}${lowercasedKey}`;\n        const highlightedIndex = getItemIndexByCharacterKey({\n          keysSoFar: inputValue,\n          highlightedIndex: state.highlightedIndex,\n          items: props.items,\n          itemToString: props.itemToString,\n          getItemNodeFromIndex: action.getItemNodeFromIndex\n        });\n        changes = {\n          inputValue,\n          ...(highlightedIndex >= 0 && {\n            highlightedIndex\n          })\n        };\n      }\n      break;\n\n    case MenuKeyDownArrowDown:\n      changes = {\n        highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n      };\n      break;\n\n    case MenuKeyDownArrowUp:\n      changes = {\n        highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n      };\n      break;\n\n    case FunctionSelectItem$1:\n      changes = {\n        selectedItem: action.selectedItem\n      };\n      break;\n\n    default:\n      return downshiftCommonReducer(state, action, stateChangeTypes$2);\n  }\n\n  return { ...state,\n    ...changes\n  };\n}\n/* eslint-enable complexity */\n\n/* eslint-disable max-statements */\nuseSelect.stateChangeTypes = stateChangeTypes$2;\n\nfunction useSelect(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  validatePropTypes$2(userProps, useSelect); // Props defaults and destructuring.\n\n  const props = { ...defaultProps$2,\n    ...userProps\n  };\n  const {\n    items,\n    scrollIntoView,\n    environment,\n    initialIsOpen,\n    defaultIsOpen,\n    itemToString,\n    getA11ySelectionMessage,\n    getA11yStatusMessage\n  } = props; // Initial state depending on controlled props.\n\n  const initialState = getInitialState$2(props);\n  const [state, dispatch] = useControlledReducer$1(downshiftSelectReducer, initialState, props);\n  const {\n    isOpen,\n    highlightedIndex,\n    selectedItem,\n    inputValue\n  } = state; // Element efs.\n\n  const toggleButtonRef = useRef(null);\n  const menuRef = useRef(null);\n  const itemRefs = useRef({}); // used not to trigger menu blur action in some scenarios.\n\n  const shouldBlurRef = useRef(true); // used to keep the inputValue clearTimeout object between renders.\n\n  const clearTimeoutRef = useRef(null); // prevent id re-generation between renders.\n\n  const elementIds = useElementIds(props); // used to keep track of how many items we had on previous cycle.\n\n  const previousResultCountRef = useRef();\n  const isInitialMountRef = useRef(true); // utility callback to get item element.\n\n  const latest = useLatestRef({\n    state,\n    props\n  }); // Some utils.\n\n  const getItemNodeFromIndex = useCallback(index => itemRefs.current[elementIds.getItemId(index)], [elementIds]); // Effects.\n  // Sets a11y status message on changes in state.\n\n  useA11yMessageSetter(getA11yStatusMessage, [isOpen, highlightedIndex, inputValue, items], {\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items,\n    environment,\n    itemToString,\n    ...state\n  }); // Sets a11y status message on changes in selectedItem.\n\n  useA11yMessageSetter(getA11ySelectionMessage, [selectedItem], {\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items,\n    environment,\n    itemToString,\n    ...state\n  }); // Scroll on highlighted item if change comes from keyboard.\n\n  const shouldScrollRef = useScrollIntoView({\n    menuElement: menuRef.current,\n    highlightedIndex,\n    isOpen,\n    itemRefs,\n    scrollIntoView,\n    getItemNodeFromIndex\n  }); // Sets cleanup for the keysSoFar callback, debounded after 500ms.\n\n  useEffect(() => {\n    // init the clean function here as we need access to dispatch.\n    clearTimeoutRef.current = debounce(outerDispatch => {\n      outerDispatch({\n        type: FunctionSetInputValue$1,\n        inputValue: ''\n      });\n    }, 500); // Cancel any pending debounced calls on mount\n\n    return () => {\n      clearTimeoutRef.current.cancel();\n    };\n  }, []); // Invokes the keysSoFar callback set up above.\n\n  useEffect(() => {\n    if (!inputValue) {\n      return;\n    }\n\n    clearTimeoutRef.current(dispatch);\n  }, [dispatch, inputValue]);\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props,\n    state\n  });\n  /* Controls the focus on the menu or the toggle button. */\n\n  useEffect(() => {\n    // Don't focus menu on first render.\n    if (isInitialMountRef.current) {\n      // Unless it was initialised as open.\n      if ((initialIsOpen || defaultIsOpen || isOpen) && menuRef.current) {\n        menuRef.current.focus();\n      }\n\n      return;\n    } // Focus menu on open.\n\n\n    if (isOpen) {\n      // istanbul ignore else\n      if (menuRef.current) {\n        menuRef.current.focus();\n      }\n\n      return;\n    } // Focus toggleButton on close, but not if it was closed with (Shift+)Tab.\n\n\n    if (environment.document.activeElement === menuRef.current) {\n      // istanbul ignore else\n      if (toggleButtonRef.current) {\n        shouldBlurRef.current = false;\n        toggleButtonRef.current.focus();\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isOpen]);\n  useEffect(() => {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    previousResultCountRef.current = items.length;\n  }); // Add mouse/touch events to document.\n\n  const mouseAndTouchTrackersRef = useMouseAndTouchTracker(isOpen, [menuRef, toggleButtonRef], environment, () => {\n    dispatch({\n      type: MenuBlur\n    });\n  });\n  const setGetterPropCallInfo = useGetterPropsCalledChecker('getMenuProps', 'getToggleButtonProps'); // Make initial ref false.\n\n  useEffect(() => {\n    isInitialMountRef.current = false;\n  }, []); // Reset itemRefs on close.\n\n  useEffect(() => {\n    if (!isOpen) {\n      itemRefs.current = {};\n    }\n  }, [isOpen]); // Event handler functions.\n\n  const toggleButtonKeyDownHandlers = useMemo(() => ({\n    ArrowDown(event) {\n      event.preventDefault();\n      dispatch({\n        type: ToggleButtonKeyDownArrowDown,\n        getItemNodeFromIndex,\n        shiftKey: event.shiftKey\n      });\n    },\n\n    ArrowUp(event) {\n      event.preventDefault();\n      dispatch({\n        type: ToggleButtonKeyDownArrowUp,\n        getItemNodeFromIndex,\n        shiftKey: event.shiftKey\n      });\n    }\n\n  }), [dispatch, getItemNodeFromIndex]);\n  const menuKeyDownHandlers = useMemo(() => ({\n    ArrowDown(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownArrowDown,\n        getItemNodeFromIndex,\n        shiftKey: event.shiftKey\n      });\n    },\n\n    ArrowUp(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownArrowUp,\n        getItemNodeFromIndex,\n        shiftKey: event.shiftKey\n      });\n    },\n\n    Home(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownHome,\n        getItemNodeFromIndex\n      });\n    },\n\n    End(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownEnd,\n        getItemNodeFromIndex\n      });\n    },\n\n    Escape() {\n      dispatch({\n        type: MenuKeyDownEscape\n      });\n    },\n\n    Enter(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownEnter\n      });\n    },\n\n    ' '(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownSpaceButton\n      });\n    }\n\n  }), [dispatch, getItemNodeFromIndex]); // Action functions.\n\n  const toggleMenu = useCallback(() => {\n    dispatch({\n      type: FunctionToggleMenu$1\n    });\n  }, [dispatch]);\n  const closeMenu = useCallback(() => {\n    dispatch({\n      type: FunctionCloseMenu$1\n    });\n  }, [dispatch]);\n  const openMenu = useCallback(() => {\n    dispatch({\n      type: FunctionOpenMenu$1\n    });\n  }, [dispatch]);\n  const setHighlightedIndex = useCallback(newHighlightedIndex => {\n    dispatch({\n      type: FunctionSetHighlightedIndex$1,\n      highlightedIndex: newHighlightedIndex\n    });\n  }, [dispatch]);\n  const selectItem = useCallback(newSelectedItem => {\n    dispatch({\n      type: FunctionSelectItem$1,\n      selectedItem: newSelectedItem\n    });\n  }, [dispatch]);\n  const reset = useCallback(() => {\n    dispatch({\n      type: FunctionReset$2\n    });\n  }, [dispatch]);\n  const setInputValue = useCallback(newInputValue => {\n    dispatch({\n      type: FunctionSetInputValue$1,\n      inputValue: newInputValue\n    });\n  }, [dispatch]); // Getter functions.\n\n  const getLabelProps = useCallback(labelProps => ({\n    id: elementIds.labelId,\n    htmlFor: elementIds.toggleButtonId,\n    ...labelProps\n  }), [elementIds]);\n  const getMenuProps = useCallback(function (_temp, _temp2) {\n    let {\n      onMouseLeave,\n      refKey = 'ref',\n      onKeyDown,\n      onBlur,\n      ref,\n      ...rest\n    } = _temp === void 0 ? {} : _temp;\n    let {\n      suppressRefError = false\n    } = _temp2 === void 0 ? {} : _temp2;\n    const latestState = latest.current.state;\n\n    const menuHandleKeyDown = event => {\n      const key = normalizeArrowKey(event);\n\n      if (key && menuKeyDownHandlers[key]) {\n        menuKeyDownHandlers[key](event);\n      } else if (isAcceptedCharacterKey(key)) {\n        dispatch({\n          type: MenuKeyDownCharacter,\n          key,\n          getItemNodeFromIndex\n        });\n      }\n    };\n\n    const menuHandleBlur = () => {\n      // if the blur was a result of selection, we don't trigger this action.\n      if (shouldBlurRef.current === false) {\n        shouldBlurRef.current = true;\n        return;\n      }\n\n      const shouldBlur = !mouseAndTouchTrackersRef.current.isMouseDown;\n      /* istanbul ignore else */\n\n      if (shouldBlur) {\n        dispatch({\n          type: MenuBlur\n        });\n      }\n    };\n\n    const menuHandleMouseLeave = () => {\n      dispatch({\n        type: MenuMouseLeave$1\n      });\n    };\n\n    setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef);\n    return {\n      [refKey]: handleRefs(ref, menuNode => {\n        menuRef.current = menuNode;\n      }),\n      id: elementIds.menuId,\n      role: 'listbox',\n      'aria-labelledby': elementIds.labelId,\n      tabIndex: -1,\n      ...(latestState.isOpen && latestState.highlightedIndex > -1 && {\n        'aria-activedescendant': elementIds.getItemId(latestState.highlightedIndex)\n      }),\n      onMouseLeave: callAllEventHandlers(onMouseLeave, menuHandleMouseLeave),\n      onKeyDown: callAllEventHandlers(onKeyDown, menuHandleKeyDown),\n      onBlur: callAllEventHandlers(onBlur, menuHandleBlur),\n      ...rest\n    };\n  }, [dispatch, latest, menuKeyDownHandlers, mouseAndTouchTrackersRef, setGetterPropCallInfo, elementIds, getItemNodeFromIndex]);\n  const getToggleButtonProps = useCallback(function (_temp3, _temp4) {\n    let {\n      onClick,\n      onKeyDown,\n      refKey = 'ref',\n      ref,\n      ...rest\n    } = _temp3 === void 0 ? {} : _temp3;\n    let {\n      suppressRefError = false\n    } = _temp4 === void 0 ? {} : _temp4;\n\n    const toggleButtonHandleClick = () => {\n      dispatch({\n        type: ToggleButtonClick$1\n      });\n    };\n\n    const toggleButtonHandleKeyDown = event => {\n      const key = normalizeArrowKey(event);\n\n      if (key && toggleButtonKeyDownHandlers[key]) {\n        toggleButtonKeyDownHandlers[key](event);\n      } else if (isAcceptedCharacterKey(key)) {\n        dispatch({\n          type: ToggleButtonKeyDownCharacter,\n          key,\n          getItemNodeFromIndex\n        });\n      }\n    };\n\n    const toggleProps = {\n      [refKey]: handleRefs(ref, toggleButtonNode => {\n        toggleButtonRef.current = toggleButtonNode;\n      }),\n      id: elementIds.toggleButtonId,\n      'aria-haspopup': 'listbox',\n      'aria-expanded': latest.current.state.isOpen,\n      'aria-labelledby': `${elementIds.labelId} ${elementIds.toggleButtonId}`,\n      ...rest\n    };\n\n    if (!rest.disabled) {\n      toggleProps.onClick = callAllEventHandlers(onClick, toggleButtonHandleClick);\n      toggleProps.onKeyDown = callAllEventHandlers(onKeyDown, toggleButtonHandleKeyDown);\n    }\n\n    setGetterPropCallInfo('getToggleButtonProps', suppressRefError, refKey, toggleButtonRef);\n    return toggleProps;\n  }, [dispatch, latest, toggleButtonKeyDownHandlers, setGetterPropCallInfo, elementIds, getItemNodeFromIndex]);\n  const getItemProps = useCallback(function (_temp5) {\n    let {\n      item,\n      index,\n      onMouseMove,\n      onClick,\n      refKey = 'ref',\n      ref,\n      disabled,\n      ...rest\n    } = _temp5 === void 0 ? {} : _temp5;\n    const {\n      state: latestState,\n      props: latestProps\n    } = latest.current;\n\n    const itemHandleMouseMove = () => {\n      if (index === latestState.highlightedIndex) {\n        return;\n      }\n\n      shouldScrollRef.current = false;\n      dispatch({\n        type: ItemMouseMove$1,\n        index,\n        disabled\n      });\n    };\n\n    const itemHandleClick = () => {\n      dispatch({\n        type: ItemClick$1,\n        index\n      });\n    };\n\n    const itemIndex = getItemIndex(index, item, latestProps.items);\n\n    if (itemIndex < 0) {\n      throw new Error('Pass either item or item index in getItemProps!');\n    }\n\n    const itemProps = {\n      disabled,\n      role: 'option',\n      'aria-selected': `${itemIndex === latestState.highlightedIndex}`,\n      id: elementIds.getItemId(itemIndex),\n      [refKey]: handleRefs(ref, itemNode => {\n        if (itemNode) {\n          itemRefs.current[elementIds.getItemId(itemIndex)] = itemNode;\n        }\n      }),\n      ...rest\n    };\n\n    if (!disabled) {\n      itemProps.onClick = callAllEventHandlers(onClick, itemHandleClick);\n    }\n\n    itemProps.onMouseMove = callAllEventHandlers(onMouseMove, itemHandleMouseMove);\n    return itemProps;\n  }, [dispatch, latest, shouldScrollRef, elementIds]);\n  return {\n    // prop getters.\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    // actions.\n    toggleMenu,\n    openMenu,\n    closeMenu,\n    setHighlightedIndex,\n    selectItem,\n    reset,\n    setInputValue,\n    // state.\n    highlightedIndex,\n    isOpen,\n    selectedItem,\n    inputValue\n  };\n}\n\nconst InputKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__input_keydown_arrow_down__' : 0;\nconst InputKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__input_keydown_arrow_up__' : 1;\nconst InputKeyDownEscape = process.env.NODE_ENV !== \"production\" ? '__input_keydown_escape__' : 2;\nconst InputKeyDownHome = process.env.NODE_ENV !== \"production\" ? '__input_keydown_home__' : 3;\nconst InputKeyDownEnd = process.env.NODE_ENV !== \"production\" ? '__input_keydown_end__' : 4;\nconst InputKeyDownEnter = process.env.NODE_ENV !== \"production\" ? '__input_keydown_enter__' : 5;\nconst InputChange = process.env.NODE_ENV !== \"production\" ? '__input_change__' : 6;\nconst InputBlur = process.env.NODE_ENV !== \"production\" ? '__input_blur__' : 7;\nconst MenuMouseLeave = process.env.NODE_ENV !== \"production\" ? '__menu_mouse_leave__' : 8;\nconst ItemMouseMove = process.env.NODE_ENV !== \"production\" ? '__item_mouse_move__' : 9;\nconst ItemClick = process.env.NODE_ENV !== \"production\" ? '__item_click__' : 10;\nconst ToggleButtonClick = process.env.NODE_ENV !== \"production\" ? '__togglebutton_click__' : 11;\nconst FunctionToggleMenu = process.env.NODE_ENV !== \"production\" ? '__function_toggle_menu__' : 12;\nconst FunctionOpenMenu = process.env.NODE_ENV !== \"production\" ? '__function_open_menu__' : 13;\nconst FunctionCloseMenu = process.env.NODE_ENV !== \"production\" ? '__function_close_menu__' : 14;\nconst FunctionSetHighlightedIndex = process.env.NODE_ENV !== \"production\" ? '__function_set_highlighted_index__' : 15;\nconst FunctionSelectItem = process.env.NODE_ENV !== \"production\" ? '__function_select_item__' : 16;\nconst FunctionSetInputValue = process.env.NODE_ENV !== \"production\" ? '__function_set_input_value__' : 17;\nconst FunctionReset$1 = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 18;\nconst ControlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__controlled_prop_updated_selected_item__' : 19;\n\nvar stateChangeTypes$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  InputKeyDownArrowDown: InputKeyDownArrowDown,\n  InputKeyDownArrowUp: InputKeyDownArrowUp,\n  InputKeyDownEscape: InputKeyDownEscape,\n  InputKeyDownHome: InputKeyDownHome,\n  InputKeyDownEnd: InputKeyDownEnd,\n  InputKeyDownEnter: InputKeyDownEnter,\n  InputChange: InputChange,\n  InputBlur: InputBlur,\n  MenuMouseLeave: MenuMouseLeave,\n  ItemMouseMove: ItemMouseMove,\n  ItemClick: ItemClick,\n  ToggleButtonClick: ToggleButtonClick,\n  FunctionToggleMenu: FunctionToggleMenu,\n  FunctionOpenMenu: FunctionOpenMenu,\n  FunctionCloseMenu: FunctionCloseMenu,\n  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex,\n  FunctionSelectItem: FunctionSelectItem,\n  FunctionSetInputValue: FunctionSetInputValue,\n  FunctionReset: FunctionReset$1,\n  ControlledPropUpdatedSelectedItem: ControlledPropUpdatedSelectedItem\n});\n\nfunction getInitialState$1(props) {\n  const initialState = getInitialState$2(props);\n  const {\n    selectedItem\n  } = initialState;\n  let {\n    inputValue\n  } = initialState;\n\n  if (inputValue === '' && selectedItem && props.defaultInputValue === undefined && props.initialInputValue === undefined && props.inputValue === undefined) {\n    inputValue = props.itemToString(selectedItem);\n  }\n\n  return { ...initialState,\n    inputValue\n  };\n}\n\nconst propTypes$1 = {\n  items: PropTypes.array.isRequired,\n  itemToString: PropTypes.func,\n  getA11yStatusMessage: PropTypes.func,\n  getA11ySelectionMessage: PropTypes.func,\n  circularNavigation: PropTypes.bool,\n  highlightedIndex: PropTypes.number,\n  defaultHighlightedIndex: PropTypes.number,\n  initialHighlightedIndex: PropTypes.number,\n  isOpen: PropTypes.bool,\n  defaultIsOpen: PropTypes.bool,\n  initialIsOpen: PropTypes.bool,\n  selectedItem: PropTypes.any,\n  initialSelectedItem: PropTypes.any,\n  defaultSelectedItem: PropTypes.any,\n  inputValue: PropTypes.string,\n  defaultInputValue: PropTypes.string,\n  initialInputValue: PropTypes.string,\n  id: PropTypes.string,\n  labelId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func,\n  inputId: PropTypes.string,\n  toggleButtonId: PropTypes.string,\n  stateReducer: PropTypes.func,\n  onSelectedItemChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onIsOpenChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\n/**\n * The useCombobox version of useControlledReducer, which also\n * checks if the controlled prop selectedItem changed between\n * renders. If so, it will also update inputValue with its\n * string equivalent. It uses the common useEnhancedReducer to\n * compute the rest of the state.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\nfunction useControlledReducer(reducer, initialState, props) {\n  const previousSelectedItemRef = useRef();\n  const [state, dispatch] = useEnhancedReducer(reducer, initialState, props); // ToDo: if needed, make same approach as selectedItemChanged from Downshift.\n\n  useEffect(() => {\n    if (isControlledProp(props, 'selectedItem')) {\n      if (previousSelectedItemRef.current !== props.selectedItem) {\n        dispatch({\n          type: ControlledPropUpdatedSelectedItem,\n          inputValue: props.itemToString(props.selectedItem)\n        });\n      }\n\n      previousSelectedItemRef.current = state.selectedItem === previousSelectedItemRef.current ? props.selectedItem : state.selectedItem;\n    }\n  });\n  return [getState(state, props), dispatch];\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nlet validatePropTypes$1 = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes$1 = (options, caller) => {\n    PropTypes.checkPropTypes(propTypes$1, options, 'prop', caller.name);\n  };\n}\n\nconst defaultProps$1 = { ...defaultProps$3,\n  getA11yStatusMessage: getA11yStatusMessage$1,\n  circularNavigation: true\n};\n\n/* eslint-disable complexity */\n\nfunction downshiftUseComboboxReducer(state, action) {\n  const {\n    type,\n    props,\n    shiftKey\n  } = action;\n  let changes;\n\n  switch (type) {\n    case ItemClick:\n      changes = {\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index])\n      };\n      break;\n\n    case InputKeyDownArrowDown:\n      if (state.isOpen) {\n        changes = {\n          highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n        };\n      } else {\n        changes = {\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),\n          isOpen: props.items.length >= 0\n        };\n      }\n\n      break;\n\n    case InputKeyDownArrowUp:\n      if (state.isOpen) {\n        changes = {\n          highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n        };\n      } else {\n        changes = {\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),\n          isOpen: props.items.length >= 0\n        };\n      }\n\n      break;\n\n    case InputKeyDownEnter:\n      changes = { ...(state.isOpen && state.highlightedIndex >= 0 && {\n          selectedItem: props.items[state.highlightedIndex],\n          isOpen: getDefaultValue$1(props, 'isOpen'),\n          highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n          inputValue: props.itemToString(props.items[state.highlightedIndex])\n        })\n      };\n      break;\n\n    case InputKeyDownEscape:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1,\n        ...(!state.isOpen && {\n          selectedItem: null,\n          inputValue: ''\n        })\n      };\n      break;\n\n    case InputKeyDownHome:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case InputKeyDownEnd:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case InputBlur:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1,\n        ...(state.highlightedIndex >= 0 && action.selectItem && {\n          selectedItem: props.items[state.highlightedIndex],\n          inputValue: props.itemToString(props.items[state.highlightedIndex])\n        })\n      };\n      break;\n\n    case InputChange:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        inputValue: action.inputValue\n      };\n      break;\n\n    case FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem)\n      };\n      break;\n\n    case ControlledPropUpdatedSelectedItem:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    default:\n      return downshiftCommonReducer(state, action, stateChangeTypes$1);\n  }\n\n  return { ...state,\n    ...changes\n  };\n}\n/* eslint-enable complexity */\n\n/* eslint-disable max-statements */\nuseCombobox.stateChangeTypes = stateChangeTypes$1;\n\nfunction useCombobox(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  validatePropTypes$1(userProps, useCombobox); // Props defaults and destructuring.\n\n  const props = { ...defaultProps$1,\n    ...userProps\n  };\n  const {\n    initialIsOpen,\n    defaultIsOpen,\n    items,\n    scrollIntoView,\n    environment,\n    getA11yStatusMessage,\n    getA11ySelectionMessage,\n    itemToString\n  } = props; // Initial state depending on controlled props.\n\n  const initialState = getInitialState$1(props);\n  const [state, dispatch] = useControlledReducer(downshiftUseComboboxReducer, initialState, props);\n  const {\n    isOpen,\n    highlightedIndex,\n    selectedItem,\n    inputValue\n  } = state; // Element refs.\n\n  const menuRef = useRef(null);\n  const itemRefs = useRef({});\n  const inputRef = useRef(null);\n  const toggleButtonRef = useRef(null);\n  const comboboxRef = useRef(null);\n  const isInitialMountRef = useRef(true); // prevent id re-generation between renders.\n\n  const elementIds = useElementIds(props); // used to keep track of how many items we had on previous cycle.\n\n  const previousResultCountRef = useRef(); // utility callback to get item element.\n\n  const latest = useLatestRef({\n    state,\n    props\n  });\n  const getItemNodeFromIndex = useCallback(index => itemRefs.current[elementIds.getItemId(index)], [elementIds]); // Effects.\n  // Sets a11y status message on changes in state.\n\n  useA11yMessageSetter(getA11yStatusMessage, [isOpen, highlightedIndex, inputValue, items], {\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items,\n    environment,\n    itemToString,\n    ...state\n  }); // Sets a11y status message on changes in selectedItem.\n\n  useA11yMessageSetter(getA11ySelectionMessage, [selectedItem], {\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items,\n    environment,\n    itemToString,\n    ...state\n  }); // Scroll on highlighted item if change comes from keyboard.\n\n  const shouldScrollRef = useScrollIntoView({\n    menuElement: menuRef.current,\n    highlightedIndex,\n    isOpen,\n    itemRefs,\n    scrollIntoView,\n    getItemNodeFromIndex\n  });\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props,\n    state\n  }); // Focus the input on first render if required.\n\n  useEffect(() => {\n    const focusOnOpen = initialIsOpen || defaultIsOpen || isOpen;\n\n    if (focusOnOpen && inputRef.current) {\n      inputRef.current.focus();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  useEffect(() => {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    previousResultCountRef.current = items.length;\n  }); // Add mouse/touch events to document.\n\n  const mouseAndTouchTrackersRef = useMouseAndTouchTracker(isOpen, [comboboxRef, menuRef, toggleButtonRef], environment, () => {\n    dispatch({\n      type: InputBlur,\n      selectItem: false\n    });\n  });\n  const setGetterPropCallInfo = useGetterPropsCalledChecker('getInputProps', 'getComboboxProps', 'getMenuProps'); // Make initial ref false.\n\n  useEffect(() => {\n    isInitialMountRef.current = false;\n  }, []); // Reset itemRefs on close.\n\n  useEffect(() => {\n    if (!isOpen) {\n      itemRefs.current = {};\n    }\n  }, [isOpen]);\n  /* Event handler functions */\n\n  const inputKeyDownHandlers = useMemo(() => ({\n    ArrowDown(event) {\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownArrowDown,\n        shiftKey: event.shiftKey,\n        getItemNodeFromIndex\n      });\n    },\n\n    ArrowUp(event) {\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownArrowUp,\n        shiftKey: event.shiftKey,\n        getItemNodeFromIndex\n      });\n    },\n\n    Home(event) {\n      if (!latest.current.state.isOpen) {\n        return;\n      }\n\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownHome,\n        getItemNodeFromIndex\n      });\n    },\n\n    End(event) {\n      if (!latest.current.state.isOpen) {\n        return;\n      }\n\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownEnd,\n        getItemNodeFromIndex\n      });\n    },\n\n    Escape(event) {\n      const latestState = latest.current.state;\n\n      if (latestState.isOpen || latestState.inputValue || latestState.selectedItem || latestState.highlightedIndex > -1) {\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownEscape\n        });\n      }\n    },\n\n    Enter(event) {\n      const latestState = latest.current.state; // if closed or no highlighted index, do nothing.\n\n      if (!latestState.isOpen || latestState.highlightedIndex < 0 || event.which === 229 // if IME composing, wait for next Enter keydown event.\n      ) {\n        return;\n      }\n\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownEnter,\n        getItemNodeFromIndex\n      });\n    }\n\n  }), [dispatch, latest, getItemNodeFromIndex]); // Getter props.\n\n  const getLabelProps = useCallback(labelProps => ({\n    id: elementIds.labelId,\n    htmlFor: elementIds.inputId,\n    ...labelProps\n  }), [elementIds]);\n  const getMenuProps = useCallback(function (_temp, _temp2) {\n    let {\n      onMouseLeave,\n      refKey = 'ref',\n      ref,\n      ...rest\n    } = _temp === void 0 ? {} : _temp;\n    let {\n      suppressRefError = false\n    } = _temp2 === void 0 ? {} : _temp2;\n    setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef);\n    return {\n      [refKey]: handleRefs(ref, menuNode => {\n        menuRef.current = menuNode;\n      }),\n      id: elementIds.menuId,\n      role: 'listbox',\n      'aria-labelledby': elementIds.labelId,\n      onMouseLeave: callAllEventHandlers(onMouseLeave, () => {\n        dispatch({\n          type: MenuMouseLeave\n        });\n      }),\n      ...rest\n    };\n  }, [dispatch, setGetterPropCallInfo, elementIds]);\n  const getItemProps = useCallback(function (_temp3) {\n    let {\n      item,\n      index,\n      refKey = 'ref',\n      ref,\n      onMouseMove,\n      onMouseDown,\n      onClick,\n      onPress,\n      disabled,\n      ...rest\n    } = _temp3 === void 0 ? {} : _temp3;\n    const {\n      props: latestProps,\n      state: latestState\n    } = latest.current;\n    const itemIndex = getItemIndex(index, item, latestProps.items);\n\n    if (itemIndex < 0) {\n      throw new Error('Pass either item or item index in getItemProps!');\n    }\n\n    const onSelectKey = 'onClick';\n    const customClickHandler = onClick;\n\n    const itemHandleMouseMove = () => {\n      if (index === latestState.highlightedIndex) {\n        return;\n      }\n\n      shouldScrollRef.current = false;\n      dispatch({\n        type: ItemMouseMove,\n        index,\n        disabled\n      });\n    };\n\n    const itemHandleClick = () => {\n      dispatch({\n        type: ItemClick,\n        index\n      });\n    };\n\n    const itemHandleMouseDown = e => e.preventDefault();\n\n    return {\n      [refKey]: handleRefs(ref, itemNode => {\n        if (itemNode) {\n          itemRefs.current[elementIds.getItemId(itemIndex)] = itemNode;\n        }\n      }),\n      disabled,\n      role: 'option',\n      'aria-selected': `${itemIndex === latestState.highlightedIndex}`,\n      id: elementIds.getItemId(itemIndex),\n      ...(!disabled && {\n        [onSelectKey]: callAllEventHandlers(customClickHandler, itemHandleClick)\n      }),\n      onMouseMove: callAllEventHandlers(onMouseMove, itemHandleMouseMove),\n      onMouseDown: callAllEventHandlers(onMouseDown, itemHandleMouseDown),\n      ...rest\n    };\n  }, [dispatch, latest, shouldScrollRef, elementIds]);\n  const getToggleButtonProps = useCallback(function (_temp4) {\n    let {\n      onClick,\n      onPress,\n      refKey = 'ref',\n      ref,\n      ...rest\n    } = _temp4 === void 0 ? {} : _temp4;\n\n    const toggleButtonHandleClick = () => {\n      dispatch({\n        type: ToggleButtonClick\n      });\n\n      if (!latest.current.state.isOpen && inputRef.current) {\n        inputRef.current.focus();\n      }\n    };\n\n    return {\n      [refKey]: handleRefs(ref, toggleButtonNode => {\n        toggleButtonRef.current = toggleButtonNode;\n      }),\n      id: elementIds.toggleButtonId,\n      tabIndex: -1,\n      ...(!rest.disabled && { ...({\n          onClick: callAllEventHandlers(onClick, toggleButtonHandleClick)\n        })\n      }),\n      ...rest\n    };\n  }, [dispatch, latest, elementIds]);\n  const getInputProps = useCallback(function (_temp5, _temp6) {\n    let {\n      onKeyDown,\n      onChange,\n      onInput,\n      onBlur,\n      onChangeText,\n      refKey = 'ref',\n      ref,\n      ...rest\n    } = _temp5 === void 0 ? {} : _temp5;\n    let {\n      suppressRefError = false\n    } = _temp6 === void 0 ? {} : _temp6;\n    setGetterPropCallInfo('getInputProps', suppressRefError, refKey, inputRef);\n    const latestState = latest.current.state;\n\n    const inputHandleKeyDown = event => {\n      const key = normalizeArrowKey(event);\n\n      if (key && inputKeyDownHandlers[key]) {\n        inputKeyDownHandlers[key](event);\n      }\n    };\n\n    const inputHandleChange = event => {\n      dispatch({\n        type: InputChange,\n        inputValue: event.target.value\n      });\n    };\n\n    const inputHandleBlur = () => {\n      /* istanbul ignore else */\n      if (latestState.isOpen && !mouseAndTouchTrackersRef.current.isMouseDown) {\n        dispatch({\n          type: InputBlur,\n          selectItem: true\n        });\n      }\n    };\n    /* istanbul ignore next (preact) */\n\n\n    const onChangeKey = 'onChange';\n    let eventHandlers = {};\n\n    if (!rest.disabled) {\n      eventHandlers = {\n        [onChangeKey]: callAllEventHandlers(onChange, onInput, inputHandleChange),\n        onKeyDown: callAllEventHandlers(onKeyDown, inputHandleKeyDown),\n        onBlur: callAllEventHandlers(onBlur, inputHandleBlur)\n      };\n    }\n\n    return {\n      [refKey]: handleRefs(ref, inputNode => {\n        inputRef.current = inputNode;\n      }),\n      id: elementIds.inputId,\n      'aria-autocomplete': 'list',\n      'aria-controls': elementIds.menuId,\n      ...(latestState.isOpen && latestState.highlightedIndex > -1 && {\n        'aria-activedescendant': elementIds.getItemId(latestState.highlightedIndex)\n      }),\n      'aria-labelledby': elementIds.labelId,\n      // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n      // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n      autoComplete: 'off',\n      value: latestState.inputValue,\n      ...eventHandlers,\n      ...rest\n    };\n  }, [dispatch, inputKeyDownHandlers, latest, mouseAndTouchTrackersRef, setGetterPropCallInfo, elementIds]);\n  const getComboboxProps = useCallback(function (_temp7, _temp8) {\n    let {\n      refKey = 'ref',\n      ref,\n      ...rest\n    } = _temp7 === void 0 ? {} : _temp7;\n    let {\n      suppressRefError = false\n    } = _temp8 === void 0 ? {} : _temp8;\n    setGetterPropCallInfo('getComboboxProps', suppressRefError, refKey, comboboxRef);\n    return {\n      [refKey]: handleRefs(ref, comboboxNode => {\n        comboboxRef.current = comboboxNode;\n      }),\n      role: 'combobox',\n      'aria-haspopup': 'listbox',\n      'aria-owns': elementIds.menuId,\n      'aria-expanded': latest.current.state.isOpen,\n      ...rest\n    };\n  }, [latest, setGetterPropCallInfo, elementIds]); // returns\n\n  const toggleMenu = useCallback(() => {\n    dispatch({\n      type: FunctionToggleMenu\n    });\n  }, [dispatch]);\n  const closeMenu = useCallback(() => {\n    dispatch({\n      type: FunctionCloseMenu\n    });\n  }, [dispatch]);\n  const openMenu = useCallback(() => {\n    dispatch({\n      type: FunctionOpenMenu\n    });\n  }, [dispatch]);\n  const setHighlightedIndex = useCallback(newHighlightedIndex => {\n    dispatch({\n      type: FunctionSetHighlightedIndex,\n      highlightedIndex: newHighlightedIndex\n    });\n  }, [dispatch]);\n  const selectItem = useCallback(newSelectedItem => {\n    dispatch({\n      type: FunctionSelectItem,\n      selectedItem: newSelectedItem\n    });\n  }, [dispatch]);\n  const setInputValue = useCallback(newInputValue => {\n    dispatch({\n      type: FunctionSetInputValue,\n      inputValue: newInputValue\n    });\n  }, [dispatch]);\n  const reset = useCallback(() => {\n    dispatch({\n      type: FunctionReset$1\n    });\n  }, [dispatch]);\n  return {\n    // prop getters.\n    getItemProps,\n    getLabelProps,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getToggleButtonProps,\n    // actions.\n    toggleMenu,\n    openMenu,\n    closeMenu,\n    setHighlightedIndex,\n    setInputValue,\n    selectItem,\n    reset,\n    // state.\n    highlightedIndex,\n    isOpen,\n    selectedItem,\n    inputValue\n  };\n}\n\nconst defaultStateValues = {\n  activeIndex: -1,\n  selectedItems: []\n};\n/**\n * Returns the initial value for a state key in the following order:\n * 1. controlled prop, 2. initial prop, 3. default prop, 4. default\n * value from Downshift.\n *\n * @param {Object} props Props passed to the hook.\n * @param {string} propKey Props key to generate the value for.\n * @returns {any} The initial value for that prop.\n */\n\nfunction getInitialValue(props, propKey) {\n  return getInitialValue$1(props, propKey, defaultStateValues);\n}\n/**\n * Returns the default value for a state key in the following order:\n * 1. controlled prop, 2. default prop, 3. default value from Downshift.\n *\n * @param {Object} props Props passed to the hook.\n * @param {string} propKey Props key to generate the value for.\n * @returns {any} The initial value for that prop.\n */\n\n\nfunction getDefaultValue(props, propKey) {\n  return getDefaultValue$1(props, propKey, defaultStateValues);\n}\n/**\n * Gets the initial state based on the provided props. It uses initial, default\n * and controlled props related to state in order to compute the initial value.\n *\n * @param {Object} props Props passed to the hook.\n * @returns {Object} The initial state.\n */\n\n\nfunction getInitialState(props) {\n  const activeIndex = getInitialValue(props, 'activeIndex');\n  const selectedItems = getInitialValue(props, 'selectedItems');\n  return {\n    activeIndex,\n    selectedItems\n  };\n}\n/**\n * Returns true if dropdown keydown operation is permitted. Should not be\n * allowed on keydown with modifier keys (ctrl, alt, shift, meta), on\n * input element with text content that is either highlighted or selection\n * cursor is not at the starting position.\n *\n * @param {KeyboardEvent} event The event from keydown.\n * @returns {boolean} Whether the operation is allowed.\n */\n\n\nfunction isKeyDownOperationPermitted(event) {\n  if (event.shiftKey || event.metaKey || event.ctrlKey || event.altKey) {\n    return false;\n  }\n\n  const element = event.target;\n\n  if (element instanceof HTMLInputElement && // if element is a text input\n  element.value !== '' && ( // and we have text in it\n  // and cursor is either not at the start or is currently highlighting text.\n  element.selectionStart !== 0 || element.selectionEnd !== 0)) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Returns a message to be added to aria-live region when item is removed.\n *\n * @param {Object} selectionParameters Parameters required to build the message.\n * @returns {string} The a11y message.\n */\n\n\nfunction getA11yRemovalMessage(selectionParameters) {\n  const {\n    removedSelectedItem,\n    itemToString: itemToStringLocal\n  } = selectionParameters;\n  return `${itemToStringLocal(removedSelectedItem)} has been removed.`;\n}\n\nconst propTypes = {\n  selectedItems: PropTypes.array,\n  initialSelectedItems: PropTypes.array,\n  defaultSelectedItems: PropTypes.array,\n  itemToString: PropTypes.func,\n  getA11yRemovalMessage: PropTypes.func,\n  stateReducer: PropTypes.func,\n  activeIndex: PropTypes.number,\n  initialActiveIndex: PropTypes.number,\n  defaultActiveIndex: PropTypes.number,\n  onActiveIndexChange: PropTypes.func,\n  onSelectedItemsChange: PropTypes.func,\n  keyNavigationNext: PropTypes.string,\n  keyNavigationPrevious: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\nconst defaultProps = {\n  itemToString: defaultProps$3.itemToString,\n  stateReducer: defaultProps$3.stateReducer,\n  environment: defaultProps$3.environment,\n  getA11yRemovalMessage,\n  keyNavigationNext: 'ArrowRight',\n  keyNavigationPrevious: 'ArrowLeft'\n}; // eslint-disable-next-line import/no-mutable-exports\n\nlet validatePropTypes = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes = (options, caller) => {\n    PropTypes.checkPropTypes(propTypes, options, 'prop', caller.name);\n  };\n}\n\nconst SelectedItemClick = process.env.NODE_ENV !== \"production\" ? '__selected_item_click__' : 0;\nconst SelectedItemKeyDownDelete = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_delete__' : 1;\nconst SelectedItemKeyDownBackspace = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_backspace__' : 2;\nconst SelectedItemKeyDownNavigationNext = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_navigation_next__' : 3;\nconst SelectedItemKeyDownNavigationPrevious = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_navigation_previous__' : 4;\nconst DropdownKeyDownNavigationPrevious = process.env.NODE_ENV !== \"production\" ? '__dropdown_keydown_navigation_previous__' : 5;\nconst DropdownKeyDownBackspace = process.env.NODE_ENV !== \"production\" ? '__dropdown_keydown_backspace__' : 6;\nconst DropdownClick = process.env.NODE_ENV !== \"production\" ? '__dropdown_click__' : 7;\nconst FunctionAddSelectedItem = process.env.NODE_ENV !== \"production\" ? '__function_add_selected_item__' : 8;\nconst FunctionRemoveSelectedItem = process.env.NODE_ENV !== \"production\" ? '__function_remove_selected_item__' : 9;\nconst FunctionSetSelectedItems = process.env.NODE_ENV !== \"production\" ? '__function_set_selected_items__' : 10;\nconst FunctionSetActiveIndex = process.env.NODE_ENV !== \"production\" ? '__function_set_active_index__' : 11;\nconst FunctionReset = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 12;\n\nvar stateChangeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  SelectedItemClick: SelectedItemClick,\n  SelectedItemKeyDownDelete: SelectedItemKeyDownDelete,\n  SelectedItemKeyDownBackspace: SelectedItemKeyDownBackspace,\n  SelectedItemKeyDownNavigationNext: SelectedItemKeyDownNavigationNext,\n  SelectedItemKeyDownNavigationPrevious: SelectedItemKeyDownNavigationPrevious,\n  DropdownKeyDownNavigationPrevious: DropdownKeyDownNavigationPrevious,\n  DropdownKeyDownBackspace: DropdownKeyDownBackspace,\n  DropdownClick: DropdownClick,\n  FunctionAddSelectedItem: FunctionAddSelectedItem,\n  FunctionRemoveSelectedItem: FunctionRemoveSelectedItem,\n  FunctionSetSelectedItems: FunctionSetSelectedItems,\n  FunctionSetActiveIndex: FunctionSetActiveIndex,\n  FunctionReset: FunctionReset\n});\n\n/* eslint-disable complexity */\n\nfunction downshiftMultipleSelectionReducer(state, action) {\n  const {\n    type,\n    index,\n    props,\n    selectedItem\n  } = action;\n  const {\n    activeIndex,\n    selectedItems\n  } = state;\n  let changes;\n\n  switch (type) {\n    case SelectedItemClick:\n      changes = {\n        activeIndex: index\n      };\n      break;\n\n    case SelectedItemKeyDownNavigationPrevious:\n      changes = {\n        activeIndex: activeIndex - 1 < 0 ? 0 : activeIndex - 1\n      };\n      break;\n\n    case SelectedItemKeyDownNavigationNext:\n      changes = {\n        activeIndex: activeIndex + 1 >= selectedItems.length ? -1 : activeIndex + 1\n      };\n      break;\n\n    case SelectedItemKeyDownBackspace:\n    case SelectedItemKeyDownDelete:\n      {\n        let newActiveIndex = activeIndex;\n\n        if (selectedItems.length === 1) {\n          newActiveIndex = -1;\n        } else if (activeIndex === selectedItems.length - 1) {\n          newActiveIndex = selectedItems.length - 2;\n        }\n\n        changes = {\n          selectedItems: [...selectedItems.slice(0, activeIndex), ...selectedItems.slice(activeIndex + 1)],\n          ...{\n            activeIndex: newActiveIndex\n          }\n        };\n        break;\n      }\n\n    case DropdownKeyDownNavigationPrevious:\n      changes = {\n        activeIndex: selectedItems.length - 1\n      };\n      break;\n\n    case DropdownKeyDownBackspace:\n      changes = {\n        selectedItems: selectedItems.slice(0, selectedItems.length - 1)\n      };\n      break;\n\n    case FunctionAddSelectedItem:\n      changes = {\n        selectedItems: [...selectedItems, selectedItem]\n      };\n      break;\n\n    case DropdownClick:\n      changes = {\n        activeIndex: -1\n      };\n      break;\n\n    case FunctionRemoveSelectedItem:\n      {\n        let newActiveIndex = activeIndex;\n        const selectedItemIndex = selectedItems.indexOf(selectedItem);\n\n        if (selectedItemIndex >= 0) {\n          if (selectedItems.length === 1) {\n            newActiveIndex = -1;\n          } else if (selectedItemIndex === selectedItems.length - 1) {\n            newActiveIndex = selectedItems.length - 2;\n          }\n\n          changes = {\n            selectedItems: [...selectedItems.slice(0, selectedItemIndex), ...selectedItems.slice(selectedItemIndex + 1)],\n            activeIndex: newActiveIndex\n          };\n        }\n\n        break;\n      }\n\n    case FunctionSetSelectedItems:\n      {\n        const {\n          selectedItems: newSelectedItems\n        } = action;\n        changes = {\n          selectedItems: newSelectedItems\n        };\n        break;\n      }\n\n    case FunctionSetActiveIndex:\n      {\n        const {\n          activeIndex: newActiveIndex\n        } = action;\n        changes = {\n          activeIndex: newActiveIndex\n        };\n        break;\n      }\n\n    case FunctionReset:\n      changes = {\n        activeIndex: getDefaultValue(props, 'activeIndex'),\n        selectedItems: getDefaultValue(props, 'selectedItems')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return { ...state,\n    ...changes\n  };\n}\n\nuseMultipleSelection.stateChangeTypes = stateChangeTypes;\n\nfunction useMultipleSelection(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  validatePropTypes(userProps, useMultipleSelection); // Props defaults and destructuring.\n\n  const props = { ...defaultProps,\n    ...userProps\n  };\n  const {\n    getA11yRemovalMessage,\n    itemToString,\n    environment,\n    keyNavigationNext,\n    keyNavigationPrevious\n  } = props; // Reducer init.\n\n  const [state, dispatch] = useControlledReducer$1(downshiftMultipleSelectionReducer, getInitialState(props), props);\n  const {\n    activeIndex,\n    selectedItems\n  } = state; // Refs.\n\n  const isInitialMountRef = useRef(true);\n  const dropdownRef = useRef(null);\n  const previousSelectedItemsRef = useRef(selectedItems);\n  const selectedItemRefs = useRef();\n  selectedItemRefs.current = [];\n  const latest = useLatestRef({\n    state,\n    props\n  }); // Effects.\n\n  /* Sets a11y status message on changes in selectedItem. */\n\n  useEffect(() => {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    if (selectedItems.length < previousSelectedItemsRef.current.length) {\n      const removedSelectedItem = previousSelectedItemsRef.current.find(item => selectedItems.indexOf(item) < 0);\n      setStatus(getA11yRemovalMessage({\n        itemToString,\n        resultCount: selectedItems.length,\n        removedSelectedItem,\n        activeIndex,\n        activeSelectedItem: selectedItems[activeIndex]\n      }), environment.document);\n    }\n\n    previousSelectedItemsRef.current = selectedItems; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedItems.length]); // Sets focus on active item.\n\n  useEffect(() => {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    if (activeIndex === -1 && dropdownRef.current) {\n      dropdownRef.current.focus();\n    } else if (selectedItemRefs.current[activeIndex]) {\n      selectedItemRefs.current[activeIndex].focus();\n    }\n  }, [activeIndex]);\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props,\n    state\n  });\n  const setGetterPropCallInfo = useGetterPropsCalledChecker('getDropdownProps'); // Make initial ref false.\n\n  useEffect(() => {\n    isInitialMountRef.current = false;\n  }, []); // Event handler functions.\n\n  const selectedItemKeyDownHandlers = useMemo(() => ({\n    [keyNavigationPrevious]() {\n      dispatch({\n        type: SelectedItemKeyDownNavigationPrevious\n      });\n    },\n\n    [keyNavigationNext]() {\n      dispatch({\n        type: SelectedItemKeyDownNavigationNext\n      });\n    },\n\n    Delete() {\n      dispatch({\n        type: SelectedItemKeyDownDelete\n      });\n    },\n\n    Backspace() {\n      dispatch({\n        type: SelectedItemKeyDownBackspace\n      });\n    }\n\n  }), [dispatch, keyNavigationNext, keyNavigationPrevious]);\n  const dropdownKeyDownHandlers = useMemo(() => ({\n    [keyNavigationPrevious](event) {\n      if (isKeyDownOperationPermitted(event)) {\n        dispatch({\n          type: DropdownKeyDownNavigationPrevious\n        });\n      }\n    },\n\n    Backspace(event) {\n      if (isKeyDownOperationPermitted(event)) {\n        dispatch({\n          type: DropdownKeyDownBackspace\n        });\n      }\n    }\n\n  }), [dispatch, keyNavigationPrevious]); // Getter props.\n\n  const getSelectedItemProps = useCallback(function (_temp) {\n    let {\n      refKey = 'ref',\n      ref,\n      onClick,\n      onKeyDown,\n      selectedItem,\n      index,\n      ...rest\n    } = _temp === void 0 ? {} : _temp;\n    const {\n      state: latestState\n    } = latest.current;\n    const itemIndex = getItemIndex(index, selectedItem, latestState.selectedItems);\n\n    if (itemIndex < 0) {\n      throw new Error('Pass either selectedItem or index in getSelectedItemProps!');\n    }\n\n    const selectedItemHandleClick = () => {\n      dispatch({\n        type: SelectedItemClick,\n        index\n      });\n    };\n\n    const selectedItemHandleKeyDown = event => {\n      const key = normalizeArrowKey(event);\n\n      if (key && selectedItemKeyDownHandlers[key]) {\n        selectedItemKeyDownHandlers[key](event);\n      }\n    };\n\n    return {\n      [refKey]: handleRefs(ref, selectedItemNode => {\n        if (selectedItemNode) {\n          selectedItemRefs.current.push(selectedItemNode);\n        }\n      }),\n      tabIndex: index === latestState.activeIndex ? 0 : -1,\n      onClick: callAllEventHandlers(onClick, selectedItemHandleClick),\n      onKeyDown: callAllEventHandlers(onKeyDown, selectedItemHandleKeyDown),\n      ...rest\n    };\n  }, [dispatch, latest, selectedItemKeyDownHandlers]);\n  const getDropdownProps = useCallback(function (_temp2, _temp3) {\n    let {\n      refKey = 'ref',\n      ref,\n      onKeyDown,\n      onClick,\n      preventKeyAction = false,\n      ...rest\n    } = _temp2 === void 0 ? {} : _temp2;\n    let {\n      suppressRefError = false\n    } = _temp3 === void 0 ? {} : _temp3;\n    setGetterPropCallInfo('getDropdownProps', suppressRefError, refKey, dropdownRef);\n\n    const dropdownHandleKeyDown = event => {\n      const key = normalizeArrowKey(event);\n\n      if (key && dropdownKeyDownHandlers[key]) {\n        dropdownKeyDownHandlers[key](event);\n      }\n    };\n\n    const dropdownHandleClick = () => {\n      dispatch({\n        type: DropdownClick\n      });\n    };\n\n    return {\n      [refKey]: handleRefs(ref, dropdownNode => {\n        if (dropdownNode) {\n          dropdownRef.current = dropdownNode;\n        }\n      }),\n      ...(!preventKeyAction && {\n        onKeyDown: callAllEventHandlers(onKeyDown, dropdownHandleKeyDown),\n        onClick: callAllEventHandlers(onClick, dropdownHandleClick)\n      }),\n      ...rest\n    };\n  }, [dispatch, dropdownKeyDownHandlers, setGetterPropCallInfo]); // returns\n\n  const addSelectedItem = useCallback(selectedItem => {\n    dispatch({\n      type: FunctionAddSelectedItem,\n      selectedItem\n    });\n  }, [dispatch]);\n  const removeSelectedItem = useCallback(selectedItem => {\n    dispatch({\n      type: FunctionRemoveSelectedItem,\n      selectedItem\n    });\n  }, [dispatch]);\n  const setSelectedItems = useCallback(newSelectedItems => {\n    dispatch({\n      type: FunctionSetSelectedItems,\n      selectedItems: newSelectedItems\n    });\n  }, [dispatch]);\n  const setActiveIndex = useCallback(newActiveIndex => {\n    dispatch({\n      type: FunctionSetActiveIndex,\n      activeIndex: newActiveIndex\n    });\n  }, [dispatch]);\n  const reset = useCallback(() => {\n    dispatch({\n      type: FunctionReset\n    });\n  }, [dispatch]);\n  return {\n    getSelectedItemProps,\n    getDropdownProps,\n    addSelectedItem,\n    removeSelectedItem,\n    setSelectedItems,\n    setActiveIndex,\n    reset,\n    selectedItems,\n    activeIndex\n  };\n}\n\nexport { Downshift$1 as default, resetIdCounter, useCombobox, useMultipleSelection, useSelect };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}